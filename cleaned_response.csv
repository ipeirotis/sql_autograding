,BSpace Course Name,BSpace Course Id,QuizName,ï»¿QuizId,QuizAttemptNumber,QuestionId,Question,QuestionType,InputUserAnswer,Score,NetId,Comment left on User Response,AnswerKey,isQuery,Database,full_score,feedback
1,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
    A.CustomerID,
    A.CompanyName,
    A.SpendBeforeDiscount,
    (1 - (SpendafterDiscount / SpendBeforeDiscount)) AS discountApplied,
    CASE
        WHEN SpendAfterDiscount > 5000 THEN 'High'
        WHEN
            SpendAfterDiscount > 1000
                AND SpendAfterDiscount < 5000
        THEN
            'Medium'
        ELSE 'Low'
    END AS groupings
FROM
    (SELECT 
        O.CustomerID,
            C.CompanyName,
            SUM(D.Quantity * D.UnitPrice * (1 - D.Discount)) AS SpendafterDiscount,
            SUM(D.Quantity * D.UnitPrice) AS SpendBeforeDiscount
    FROM
        Orders O
    INNER JOIN OrderDetails D ON D.OrderID = O.OrderID
    INNER JOIN Customers C ON O.CustomerId = C.CustomerID
    WHERE
        YEAR(O.OrderDate) = 2016
    GROUP BY O.CustomerID , C.CompanyName) A",10.0,ab3864,Results for identical to the answer key because of incorrect subquery (from Q9); no double penalty for that.,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,The feedback from the TA was Results for identical to the answer key because of incorrect subquery (from Q9); no double penalty for that.
3,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question," Select O.OrderID, O.CustomerID, Count(D.ProductID) as NumProducts, Sum(D.Quantity) as TotalQuantity, sum(D.Quantity*D.UnitPrice*(1-D.Discount)) as TotalOrderPrice
From Orders O
	Inner join  OrderDetails  D on D.OrderID = O.OrderID    
Group by O.OrderID, O.CustomerId;",5.5,ab3864,"-3 pts for lack for HAVING
-1 pts for using the discount for total_price
-0.5 pts for the lack of ORDER BY
SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -3 pts for lack for HAVING
-1 pts for using the discount for total_price
-0.5 pts for the lack of ORDER BY
SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
4,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"use northwind;
SELECT 
    ShipCountry, AVG(Freight)
FROM
    Orders O
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT = 3;

",7.0,ab3864,"It is ""LIMIT 3"" not ""LIMIT = 3""","SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,"The feedback from the TA was It is ""LIMIT 3"" not ""LIMIT = 3"""
5,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select C.CompanyName, C.CustomerID, sum(case when O.OrderId is null then 0 else 1 end) as numOrders
from Customers C
	left join Orders O on O.CustomerID = C.CustomerID
Group BY C.CompanyName, C.CustomerID
order by numOrders asc;",10.0,ab3864,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
6,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"use northwind;
SELECT 
    min(OrderDate) as FirstOrderDate
FROM
    Orders O;

",7.5,ab3864,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
7,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"use northwind;
SELECT 
    P.ProductID, P.ProductName, S.CompanyName
FROM
    Products P
        INNER JOIN
    Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY P.ProductID DESC;
",7.5,ab3864,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
8,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT 
    ProductID, ProductName
FROM
    Products
WHERE
    ProductName LIKE '%queso%';",5.0,ab3864,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
9,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;
SELECT 
    E.FirstName, E.LastName, E.HireDate
FROM
    Employees E
WHERE
    E.Title = 'Sales Representative'
        AND E.country = 'USA';",5.0,ab3864,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
10,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"select A.*,B.distinctDays FROM 
(Select S.ShipperID, S.CompanyName, count(*) as NumberOrders
from Orders O inner join Shippers S on O.ShipVia = S.ShipperID
group by S.ShipperID, S.CompanyName) A
inner join (
select ShipperID, count(*) as distinctDays from (
Select distinct S.ShipperId, date(ShippedDate)
from Orders O inner join Shippers S on O.ShipVia = S.ShipperID ) B 
group by B.ShipperID) B
ON A.ShipperID = B.ShipperID;",6.0,ab3864,"Correct answer:
SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;



1
Speedy Express
249
188


2
United Package
326
215


3
Federal Shipping
255
198


","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was Correct answer:
SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;



1
Speedy Express
249
188


2
United Package
326
215


3
Federal Shipping
255
198


"
21,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT AVG(Freight)
FROM Orders;

SELECT AVG(Freight), ShipCountry
FROM Orders
GROUP BY ShipCountry;

SELECT AVG(Freight), ShipCountry
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC;

*ANSWER *
SELECT AVG(Freight), ShipCountry
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,acm576,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
22,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID
, COUNT(C.CustomerID) AS customer
, COUNT(OrderID) AS num_order
FROM Orders O 
INNER JOIN Customers C ON C.CustomerID = O.OrderID
GROUP BY C.CustomerID;",6.0,acm576,"-2pts Incorrect join condition ON C.CustomerID = O.OrderID&nbsp;&nbsp;
-2 pts for not doing a left join
SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -2pts Incorrect join condition ON C.CustomerID = O.OrderID&nbsp;&nbsp;
-2 pts for not doing a left join
SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
23,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT DATE(OrderDate) AS DATE_date, TIME(OrderDate) AS TIME_time
FROM Orders
ORDER BY OrderDate ASC;",4.0,acm576,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
24,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P 
LEFT JOIN Suppliers S ON S.SupplierID = P.ProductID
ORDER BY P.ProductID;

Left join gives all products names even those associated with Null for the company name",7.5,acm576,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
25,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE 'queso%';

'11','Queso Cabrales'
'12','Queso Manchego La Pastora'
",4.0,acm576,"SELECT ProductID, ProductName
FROM Products&nbsp;
WHERE ProductName LIKE '%queso%'","SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,"The feedback from the TA was SELECT ProductID, ProductName
FROM Products&nbsp;
WHERE ProductName LIKE '%queso%'"
26,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country= 'USA';

'Nancy','Davolio','2010-05-01 00:00:00'
'Janet','Leverling','2010-04-01 00:00:00'
'Margaret','Peacock','2011-05-03 00:00:00'
",5.0,acm576,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
27,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.CompanyName, S.ShipperID, O.OrderID, COUNT(S.ShipperID) AS cnt_OrdersHandled
FROM Orders O
	LEFT JOIN Shippers S ON S.ShipperID = O.ShipVia
GROUP BY S.CompanyName;


SELECT O.ShipVia
, COUNT(O.ShipVia) AS num_orders
FROM Orders O
JOIN Shippers S ON S.ShipperID = O.ShipVia;",4.0,acm576,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID; ","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID; "
67,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE 2016Spent
SELECT C.CustomerID, C.CompanyName, SUM(Quantity * UnitPrice) AS TtlPrice, SUM(Quantity * UnitPrice * Discount) AS Discount, SUM((Quantity*UnitPrice) - (Quantity*UnitPrice*Discount)) AS FinalCost, year(OrderDate)
FROM OrderDetails OD
	JOIN Orders O ON O.OrderID = OD.OrderID
    JOIN Customers C ON C.CustomerID = O.CustomerID
WHERE year(OrderDate) = 2016
GROUP BY OD.OrderID
ORDER BY C.CustomerID;

SELECT DISTINCT CustomerID, CompanyName, SUM(TtlPrice) AS TTlPrice, SUM(Discount) AS TTlDiscount, SUM(FinalCost) AS TTlFinalCost,
CASE 
	WHEN SUM(FinalCost) BETWEEN 0 AND 1000 THEN ""Low""
    WHEN SUM(FinalCost) BETWEEN 1000 AND 5000 THEN ""Medium""
    WHEN SUM(FinalCost) >5000 THEN ""High""
END AS CustomerSpend
FROM 2016Spent
GROUP BY CustomerID, CompanyName
ORDER BY CustomerSpend;",10.0,al4026,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
69,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.OrderID, CustomerID, COUNT(ProductID) AS NumProducts, SUM(Quantity) AS TtlUnits, SUM(UnitPrice * Quantity) AS OrderPrice
FROM Orders O
	JOIN OrderDetails OD ON OD.OrderID = O.OrderID
GROUP BY O.OrderID
HAVING OrderPrice >10000
ORDER BY OrderPrice DESC;",10.0,al4026,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
70,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS avgfreight
FROM Orders
GROUP BY ShipCountry
ORDER BY avgfreight DESC
LIMIT 3;",7.5,al4026,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
71,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(OrderID) AS NumOrders
FROM Customers C
	JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID
ORDER BY NumOrders DESC;",8.0,al4026,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID"
72,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT Min(OrderDate)
FROM Orders;",7.5,al4026,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
73,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY ProductId;",7.5,al4026,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
74,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,al4026,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
75,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, Title, HireDate, Country
FROM Employees
WHERE Title = ""Sales Representative"" AND COUNTRY = ""USA"";

(We could also leave off Title & Country given the prompt, but it's good practice to check against the requirements)",5.0,al4026,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
76,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(OrderID) AS OrdersHandled, COUNT(DISTINCT ShippedDate) AS distinct_days
FROM Shippers S
	JOIN Orders O ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID
ORDER BY S.ShipperID;",7.5,al4026,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
119,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"DROP TABLE IF EXISTS customer_group
create temporary table customer_group AS
select C.CustomerID, C.CompanyName, O.OrderDate, sum(OD.UnitPrice*OD.Quantity) as Total_Order_Price, sum(OD.UnitPrice*OD.Quantity*OD.Discount) as Total_Discount
from Orders O
left join Customers C on O.CustomerID = C.CustomerID
left join OrderDetails OD on O.OrderID = OD.OrderID
group by C.CustomerID, O.OrderDate
having O.OrderDate >= 2016-01-01 and O.OrderDate < 2017-01-01
order by C.CustomerID",5.0,amm9810,-5: Code didn't generate the required result,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,The feedback from the TA was -5: Code didn't generate the required result
121,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"use northwind;
select C.CustomerID, OD.OrderID, count(OD.ProductID), sum(OD.Quantity), sum(OD.UnitPrice*OD.Quantity) as Total_Order_Price
from Orders O
inner join Customers C on C.CustomerID = O.CustomerID
inner join OrderDetails OD on OD.OrderID = O.OrderID
group by OD.OrderID
order by Total_Order_Price desc
having Total_Order_Price > 10,000",8.0,amm9810,"-2 pts ""having Total_Order_Price &gt; 10,000"" should be before ORDER BY","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -2 pts ""having Total_Order_Price &gt; 10,000"" should be before ORDER BY"
122,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"use northwind;
select ShipCountry, avg(Freight)
from Orders
group by ShipCountry
order by avg(Freight) desc
limit 3",7.5,amm9810,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
123,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"use northwind;
select C.CustomerID, count(O.OrderID)
from Customers C
left join Orders O on C.CustomerID = O.CustomerID
group by C.CustomerID",10.0,amm9810,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
124,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"use northwind;
select min(OrderDate)
from Orders",7.5,amm9810,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
125,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"use northwind;
select P.ProductID, P.ProductName, S.CompanyName
from Products P
inner join Suppliers S on S.SupplierID = P.SupplierID
order by P.ProductID",7.5,amm9810,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
126,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"use northwind;
Select ProductID, ProductName
from Products
where ProductName like ""%queso%""",5.0,amm9810,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
127,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"Use northwind;
select FirstName, LastName, HireDate
from Employees
where Title = ""Sales Representative"" and Country = ""USA""",5.0,amm9810,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
128,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"use northwind;
select ShipVia, count(OrderID), count(distinct ShippedDate)
from Orders
group by ShipVia",7.0,amm9810,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
173,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT t1.CustomerID, t1.CompanyName, SUM(t3.Quantity * t3.UnitPrice) AS TotalSpent, SUM(t3.Quantity * t3.UnitPrice * t3.Discount) AS TotalDiscount
FROM Customers t1
JOIN Orders t2 ON t1.CustomerID = t2.CustomerID
JOIN OrderDetails t3 ON t2.OrderID = t3.OrderID
WHERE YEAR(t2.OrderDate) = 2016
  CASE 
    WHEN TotalSpent-TotalDiscount BETWEEN 0 AND 1000 THEN 'Low'
    WHEN TotalSpent-TotalDiscount BETWEEN 1000 AND 5000 THEN 'Medium'
    WHEN TotalSpent-TotalDiscount >  5000 THEN 'High'
  END AS CustomerGroup
GROUP BY CustomerGroup;",5.0,ar6962,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
175,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT t1.OrderID, t1.CustomerID, 
       SUM(t2.Quantity) AS TotalUnits, 
       SUM(t2.Quantity * t2.UnitPrice) AS TotalPrice
FROM Orders t1
JOIN OrderDetails t2 ON t1.OrderID = t2.OrderID
GROUP BY t1.OrderID, t1.CustomerID
HAVING TotalPrice > 10000
ORDER BY TotalPrice DESC;",9.0,ar6962,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
176,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"Select ShipCountry, AVG(Freight) AS AverageFreight
From Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC
LIMIT 3; ",7.5,ar6962,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
177,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT t1.CustomerID, t1.CompanyName, COUNT(t2.OrderID) AS OrderCount
FROM Customers t1
JOIN Orders t2 ON t1.CustomerID = t2.CustomerID
GROUP BY t1.CustomerID, t1.CompanyName
ORDER BY OrderCount DESC;",8.0,ar6962,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID"
178,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"Select MIN(OrderDate) AS FirstOrderDate
From Orders;",7.5,ar6962,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
179,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"use northwind;

Select t1.ProductID, t1.ProductName, t2.CompanyName
From Products t1
JOIN Suppliers t2 ON t1.SUpplierID = t2.SupplierID
ORDER BY t1.ProductID; ",7.5,ar6962,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
180,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"use northwind;

Select ProductID, ProductName
From Products
Where ProductName LIKE '%queso%';",5.0,ar6962,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
181,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;

Select Title
From Employees;

Select Country
From Employees;

Select FirstName, LastName, HireDate
From Employees
Where Title = 'Sales Representative' AND Country = 'USA'; ",5.0,ar6962,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
182,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"Select ShipVia
From Orders;

Select ShipperID
From Shippers;

SELECT t1.ShipperID, t1.CompanyName, COUNT(t2.OrderID) AS OrderCount, COUNT(DISTINCT t2.ShippedDate) AS DistinctDays
FROM Shippers t1
JOIN Orders t2 ON t1.ShipperID = t2.ShipVia
GROUP BY t1.ShipperID, t1.CompanyName
ORDER BY t1.ShipperID;",7.5,ar6962,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
193,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"DROP TABLE IF EXISTS ' 2016Spend';
CREATE TEMPORARY TABLE '2016Spend'
USE northwind ;
SELECT O.CustomerID
	, S.CompanyName
	, O.OrderID
	, D.Quantity*D.UnitPrice AS OrderPrice
    ,D.Quantity*D.UnitPrice*D.Discount AS withDiscount
FROM Orders O 
	LEFT JOIN Customers C ON O.CustomerID = C.CustomerID
    LEFT JOIN Shippers S ON O.ShipVia = S.ShipperID
    LEFT JOIN OrderDetails D ON D.OrderID = O.OrderID
WHERE OrderDate LIKE '2016%'
GROUP BY CustomerID, OrderID,  D.Quantity , D.UnitPrice, D.Discount
ORDER BY O.CustomerID
;
",5.0,bmt8433,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
195,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"USE northwind ;
SELECT C.CustomerID
       , O.OrderID
       , SUM(D.ProductID) AS num_products
       , D.Quantity
       , D.UnitPrice
	, D.Quantity*D.UnitPrice AS OrderPrice
FROM Orders O
	JOIN Customers C ON C.CustomerID = O.CustomerID
       JOIN OrderDetails D ON D.OrderID = O.OrderID
GROUP BY O.OrderID, D.Quantity, D.UnitPrice
ORDER BY OrderPrice DESC
;",4.0,bmt8433,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
196,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"USE northwind ;
SELECT AVG(Freight) AS avg_freight, ShipCountry
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC        
LIMIT 3
;      ",7.5,bmt8433,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
197,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"USE northwind ;
SELECT C.CustomerID, C.ContactName, COUNT(O.OrderID) AS num_orders
FROM Customers C
	JOIN Orders O ON O.CustomerID = C.CustomerID
Group BY CustomerID
ORDER BY num_orders DESC
;",8.0,bmt8433,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
198,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"USE northwind ;
SELECT Min(OrderDate) AS 'First Order'
FROM Orders
;",7.5,bmt8433,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
199,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"USE northwind ;
SELECT P.ProductID, P.ProductName, S. CompanyName 
FROM Products P
	JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY ProductID ASC
;",7.5,bmt8433,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
200,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"USE northwind ;
SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%'
;",5.0,bmt8433,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
201,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind ;
SELECT FirstName, LastName, HireDate
FROM Employees
WHERE title = 'Sales Representative' AND Country = 'USA'
;",5.0,bmt8433,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
202,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"USE northwind ;
SELECT 
  S.ShipperID
, S.CompanyName
, COUNT(O.OrderID) AS 'num_orders'
, COUNT(DISTINCT O.ShippedDate) AS 'num_days'
FROM Orders O
	JOIN Shippers S ON S.ShipperID = O.ShipVia
GROUP BY S.CompanyName, ShipperID
;    ",7.5,bmt8433,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
213,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select *, (total_price - total_discount) As total_price_after_discount,
CASE 
When (total_price - total_discount) Between 0 AND 1000 Then ""LOW""
When (total_price - total_discount) Between 1001 AND 5000 Then ""Medium""
When (total_price - total_discount) > 5000 Then ""High""
End As customer_group
from total_spend_2016",5.0,cjc832,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
215,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select OD.OrderID, O.CustomerID, count(distinct OD.ProductID) As num_products, sum(OD.Quantity) As total_units, sum(OD.UnitPrice*OD.Quantity) As total_price
from Orders As O
join OrderDetails As OD on O.OrderID = OD.OrderID
group by OD.OrderID,O.CustomerID
having total_price > 10000
order by total_price desc;",10.0,cjc832,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
216,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, round(avg(Freight),2) AS avg_freight_charges
from Orders
group by ShipCountry
order by avg_freight_charges desc
limit 3;",7.5,cjc832,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
217,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.CustomerID, count(OrderID) As num_orders
from Customers As C
left join Orders As O on O.CustomerID = C.CustomerID
Group by C.CustomerID
order by num_orders asc;
",10.0,cjc832,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
218,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"select min(OrderDate) 
from Orders;",7.5,cjc832,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
219,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select P.ProductID, P.ProductName, S.CompanyName
from Products As P
join Suppliers As S on P.SupplierID = S.SupplierID
order by P.ProductID asc;",7.5,cjc832,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
220,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
From Products
where ProductName Like ""%queso%"";",5.0,cjc832,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
221,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, Cast(HireDate AS Date) As Date_Hired
from Employees
Where Title = ""Sales Representative"" AND Country = ""USA"";",5.0,cjc832,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
222,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"select  S.ShipperID, S.CompanyName, count(O.OrderID) As num_orders, count(distinct O.ShippedDate) As num_distinct_days
from Orders As O
join Shippers As S on O.ShipVia = S.ShipperID
Group by S.ShipperID, S.CompanyName",7.5,cjc832,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
233,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"DROP TABLE IF EXISTS Totalamtpercustomer;
Create Temporary Table Totalamtpercustomer As
Select c.CustomerID, c.CompanyName, sum((od.UnitPrice * od.Quantity)) as totalprice, sum((od.UnitPrice * od.Quantity * od.Discount)) as discount
from OrderDetails od
	join Orders o on od.OrderID = o.OrderID
    join Customers c on o.CustomerID = c.CustomerID
where year(orderDate) = 2016
group by c.CustomerID, c.CompanyName
order by c.CustomerID;

DROP TABLE IF EXISTS Finalamtpercustomer;
Create Temporary Table Finalamtpercustomer As
Select CustomerID, CompanyName, sum(totalprice - discount) as finalprice
from Totalamtpercustomer
Group by CustomerID, CompanyName
order by CustomerID;

Select *
CASE
	WHEN finalprice < 1000 then 'Low'
    When finalprice > 1000 and < 5000 then 'Medium'
    When finalprice > 5000 then 'High'
End as CustomerLevel
From Finalamtpercustomer;",5.0,deb9869,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
235,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"Select o.CustomerID, count(od.ProductID), sum(od.Quantity) as quantity, sum((UnitPrice * Quantity)) as totalprice
from Orders o 
	join OrderDetails od on o.OrderID = od.OrderID
Group by o.CustomerID
having totalprice > 10000
Order by totalprice desc;",6.0,deb9869,"-2pts ""for each order"", not ""for each customer""
-2pts COUNT incorrect
SELECT&nbsp;O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -2pts ""for each order"", not ""for each customer""
-2pts COUNT incorrect
SELECT&nbsp;O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
236,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"Select ShipCountry, avg(freight) as avgfreight
from Orders
Group by ShipCountry
order by avgfreight desc
limit 3;",7.5,deb9869,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
237,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select CustomerID, count(*)
from Orders
group by CustomerID;",8.0,deb9869,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
238,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"Select OrderDate
from Orders
limit 1;",4.0,deb9869,"Your approach could work if you had an ORDER BY OrderDate clause in your SQL
SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders

Select OrderDate
from Orders
ORDER BY OrderDate
limit 1;&nbsp;","SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,"The feedback from the TA was Your approach could work if you had an ORDER BY OrderDate clause in your SQL
SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders

Select OrderDate
from Orders
ORDER BY OrderDate
limit 1;&nbsp;"
239,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"Select p.ProductID, p.ProductName, s.CompanyName
from Products p
	join Suppliers s on p.SupplierID = s.SupplierID
Order by p.ProductID;",7.5,deb9869,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
240,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"Select ProductID, ProductName
from Products
Where ProductName like ""%queso%"";",5.0,deb9869,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
241,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"Select FirstName, LastName, HireDate
from Employees
Where Title = ""Sales Representative"" and Country = ""USA"";",5.0,deb9869,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
242,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"Select s.ShipperID, s.CompanyName, count(o.OrderID), count(distinct day(o.ShippedDate))
from Shippers s
	join Orders o on s.ShipperID = o.ShipVia
Group by s.ShipperID, s.CompanyName;",7.0,deb9869,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
298,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE customer_order_summary AS
  SELECT Customers.CustomerID, Customers.CompanyName, Orders.OrderID,
         SUM(OrderDetails.Quantity*OrderDetails.UnitPrice) AS total_price_per_order,
         SUM(OrderDetails.Quantity*OrderDetails.UnitPrice*OrderDetails.Discount) AS total_discount_per_order
  FROM Customers
  JOIN Orders ON Orders.CustomerID = Customers.CustomerID AND YEAR(Orders.OrderDate) = 2016
  JOIN OrderDetails ON OrderDetails.OrderID = Orders.OrderID
  GROUP BY Orders.CustomerID, Customers.CompanyName, Orders.OrderID;

CREATE TEMPORARY TABLE customer_summary AS
	SELECT CustomerID, CompanyName,
			SUM(total_price_per_order) AS total_for_all_orders,
			SUM(total_discount_per_order) AS total_discount_applied
	FROM customer_order_summary
	GROUP BY CustomerID, CompanyName
	ORDER BY CustomerID;

SELECT CustomerID, CompanyName, total_for_all_orders, total_discount_applied,
  CASE WHEN 0 < total_for_all_orders - total_discount_applied < 1000 THEN '",7.0,fc2187,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
300,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"CREATE TEMPORARY TABLE order_summary AS
  SELECT Orders.CustomerID,
        Orders.OrderID,
          COUNT(*) AS total_products,
          SUM(OrderDetails.Quantity) AS total_units,
          SUM(OrderDetails.Quantity*OrderDetails.UnitPrice) AS total_price
  FROM Orders
  JOIN OrderDetails ON OrderDetails.OrderID = Orders.OrderID
  GROUP BY Orders.customerid, Orders.OrderID;
 
SELECT *
FROM order_summary
WHERE total_price > 10000
ORDER BY total_price DESC;",9.5,fc2187,"-0.5 pts this does not need a subquery.
SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC&nbsp;","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -0.5 pts this does not need a subquery.
SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC&nbsp;"
301,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,fc2187,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
302,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, C.CompanyName, COUNT(*) AS Total_Orders_Placed
FROM Customers C
JOIN Orders O on C.CustomerID= O.CustomerID
GROUP BY C.CustomerID;",8.0,fc2187,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
303,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
FROM Orders;",7.5,fc2187,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
304,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Suppliers S
JOIN Products P on S.SupplierID = P.SupplierID 
ORDER BY P.ProductID; ",7.5,fc2187,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
305,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';
",5.0,fc2187,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
306,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;
SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,fc2187,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
307,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT SH.ShipperID, SH.CompanyName, COUNT(O.OrderID) AS Orders_Count, COUNT(DISTINCT O.ShippedDate) AS Total_Pick_Up_Days
FROM Shippers SH
JOIN Orders O on SH.ShipperID= O.ShipVia
GROUP BY SH.ShipperID;",7.5,fc2187,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
360,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT o.OrderID, o.CustomerID, SUM(DISTINCT od.ProductID) AS num_products, SUM(od.Quantity) AS total_units, od.Quantity*od.UnitPrice AS total_price
	FROM Orders o
		INNER JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY o.OrderID, o.CustomerID, total_price
HAVING total_price > 10000
ORDER BY total_price DESC;",4.0,jfg397,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
361,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT o.ShipCountry, AVG(o.Freight) AS Avg_Freight
	FROM Orders o
    GROUP BY o.ShipCountry
    ORDER BY Avg_Freight DESC
    LIMIT 3;",7.5,jfg397,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
362,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select c.CompanyName as Customer, COUNT(o.OrderID) AS num_orders
	FROM Customers c
		LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
	GROUP BY c.CompanyName;",10.0,jfg397,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
363,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT DATE (OrderDate) AS Order_Date, TIME (OrderDate) AS Time
	FROM Orders
		ORDER BY Order_Date ASC, Time ASC
        LIMIT 1;",7.5,jfg397,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
364,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT p.ProductID, p.ProductName, s.CompanyName AS Supplier_Company_Name
	FROM Products p
		INNER JOIN Suppliers s ON p.SupplierID = s.SupplierID
	ORDER BY p.ProductID ASC;",7.5,jfg397,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
365,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT p.ProductID, p.ProductName
	FROM Products p
		WHERE p.ProductName LIKE '%queso%';",5.0,jfg397,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
366,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT e.FirstName, e.LastName, e.HireDate
	FROM Employees e
		WHERE e.Title = 'Sales Representative' AND e.Country = 'USA';",5.0,jfg397,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
367,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT s.ShipperID, s.CompanyName, COUNT(o.OrderID) AS num_orders, COUNT(DISTINCT DATE(o.ShippedDate)) AS days_visiting_warehouse
	FROM Shippers s
		INNER JOIN Orders o ON s.ShipperID = o.ShipVia
			GROUP BY s.ShipperID, s.CompanyName;",7.5,jfg397,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
378,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT S.CustomerID, S.CompanyName,P.TotalAmount AS TotalAmountSpent, P.DiscountApplied AS TotalDiscount, 
    CASE
        WHEN P.TotalAmount < 1000 THEN 'Low'
        WHEN P.TotalAmount BETWEEN 1000 AND 5000 THEN 'Medium'
        WHEN P.TotalAmount > 5000 THEN 'High'
    END AS GROUP
FROM Customers S
INNER JOIN (SELECT CustomerID, SUM(TotalAmount) as TotalAmount, SUM(Discount) as DiscountApplied
    FROM Orders
    WHERE YEAR(OrderDate) = 2016
    GROUP BY CustomerID) P ON P.CustomerID = S.CustomerID;",7.0,ll4515,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
380,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT S.CustomerID, COUNT(P.ProductID) AS number_of_products, SUM(P.Quantity) AS total_units, SUM(P.Quantity*P.UnitPrice) AS total_price
    FROM Orders S
    INNER JOIN OrderDetails P ON P.OrderID = S.OrderID
    GROUP BY S.CustomerID
    HAVING SUM(P.Quantity*P.UnitPrice) > 10000
    ORDER BY total_price DESC;",8.0,ll4515,"-2 pts ""for each order"" not ""for each customer""
SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -2 pts ""for each order"" not ""for each customer""
SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
381,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS avgfreightcost
    FROM Orders
    GROUP BY ShipCountry
    ORDER BY avgfreightcost DESC
    LIMIT 3;",7.5,ll4515,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
382,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT S.CustomerID, COUNT(P.OrderID) AS number_of_orders
	FROM Customers S
       INNER JOIN Orders P ON P.CustomerID = S.CustomerID
       GROUP BY S.CustomerID;",8.0,ll4515,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
383,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
	FROM Orders;",7.5,ll4515,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
384,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT S.ProductID, S.ProductName, P.CompanyName
	FROM Products S
		INNER JOIN Suppliers P ON P.SupplierID = S.SupplierID
	ORDER BY S.ProductID;",7.5,ll4515,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
385,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
	FROM Products
       WHERE ProductName LIKE '%queso%';",5.0,ll4515,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
386,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;

SELECT FirstName, LastName, HireDate
	FROM Employees
       WHERE Title = 'Sales Representative';",5.0,ll4515,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
387,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(P.OrderID) AS number_of_orders, COUNT(DISTINCT DATE(P.ShippedDate)) AS number_of_distinct_days
	FROM Shippers S
       INNER JOIN Orders P ON  P.ShipVia = S.ShipperID
       GROUP BY S.ShipperID;",7.5,ll4515,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
398,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"with e as (
	select O.CustomerID as customerID, C.CompanyName as companyName, round(sum(OD.UnitPrice * OD.Quantity), 2) as totalOrderPrice, round(sum(OD.UnitPrice * OD.Quantity * OD.Discount), 2) as totalDiscountApplied
	from OrderDetails OD inner join Orders O on OD.OrderID = O.OrderID inner join Products P on OD.ProductID = P.ProductID inner join Customers C on O.CustomerID = C.CustomerID
	where Year(O.OrderDate)=2016
	group by O.CustomerID
)
select e.customerID, e.companyName, e.totalOrderPrice, e.totalDiscountApplied,
	case when (e.totalOrderPrice - e.totalDiscountApplied) >= 0 and (e.totalOrderPrice - e.totalDiscountApplied) < 1000 then 'low'
         when (e.totalOrderPrice - e.totalDiscountApplied) >= 1000 and (e.totalOrderPrice - e.totalDiscountApplied) < 5000 then 'medium'
		 else 'high' end as spendGrouping
from e order by customerID ASC;",10.0,ma4897,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
400,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"with E as (
select O.CustomerID as customerID, count(OD.ProductID) as numOfProducts, count(OD.Quantity) as unitsInOrder, sum(OD.UnitPrice * OD.Quantity) as totalOrderPrice
from OrderDetails OD inner join Orders O on OD.OrderID = O.OrderID inner join Products P on OD.ProductID = P.ProductID 
group by OD.OrderID 
)
select customerID, numOfProducts, unitsInOrder, totalOrderPrice from E 
where totalOrderPrice > 10000
order by totalOrderPrice DESC;",9.0,ma4897,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
401,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, AVG(Freight) as average_freight from Orders group by ShipCountry order by average_freight DESC limit 3;",7.5,ma4897,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
402,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select Customers.CustomerID, Customers.ContactName, count(*) as NumberOfOrders from Orders inner join Customers on Orders.CustomerID = Customers.CustomerID group by Customers.CustomerID order by Customers.CustomerID ASC;",8.0,ma4897,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
403,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,select OrderDate from Orders order by OrderDate ASC limit 1;,7.5,ma4897,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
404,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select ProductID, ProductName, CompanyName from Products inner join Suppliers on Products.SupplierID = Suppliers.SupplierID order by ProductID ASC;",7.5,ma4897,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
405,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName from Products where ProductName like '%queso%';",5.0,ma4897,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
406,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate from Employees where Title=""Sales Representative"" and Country=""USA"";",5.0,ma4897,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
407,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"select ShipperID, count(*) as orders, count(distinct ShippedDate) as distinct_days from Shippers inner join Orders on Shippers.ShipperID = Orders.ShipVia group by ShipperID;",7.0,ma4897,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
418,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
		CASE
			WHEN totalprice < '1000' THEN 'Low'
            ELSE 'ran out of time'
		END AS lastquestion

---------------------------shouldve made below a table then case no time though
SELECT *
FROM(
	SELECT O.CustomerID, C.CompanyName, SUM(D.UnitPrice*D.Quantity) AS totalprice, SUM(D.UnitPrice*D.Quantity*D.Discount) AS totaldiscount
	From Orders O
		LEFT JOIN Customers C ON O.CustomerID = C.CustomerID
		LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID
	WHERE O.OrderDate LIKE '2016%'
	GROUP BY O.CustomerID
	ORDER BY O.CustomerID
) A;",8.0,mac989,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
420,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.OrderID, O.CustomerID, COUNT(DISTINCT D.ProductID) AS num_products, SUM(D.Quantity) AS num_units,SUM(D.UnitPrice*D.Quantity) AS order_price
FROM Orders O
	LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING order_price > 10000
ORDER BY order_price DESC;",10.0,mac989,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
421,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,mac989,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
422,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.OrderID)
FROM Customers C
	LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",10.0,mac989,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
423,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
From Orders;",7.5,mac989,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
424,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	LEFT JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",7.5,mac989,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
425,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
from Products
WHERE ProductName LIKE '%queso%';",5.0,mac989,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
426,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
from Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,mac989,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
427,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"
SELECT O.ShipVia as ShipperID,S.CompanyName,COUNT(O.OrderID) AS num_orders, COUNT(DISTINCT O.ShippedDate) AS distinct_ship_days
FROM Orders O
	LEFT JOIN Shippers S ON O.Shipvia = S.ShipperID
GROUP BY O.Shipvia;",7.5,mac989,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
438,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"DROP TABLE IF EXISTS orders_2016;
CREATE TEMPORARY TABLE orders_2016 AS   
SELECT O.CustomerID, C.CompanyName, SUM(D.Quantity*D.UnitPrice) as total_order_price, SUM(D.Quantity*D.UnitPrice*D.Discount) as discount_applied
From Orders O
INNER JOIN Customers C ON C.CustomerID = O.CustomerID
INNER JOIN OrderDetails D ON D.OrderID = O.OrderID
WHERE O.OrderDate LIKE ""2016%""
GROUP BY O.CustomerID;

SELECT CustomerID, CompanyName, total_order_price, discount_applied,
CASE
    WHEN total_order_price - discount_applied <= 1000 THEN 'Low'
    WHEN total_order_price - discount_applied > 1000 AND total_order_price - discount_applied <= 5000 THEN 'Medium'
    WHEN total_order_price - discount_applied > 5000 THEN 'High'
    END AS total_spend_group
FROM orders_2016;",10.0,mdh350,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
440,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, Count(*) as num_products, SUM(Quantity) as total_units, SUM(Quantity*UnitPrice) as total_order_price
From OrderDetails D
INNER JOIN Orders O ON D.OrderID = O.OrderID
GROUP By D.OrderID
HAVING total_order_price > 10000
ORDER BY total_order_price DESC;",10.0,mdh350,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
441,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) as avg_freight_cost
FROM Orders
group by ShipCountry
Order by avg_freight_cost DESC
LIMIT 3;",7.5,mdh350,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
442,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(*) as cnt_of_orders
From Orders O
INNER JOIN Customers C ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID; ",8.0,mdh350,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
443,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
FROM Orders;",7.5,mdh350,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
444,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
INNER JOIN Suppliers S ON S.SupplierID = P.SupplierID; ",7.5,mdh350,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
445,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
Where ProductName LIKE ""%queso%"";",5.0,mdh350,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
446,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = ""Sales Representative"";",4.0,mdh350,"SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' ","SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,"The feedback from the TA was SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' "
447,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, Count(*) as number_of_orders, COUNT(DISTINCT O.ShippedDate) as days_in_warehouse
From Orders O
INNER JOIN Shippers S ON S.ShipperID = O.ShipVia
GROUP BY ShipperID; ",7.5,mdh350,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
469,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"select * from artist;
",1.0,my2204,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
470,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"select C.CustomerID, C.CompanyName, sum(OD.unitprice*OD.quantity) as total_price, round(sum(OD.unitprice*OD.quantity*OD.discount),2) as discount from Customers C left join Orders O on C.customerid = O.customerid left join OrderDetails OD on O.orderid = OD.orderid where year(O.orderdate)=2016 group by C.customerid order by C.customerid;
",10.0,my2204,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
471,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select O.orderid, count(OD.productid), sum(OD.quantity), sum(OD.unitprice*OD.quantity)  from Orders O left join OrderDetails OD on O.orderid=OD.orderid group by O.orderid having sum(OD.unitprice*OD.quantity) >10000 order by sum(OD.unitprice*OD.quantity) desc;",7.0,my2204,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
472,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, round(avg(freight),2) as avg_freight from Orders group by shipcountry order by avg_freight desc limit 3;",7.5,my2204,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
473,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.CustomerID, count(orderid) as num_order from Customers C left join Orders O on C.customerid = O.customerid group by C.customerId;",7.5,my2204,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
474,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select P.ProductID, P.ProductName, S.CompanyName from Products P inner join Suppliers S on P.supplierid = S.supplierid order by P.ProductID;",5.0,my2204,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
475,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName from Products where productname like '%queso%';",5.0,my2204,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
476,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate from Employees where title = 'sales representative' and country = 'USA';
",5.0,my2204,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
477,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"select T.origin,T.dest,A.state from (select origin,dest from m_ticket_prices group by origin, dest) as T left join m_airports A on T.origin =A.airport left join m_airports AA on T.dest=AA.airport where A.state = AA.state;",7.5,my2204,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
478,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"select A.state, count(T.origin), count(T.carrier), sum(T.passengers), avg(fare_per_mile) from m_airports A inner join m_ticket_prices T on T.origin = A.airport group by A.state;
",7.5,my2204,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
489,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select origin,dest, min(fare), max(fare),avg(fare), count(carrier), sum(passengers) from m_ticket_prices group by origin, dest having count(carrier) >=3 and sum(passengers) >10000;
",7.5,my2204,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
490,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select P.*, M.state, rank() over(partition by state order by total_number desc) as state_rank, rank() over(order by total_number desc) as national_rank from passengers_per_airport P left join m_airports M on P.origin = M.airport order by state;
",4.0,my2204,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
491,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"drop table if exists passengers_per_airport; 
create temporary table passengers_per_airport as 
	select origin, sum(passengers) as total_number from m_ticket_prices group by origin;",1.0,my2204,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
492,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"select S.day, case when (S.cnt_people-ifnull(I.cnt_people,0)) <0 then 0 else (S.cnt_people-ifnull(I.cnt_people,0)) end total_active from SignUpsOn S left outer join InactiveOn I on S.day = I.day order by S.day;
",4.0,my2204,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
493,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"select day, sum(cnt_people) over (order by day) total_number_inactive from InactiveOn order by day;
",2.0,my2204,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
494,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"select day, sum(cnt_people) over (order by day) total_number from SignUpsOn order by day;
",2.0,my2204,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
495,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"drop table if exists InactiveOn; 
create temporary table InactiveOn as 
	select date(P.lastupdate) day,count(P.lastupdate) cnt_people from Profiles P group by P.lastupdate ;
",1.0,my2204,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
496,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"drop table if exists SignUpsOn; 
create temporary table SignUpsOn as 
	select date(P.membersince) day,count(P.membersince) cnt_people from Profiles P group by P.membersince ;
",1.0,my2204,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
497,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"create temporary table male_table as
select first_name, count(first_name) as male_freq from actors where first_name in (select first_name from eligible_names) group by first_name,gender having gender = 'M' ;

create temporary table female_table as
select first_name, count(first_name) as female_freq from actors where first_name in (select first_name from eligible_names) group by first_name,gender having gender = 'F' ;


select male_table.first_name, abs(log(male_table.male_freq/female_table.female_freq)) as ambiguous from male_table inner join female_table on male_table.first_name = female_table.first_name order by ambiguous;
",2.0,my2204,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
498,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"drop table if exists male_names; 
create temporary table male_names as 
	select first_name from actors where gender = 'M';
select first_name, count(first_name) as frequencies from actors where first_name in (select first_name from eligible_names) and first_name not in (select first_name from male_names) group by first_name order by frequencies desc;
",1.0,my2204,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
499,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"drop table if exists female_names; 
create temporary table female_names as 
	select first_name from actors where gender = 'F';
    
select first_name, count(first_name) as frequencies from actors where first_name in (select first_name from eligible_names) and first_name not in (select first_name from female_names) group by first_name order by frequencies desc;
",1.0,my2204,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
500,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"drop table if exists eligible_names;
create temporary table eligible_names as 
	select first_name,count(first_name) as cnt_actor from actors where first_name not like '%.%' and first_name not like '%\)%' group by first_name having count(first_name) >=50 order by cnt_actor;
",1.0,my2204,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
501,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id,T.album_id,T.track_id, T.track_name,min(TP.played_on)as min_played_on,max(TP.played_on) as max_played_on from track T left join tracks_played TP on T.artist_id = TP.artist_id and T.album_id=TP.album_id and T.track_id = TP.track_id group by T.artist_id,T.album_id,T.track_id;
",1.0,my2204,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
502,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select R.artist_id, R.artist_name, count(L.album_id) as num_albums from artist R left join album L on R.artist_id= L.artist_id group by R.artist_id;",1.0,my2204,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
503,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(TP.played_on) as date_played, R.artist_id, R.artist_name, count(distinct TP.user_id) as users, sum(T.time) as total_time, count(TP.track_id) as total_tracks from tracks_played TP inner join artist R on TP.artist_id = R.artist_id left join track T on TP.artist_id= T.artist_id and TP.album_id=T.album_id and TP.track_id=T.track_id group by date(TP.played_on),R.artist_id order by date(TP.played_on);
",1.0,my2204,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
504,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select U.user_id, count(TP.track_id) as tracks_played, coalesce(sum(time),0) as total_time from users U left join tracks_played TP on U.user_id = TP.user_id left join track T on TP.artist_id= T.artist_id and TP.album_id=T.album_id and TP.track_id=T.track_id group by U.user_id;",1.0,my2204,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
505,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select L.artist_id,L.album_id, sum(time) as total_length from album L left join track T on L.album_id=T.album_id and L.artist_id=T.artist_id group by L.artist_id,L.album_id having sum(time) > 60;
",1.0,my2204,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
506,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select L.artist_id,L.album_id, count(track_name) as track_cnt, sum(time) as total_length from album L left join track T on L.album_id=T.album_id and L.artist_id=T.artist_id group by L.artist_id,L.album_id;
",1.0,my2204,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
507,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select A.artist_id, count(L.album_id) cnt_albums from artist A inner join album L on A.artist_id = L.artist_id group by A.artist_id;",1.0,my2204,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
508,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select round(avg(time),6) as avg_time,round(stddev(time),6) as std_time from track;",1.0,my2204,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
509,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id) from track;
",1.0,my2204,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
510,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(artist_id) from artist;
",1.0,my2204,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
511,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name from tracks_played TP right outer join users U on TP.user_id = U.user_id where TP.user_id is null;
",1.0,my2204,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
512,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select TP.user_id, U.first_name, U.last_name, A.album_name,T.track_name,TP.played_on from tracks_played TP inner join users U on TP.user_id = U.user_id inner join album A on TP.artist_id = A.artist_id and TP.album_id= A.album_id inner join track T on  TP.artist_id = T.artist_id and TP.album_id = T.album_id and TP.track_id = T.track_id order by user_id asc, played_on asc;",1.0,my2204,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
513,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.*, a.* from track T inner join artist as a on T.artist_id = a.artist_id where a.artist_name = ""The Stone Roses"" order by time asc;",1.0,my2204,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
514,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, L.album_name, a.artist_name from track T inner join album L on L.album_id = T.album_id and L.artist_id = T.artist_id inner join artist as a on T.artist_id = a.artist_id;",1.0,my2204,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
515,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select * from track T inner join album L on L.album_id = T.album_id and L.artist_id = T.artist_id where L.album_name = 'Second Coming';
",1.0,my2204,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
516,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select * from album L inner join artist R  on L.artist_id = R.artist_id where R.artist_name = 'New Order'; 
",1.0,my2204,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
517,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,select * from track where track_name like '%love%';,1.0,my2204,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
518,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from track where artist_id in (1,3,5);
select * from track where artist_id = 1 or artist_id = 3 or artist_id = 5;",1.0,my2204,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
519,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,select * from album where album_name > 'f' and album_name < 'S';,0.5,my2204,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
520,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track where track_name < 'm' ; 
",1.0,my2204,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
521,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * from track where artist_id = 3 and album_id = 2;
",1.0,my2204,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
522,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album where artist_id = 4;
",1.0,my2204,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
523,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist where artist_name = 'The Rolling Stones';
",1.0,my2204,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
524,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * from artist where artist_id = 5;
",1.0,my2204,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
531,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select * from track order by time asc limit 10;
",1.0,my2204,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
532,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_name as album_title, artist_id from album;
",1.0,my2204,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
533,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name from artist order by artist_name asc;
",1.0,my2204,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
534,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"select * from track;
",1.0,my2204,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
535,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"select * from album;
",1.0,my2204,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
537,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, total_order_price,total_discount_applied,
	CASE
		WHEN amnount_spend_after_discount <1000 THEN ""Low""
        WHEN amnount_spend_after_discount >1000 AND amnount_spend_after_discount <5000 THEN ""Meidum""
        WHEN amnount_spend_after_discount >5000 THEN ""High""
	END AS Cust_Group
From(
SELECT C.CustomerID
		, C.CompanyName
        , SUM(D.UnitPrice*D.Quantity) AS total_order_price
        , SUM(D.UnitPrice*D.Quantity*D.Discount) AS total_discount_applied
        , SUM(D.UnitPrice*D.Quantity)-SUM(D.UnitPrice*D.Quantity*D.Discount) AS amnount_spend_after_discount
FROM Orders O
	JOIN Customers C ON C.CustomerID=O.CustomerID
    JOIN OrderDetails D ON O.OrderID=D.OrderID
WHERE YEAR(OrderDate)=2016
GROUP BY C.CustomerID
ORDER BY C.CustomerID
)A
ORDER BY Cust_Group;",10.0,nbc9275,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
539,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.OrderID
	, C.CustomerID
    , COUNT(ProductID) AS number_of_products
    , SUM(Quantity) AS total_units_in_order
    , SUM(UnitPrice*Quantity) AS total_order_price
FROM Orders O
	JOIN Customers C ON C.CustomerID=O.CustomerID
    JOIN OrderDetails D ON O.OrderID=D.OrderID 
GROUP BY O.OrderID
HAVING total_order_price >10000
ORDER BY total_order_price DESC;",10.0,nbc9275,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
540,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,nbc9275,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
541,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.OrderID)
FROM Customers C
	LEFT JOIN Orders O ON C.CustomerID=O.CustomerID
GROUP BY C.CustomerID
ORDER BY COUNT(O.OrderID) DESC;",10.0,nbc9275,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
542,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
FROM Orders;",7.5,nbc9275,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
543,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	JOIN Suppliers S ON P.SupplierID=S.SupplierID
ORDER BY ProductID;",7.5,nbc9275,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
544,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,nbc9275,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
545,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title=""Sales Representative"" and Country=""USA"";",5.0,nbc9275,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
546,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(OrderID) AS num_orders, COUNT(DISTINCT ShippedDate) AS num_days_on_prem
FROM Shippers S
	JOIN Orders O ON S.ShipperID=O.ShipVia
GROUP BY ShipperID;",7.5,nbc9275,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
623,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
    c.CustomerID, 
    c.CompanyName, 
    TotalAmountSpentBeforeDiscounts, 
    TotalDiscountApplied, 
    CASE 
        WHEN TotalAmountSpentAfterDiscounts BETWEEN 0 AND 1000 THEN 'Low' 
        WHEN TotalAmountSpentAfterDiscounts BETWEEN 1000 AND 5000 THEN 'Medium' 
        ELSE 'High' 
    END AS SpendingGroup
FROM 
    Customers c 
    LEFT JOIN (
        SELECT 
            o.CustomerID, 
            SUM(od.Quantity * od.UnitPrice) AS TotalAmountSpentBeforeDiscounts, 
            SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscountApplied, 
            SUM(od.Quantity * od.UnitPrice * (1 - od.Discount)) AS TotalAmountSpentAfterDiscounts
        FROM 
            Orders o 
            INNER JOIN OrderDetails od ON o.OrderID = od.OrderID
        WHERE 
            YEAR(o.OrderDate) = 2016 
        GROUP BY 
            o.CustomerID
    ) s ON c.CustomerID = s.CustomerID
ORDER BY 
    c.CustomerID;",10.0,ql2084,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
624,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT Customers.CustomerID, Customers.CompanyName,
       SUM(COALESCE(OrderDetails.Quantity * OrderDetails.UnitPrice, 0)) AS Total_Price,
       SUM(COALESCE(OrderDetails.Quantity * OrderDetails.UnitPrice * OrderDetails.Discount, 0)) AS Total_Discount
FROM Customers
LEFT OUTER JOIN Orders ON Customers.CustomerID = Orders.CustomerID
LEFT OUTER JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
WHERE YEAR(Orders.OrderDate) = 2016
GROUP BY Customers.CustomerID, Customers.CompanyName
ORDER BY Customers.CustomerID;",10.0,ql2084,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
625,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT Orders.CustomerID, COUNT(DISTINCT OrderDetails.ProductID) AS Num_Products,
       SUM(OrderDetails.Quantity) AS Total_Units,
       SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) AS Total_Price
FROM Orders
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
GROUP BY Orders.OrderID
HAVING Total_Price > 10000
ORDER BY Total_Price DESC;",7.5,ql2084,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
626,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS Avg_Freight
FROM Orders
GROUP BY ShipCountry
ORDER BY Avg_Freight DESC
LIMIT 3;",7.5,ql2084,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
627,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT Customers.CustomerID, Customers.ContactName, COUNT(Orders.OrderID) AS Num_Orders
FROM Customers
LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
GROUP BY Customers.CustomerID, Customers.ContactName;
",7.5,ql2084,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
628,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT Products.ProductID, Products.ProductName, Suppliers.CompanyName
FROM Products
JOIN Suppliers ON Products.SupplierID = Suppliers.SupplierID
ORDER BY Products.ProductID;",5.0,ql2084,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
629,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,ql2084,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
630,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'sales representative' AND Country = 'USA';",5.0,ql2084,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
631,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT DISTINCT
  tp.origin AS origin,
  tp.dest AS dest,
  a1.state_name AS state
FROM
  flights.m_ticket_prices AS tp
  JOIN flights.m_airports AS a1 ON tp.origin = a1.airport
  JOIN flights.m_airports AS a2 ON tp.dest = a2.airport
WHERE
  a1.state = a2.state;
",7.5,ql2084,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
632,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT
  a.state_name AS origin_state,
  COUNT(DISTINCT tp.origin) AS num_origin_airports,
  COUNT(DISTINCT tp.carrier) AS num_carriers,
  SUM(tp.passengers) AS total_passengers,
  AVG(tp.fare_per_mile) AS avg_fare_per_mile
FROM
  flights.m_ticket_prices AS tp
  JOIN flights.m_airports AS a ON tp.origin = a.airport
GROUP BY
  a.state_name
ORDER BY
  a.state_name ASC;",7.5,ql2084,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
633,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT 
  tp.carrier AS carrier,
  COUNT(DISTINCT CONCAT(tp.origin, '-', tp.dest)) AS num_routes,
  COUNT(DISTINCT tp.origin) AS num_airports,
  AVG(tp.fare_per_mile) AS avg_fare_per_mile
FROM 
  flights.m_ticket_prices AS tp
GROUP BY 
  tp.carrier
HAVING 
  SUM(tp.passengers) > 20000;",10.0,ql2084,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
644,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT
  origin,
  dest,
  MIN(fare) AS cheapest_fare,
  MAX(fare) AS most_expensive_fare,
  AVG(fare) AS average_fare,
  COUNT(DISTINCT carrier) AS carriers_serving_route,
  SUM(passengers) AS total_passengers
FROM
  flights.m_ticket_prices
GROUP BY
  origin,
  dest
HAVING
  carriers_serving_route >= 3 AND total_passengers > 10000;",7.5,ql2084,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
645,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT 
    pp.origin AS airport, 
    a.state_name AS state, 
    pp.total_passengers, 
    DENSE_RANK() OVER (ORDER BY pp.total_passengers DESC) AS national_rank,
    DENSE_RANK() OVER (PARTITION BY a.state ORDER BY pp.total_passengers DESC) AS state_rank
FROM passengers_per_airport AS pp
JOIN m_airports AS a ON pp.origin = a.airport
ORDER BY pp.total_passengers DESC;
",4.0,ql2084,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
646,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"USE flights;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",1.0,ql2084,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
647,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT s.MemberSince, s.SignUpsAsOf - COALESCE(i.InactiveAsOf, 0) AS TotalActiveUsers
FROM (
  SELECT MemberSince, SUM(NumberOfSignUps) OVER (ORDER BY MemberSince) AS SignUpsAsOf
  FROM (
    SELECT DATE(MemberSince) AS SignUpDate, COUNT(*) AS NumberOfSignUps
    FROM Profiles
    GROUP BY SignUpDate
  ) AS SignUpsOn
  JOIN Profiles ON DATE(Profiles.MemberSince) = SignUpsOn.SignUpDate
) AS s
LEFT JOIN (
  SELECT MemberSince, SUM(NumberOfInactive) OVER (ORDER BY InactiveDate) AS InactiveAsOf
  FROM (
    SELECT DATE(LastUpdate) AS InactiveDate, COUNT(*) AS NumberOfInactive
    FROM Profiles
    WHERE LastUpdate < NOW() - INTERVAL 30 DAY
    GROUP BY InactiveDate
  ) AS InactiveOn
  JOIN Profiles ON DATE(Profiles.LastUpdate) = InactiveOn.InactiveDate
  GROUP BY MemberSince, InactiveDate, NumberOfInactive
) AS i ON s.MemberSince = i.MemberSince
ORDER BY s.MemberSince;
",2.0,ql2084,Please use window queries.,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,The feedback from the TA was Please use window queries.
648,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"SELECT MemberSince, SUM(NumberOfInactive) OVER (ORDER BY InactiveDate) AS InactiveAsOf
FROM (
  SELECT DATE(LastUpdate) AS InactiveDate, COUNT(*) AS NumberOfInactive
  FROM Profiles
  WHERE LastUpdate < NOW() - INTERVAL 30 DAY
  GROUP BY InactiveDate
) AS InactiveOn
JOIN Profiles ON MemberSince <= DATE(LastUpdate)
GROUP BY MemberSince, InactiveDate, NumberOfInactive
ORDER BY MemberSince;",1.0,ql2084,Please use window queries.,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,The feedback from the TA was Please use window queries.
649,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"SELECT P.MemberSince, SUM(S.NumberOfSignUps) AS SignUpsAsOf
FROM (
  SELECT DATE(MemberSince) AS SignUpDate, COUNT(*) AS NumberOfSignUps
  FROM Profiles
  GROUP BY SignUpDate
) AS S
JOIN Profiles AS P ON DATE(P.MemberSince) >= S.SignUpDate
GROUP BY P.MemberSince
ORDER BY P.MemberSince;

",1.0,ql2084,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
650,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT DATE(LastUpdate) AS InactiveDate, COUNT(*) AS NumberOfInactive
FROM Profiles
WHERE LastUpdate < NOW() - INTERVAL 30 DAY
GROUP BY InactiveDate;",1.0,ql2084,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
651,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"USE facebook;

CREATE TEMPORARY TABLE SignUpsOn AS
SELECT DATE(MemberSince) AS SignUpDate, COUNT(*) AS NumberOfSignUps
FROM Profiles
GROUP BY SignUpDate;",1.0,ql2084,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
652,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT 
    e1.first_name, 
    e1.count AS male_count, 
    e2.count AS female_count, 
    ABS(LOG(e1.count/e2.count)) AS ambiguity
FROM 
    eligible_names e1 
    JOIN eligible_names e2 
    ON e1.first_name = e2.first_name AND e1.gender = 'M' AND e2.gender = 'F'
ORDER BY 
    ambiguity ASC;",1.5,ql2084,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
653,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SET @min_count := 50;

SELECT
  female_only.first_name,
  female_only.count
FROM
  (
    SELECT
      SUBSTRING_INDEX(first_name, ' ', 1) AS first_name,
      COUNT(*) AS count
    FROM actors
    WHERE
      first_name NOT LIKE '%.%'
      AND first_name NOT LIKE '%(%'
      AND first_name NOT LIKE '%)%'
      AND gender = 'F'
    GROUP BY first_name
  ) AS female_only
  LEFT JOIN (
    SELECT
      SUBSTRING_INDEX(first_name, ' ', 1) AS first_name,
      COUNT(*) AS count
    FROM actors
    WHERE
      first_name NOT LIKE '%.%'
      AND first_name NOT LIKE '%(%'
      AND first_name NOT LIKE '%)%'
      AND gender = 'M'
    GROUP BY first_name
  ) AS male_only
  ON female_only.first_name = male_only.first_name
WHERE
  female_only.count >= @min_count
  AND male_only.count IS NULL;
",0.9,ql2084,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
654,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SET @min_count := 50;

SELECT
  male_only.first_name,
  male_only.count
FROM
  (
    SELECT
      SUBSTRING_INDEX(first_name, ' ', 1) AS first_name,
      COUNT(*) AS count
    FROM actors
    WHERE
      first_name NOT LIKE '%.%'
      AND first_name NOT LIKE '%(%'
      AND first_name NOT LIKE '%)%'
      AND gender = 'M'
    GROUP BY first_name
  ) AS male_only
  LEFT JOIN (
    SELECT
      SUBSTRING_INDEX(first_name, ' ', 1) AS first_name,
      COUNT(*) AS count
    FROM actors
    WHERE
      first_name NOT LIKE '%.%'
      AND first_name NOT LIKE '%(%'
      AND first_name NOT LIKE '%)%'
      AND gender = 'F'
    GROUP BY first_name
  ) AS female_only
  ON male_only.first_name = female_only.first_name
WHERE
  male_only.count >= @min_count
  AND female_only.count IS NULL;
",0.9,ql2084,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
655,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, gender, COUNT(*) AS count
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name, gender
HAVING count >= 50;
",1.0,ql2084,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
656,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.track_name, t.artist_id, t.album_id,t.track_id,
	MIN(tp.played_on) AS first_played, 
	MAX(tp.played_on) AS last_played 
FROM track t 
	LEFT JOIN tracks_played tp ON t.artist_id = tp.artist_id AND t.album_id = tp.album_id AND t.track_id = tp.track_id 
GROUP BY t.track_name, t.artist_id, t.album_id, t.track_id;",1.0,ql2084,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
657,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_name, a.artist_id, COUNT(DISTINCT t.album_id) AS num_albums
FROM track t
JOIN artist a ON a.artist_id = t.artist_id
GROUP BY a.artist_id, a.artist_name;",1.0,ql2084,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
658,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT tp.played_on, a.artist_name, a.artist_id, 
COUNT(DISTINCT tp.user_id) AS num_users, 
SUM(t.time) AS total_time
FROM tracks_played tp	
    JOIN track t ON tp.artist_id = t.artist_id AND tp.album_id = t.album_id AND tp.track_id = t.track_id
    JOIN artist a ON a.artist_id = tp.artist_id
GROUP BY tp.played_on, a.artist_id;",1.0,ql2084,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
659,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, COUNT(tp.track_id) AS total_tracks, SUM(t.time) AS total_time
FROM users u
	LEFT JOIN tracks_played tp ON u.user_id = tp.user_id
	LEFT JOIN track t ON tp.artist_id = t.artist_id AND tp.album_id = t.album_id AND tp.track_id = t.track_id
GROUP BY u.user_id
ORDER BY u.user_id ASC;",1.0,ql2084,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
660,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT tp.album_id
FROM tracks_played tp
JOIN track t ON tp.artist_id = t.artist_id AND tp.album_id = t.album_id AND tp.track_id = t.track_id
GROUP BY tp.album_id
HAVING SUM(t.time) > 60;",1.0,ql2084,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
661,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, 
    COUNT(*) AS num_tracks, 
    COUNT(DISTINCT time) AS total_time
FROM track
GROUP BY album_id;
",1.0,ql2084,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
662,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS num_album
FROM album
GROUP BY artist_id;",1.0,ql2084,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
663,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT
    MAX(time) AS max_time,
    MIN(time) AS min_time,
    AVG(time) AS avg_time,
    STDDEV(time) AS stdev_time
FROM track

avg_time 5.242026
stdev_time 2.163728432900637
",1.0,ql2084,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
664,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track


There are 153 tracks",1.0,ql2084,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
665,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"USE music;
SELECT COUNT(*) AS num_artists
FROM artist


There are 6 artists",1.0,ql2084,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
666,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.*
FROM users U
    LEFT JOIN tracks_played P ON U.user_id = P.user_id
WHERE P.user_id IS NULL;",1.0,ql2084,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
667,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.first_name, U.last_name, P.user_id, L.album_name, T.track_name, P.played_on
FROM tracks_played P
        INNER JOIN track T ON P.track_id = T.track_id
        INNER JOIN users U ON P.user_id = U.user_id
        INNER JOIN album L ON P.album_id = L.album_id;",0.5,ql2084,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
668,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN artist A ON T.artist_id = A.artist_id
WHERE A.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,ql2084,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
669,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, artist_name, album_name
FROM track T
	INNER JOIN artist A ON T.artist_id = A.artist_id
       INNER JOIN album L ON T.album_id = L.album_id;",0.5,ql2084,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
670,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN album L ON T.artist_id = L.artist_id
WHERE L.album_name = 'Second Coming';",1.0,ql2084,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
671,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM album A
	INNER JOIN artist R ON A.artist_id = R.artist_id
WHERE R.artist_name = 'New Order';",1.0,ql2084,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
672,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%love%'",1.0,ql2084,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
673,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
	WHERE 
    (artist_id = 1) OR 
    (artist_id = 3) OR 
    (artist_id = 5) ;

SELECT *
FROM track
WHERE artist_id IN (1, 3, 5);",1.0,ql2084,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
674,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name>'E' AND album_name<'S'",1.0,ql2084,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
675,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name<'M'",1.0,ql2084,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
676,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2",1.0,ql2084,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
677,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4",1.0,ql2084,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
678,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;
DESCRIBE artist;
SELECT artist_name
FROM artist
WHERE artist_name = 'The Rolling Stones'",1.0,ql2084,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
679,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;
DESCRIBE artist;
SELECT artist_id, artist_name
FROM artist
WHERE artist_id = 5",1.0,ql2084,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
680,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"USE music;
SELECT *
FROM track
ORDER BY time
LIMIT 10",1.0,ql2084,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
681,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"USE music;
SELECT artist_id, album_name AS album_title
FROM album;",1.0,ql2084,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
682,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"USE music;
DESCRIBE artist;
SELECT DISTINCT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,ql2084,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
683,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"USE music;
DESCRIBE track;
SELECT DISTINCT track_id, track_name, artist_id, album_id, time
FROM track;",1.0,ql2084,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
684,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"USE music;
DESCRIBE album;
SELECT DISTINCT album_id, album_name, artist_id
FROM album;",1.0,ql2084,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
685,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;
DESCRIBE artist;
SELECT DISTINCT artist_id, artist_name 
FROM artist;",1.0,ql2084,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
686,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"One artist can create multiple albums, but an album can be created by one artist. An album can have multiple tracks, and a track belongs to one album. A track could be played by one user, and a user plays one track. In ""tracks_played"", user_id, artist_id, album_id, and track_id are foreign keys connecting entities of track and users. In ""track"", album_id and aritst_id are foreign keys. In ""album"", artist_id is the foreign key.",1.0,ql2084,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
692,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT c.CustomerID, c.CompanyName, SUM(od.Quantity * od.UnitPrice) AS TotalSpent, SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscount,
CASE 
WHEN SUM(od.Quantity * od.UnitPrice) - SUM(od.Quantity * od.UnitPrice * od.Discount) BETWEEN 0 AND 1000 THEN 'Low'
WHEN SUM(od.Quantity * od.UnitPrice) - SUM(od.Quantity * od.UnitPrice * od.Discount) BETWEEN 1000 AND 5000 THEN 'Medium'
ELSE 'High'
END AS CustomerGroup
FROM Customers c
INNER JOIN Orders o ON o.CustomerID = c.CustomerID
INNER JOIN OrderDetails od ON od.OrderID = o.OrderID
WHERE YEAR(o.OrderDate) = 2016
GROUP BY c.CustomerID, c.CompanyName;",10.0,rc3123,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
694,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT o.CustomerID, COUNT(od.ProductID) AS num_products, SUM(od.Quantity) AS total_units, SUM(od.UnitPrice * od.Quantity) AS total_price
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY o.CustomerID HAVING total_price > 10000
ORDER BY total_price DESC;",8.0,rc3123,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
695,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) as avg_freight
From Orders
Group BY ShipCountry
Order BY avg_freight DESC
LIMIT 3;",7.5,rc3123,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
696,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT CustomerID, COUNT(OrderID) AS num_orders
FROM Orders
GROUP BY CustomerID;",8.0,rc3123,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
697,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) as FirstOrderDate
FROM Orders;",7.5,rc3123,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
698,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT p.ProductID, p.ProductName, s.CompanyName
FROM Products p
JOIN Suppliers s ON p.SupplierID = s.SupplierID
ORDER BY p.ProductID;",7.5,rc3123,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
699,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,rc3123,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
700,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,rc3123,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
701,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT ShipVia AS ShipperID, Count(ORDERID) AS num_orders, COUNT(DISTINCT ShippedDate) AS num_distinct_days, CompanyName
FROM Orders
JOIN Shippers ON Orders.ShipVia = Shippers.ShipperID
GROUP BY ShipVia;",7.5,rc3123,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
755,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"Select O.CustomerID, COUNT(DISTINCT OD.ProductID) as num_products, SUM(OD.Quantity) AS total_units, SUM(OD.Quantity * OD.UnitPrice) as total_cost
FROM Orders O
	LEFT JOIN OrderDetails OD ON O.OrderID = OD.OrderID
GROUP BY O.CustomerID
HAVING total_cost > '10000.0000'
ORDER BY total_cost DESC;",8.0,ro2075,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
756,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"Select ShipCountry, AVG(Freight) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC
LIMIT 3;",7.5,ro2075,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
757,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select C.CompanyName, COUNT(DISTINCT O.OrderID) as num_orders
FROM Customers C
	LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CompanyName;",10.0,ro2075,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
758,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"Select MIN(OrderDate) AS first_order_date
From Orders;",7.5,ro2075,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
759,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	INNER JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID ASC;",7.5,ro2075,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
760,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,ro2075,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
761,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,ro2075,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
762,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(DISTINCT O.OrderID) as num_orders, COUNT(DISTINCT DATE(O.ShippedDate)) as distinct_days
FROM Orders O
	LEFT JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.CompanyName, S.ShipperID;",7.5,ro2075,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
814,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
    c.CustomerID, 
    c.CompanyName, 
    TotalSpend, 
    TotalDiscount,
    CASE 
        WHEN TotalSpend - TotalDiscount BETWEEN 0 AND 1000 THEN 'Low'
        WHEN TotalSpend - TotalDiscount BETWEEN 1000 AND 5000 THEN 'Medium'
        WHEN TotalSpend - TotalDiscount > 5000 THEN 'High'
    END AS CustomerGroup
FROM 
    (
        SELECT 
            o.CustomerID, 
            SUM(od.Quantity * od.UnitPrice) AS TotalSpend, 
            SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscount
        FROM 
            Orders o 
            INNER JOIN OrderDetails od ON o.OrderID = od.OrderID
        WHERE 
            YEAR(o.OrderDate) = 2016
        Group By
            o.CustomerID
    ) t
    INNER JOIN Customers c ON t.CustomerID = c.CustomerID
Order By 
    CustomerID",10.0,rob226,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
816,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT Orders.CustomerID, Count(Distinct OrderDetails.ProductID) as NumberOfProducts, SUM(OrderDetails.Quantity) as TotalUnits, 
SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) As TotalPrice
FROM Orders
JOIN OrderDetails on Orders.OrderID = OrderDetails.OrderID
Group By
Orders.OrderID, Orders.CustomerID
Having
TotalPrice > 10000
Order By
TotalPrice DESC
",10.0,rob226,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
817,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) as AverageFreight
FROM Orders
Group By ShipCountry
Order By AverageFreight DESC
Limit 3;",7.5,rob226,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
818,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT CustomerID, Count(OrderID)
FROM Orders
Group By CustomerID
",8.0,rob226,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
819,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT min(OrderDate)
FROM Orders",7.5,rob226,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
820,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
  JOIN Suppliers S ON P.SupplierID = S.SupplierID
Group By P.ProductID
Order By P.ProductID ASC",7.5,rob226,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
821,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName 
FROM Products
WHERE ProductName Like ""%queso%""",5.0,rob226,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
822,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Country = ""USA"" and Title = ""Sales Representative"" ",5.0,rob226,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
823,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT Shippers.ShipperID, Shippers.CompanyName, COUNT(Orders.OrderID) as OrderCount, COUNT(DISTINCT Orders.ShippedDate) as DistinctDays
FROM Shippers
JOIN Orders ON Shippers.ShipperID = Orders.ShipVia
Group By Shippers.ShipperID;",7.5,rob226,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
837,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT Customer.CustomerID, Customer.CompanyName, TotalAmountSpent.totalAmount, TotalAmountSpent.totalDiscount, 
   CASE 
   WHEN TotalAmountSpent.totalAmount - TotalAmountSpent.totalDiscount BETWEEN 0 AND 1000 THEN 'Low' 
   WHEN TotalAmountSpent.totalAmount - TotalAmountSpent.totalDiscount BETWEEN 1000 AND 5000 THEN 'Medium'
   WHEN TotalAmountSpent.totalAmount - TotalAmountSpent.totalDiscount > 5000 THEN 'High'
   END as Grouping
FROM Customer 
INNER JOIN (SELECT Customer_cust_no, SUM(variable_amount + 41-fixed_amount) AS totalAmount, SUM(variable_amount) AS totalDiscount
FROM Bills
INNER JOIN Meter
ON Meter.meter_no = Bills.Meter_meter_no
INNER JOIN Rate
ON Rate.rate_no = Meter.Rate_rate_no
WHERE YEAR(start_date) = 2016
GROUP BY Customer_cust_no) TotalAmountSpent
ON Customer.cust_no = TotalAmountSpent.Customer_cust_no;

 ",7.0,sl195,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
839,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT 0.CustomerID, COUNT(od.ProductID) AS NumProducts, SUM(od.Quantity) AS NumUnits, SUM(od.UnitPrice * od.Quantity) AS TotalPrice
FROM Orders o
INNER JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY o.CustomerID
HAVING SUM(od.UnitPrice * od.Quantity) > 10000
ORDER BY TotalPrice DESC;",8.0,sl195,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
840,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS AverageFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC
LIMIT 3;
 

",7.5,sl195,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
841,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT customer_id, COUNT(*) AS Number_of_Orders
FROM orders
GROUP BY customer_id;",8.0,sl195,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
842,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT start_date 
FROM Orders 
ORDER BY start_date 
LIMIT 1;",5.0,sl195,Incorrect attribute name,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,The feedback from the TA was Incorrect attribute name
843,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT ProductID, ProductName, CompanyName 
FROM Products
INNER JOIN Suppliers 
ON Products.SupplierID = Suppliers.SupplierID
ORDER BY ProductID;",7.5,sl195,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
844,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName 
FROM Products 
WHERE ProductName LIKE '%queso%';
",5.0,sl195,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
845,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT LastName, FirstName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA'
",5.0,sl195,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
846,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT ShipperID, CompanyName, COUNT(*) as OrderCount, COUNT(DISTINCT ShippedDate) as DaysInWarehouse
FROM Shippers
INNER JOIN Orders
ON Shippers.ShipperID = Orders.ShipperID
GROUP BY ShipperID, CompanyName
ORDER BY OrderCount DESC;",7.0,sl195,"SELECT ShipperID, CompanyName, COUNT(*) as OrderCount, COUNT(DISTINCT ShippedDate) as DaysInWarehouse
FROM Shippers
INNER JOIN Orders
ON Shippers.ShipperID = Orders.ShipVia
GROUP BY ShipperID, CompanyName
ORDER BY OrderCount DESC;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT ShipperID, CompanyName, COUNT(*) as OrderCount, COUNT(DISTINCT ShippedDate) as DaysInWarehouse
FROM Shippers
INNER JOIN Orders
ON Shippers.ShipperID = Orders.ShipVia
GROUP BY ShipperID, CompanyName
ORDER BY OrderCount DESC;"
869,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
ORDER BY cnt DESC;

DROP TEMPORARY TABLE male_names;
CREATE TEMPORARY TABLE male_names AS 
SELECT first_name, COUNT(*) AS male_cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'M' AND male_cnt > 50
ORDER BY male_cnt DESC;

SELECT A.first_name,
COUNT(A.first_name) AS total_cnt, MN.male_cnt,
COUNT(A.first_name)-MN.male_cnt AS female_cnt,
(COUNT(A.first_name)-MN.male_cnt)/COUNT(A.first_name) AS female_percent,(MN.male_cnt)/COUNT(A.first_name) AS male_percent,
ABS(LOG10(((((MN.male_cnt)/COUNT(A.first_name))/((COUNT(A.first_name)-MN.male_cnt)/COUNT(A.first_name)))))) AS log
FROM actors A
JOIN male_names MN ON A.first_name = MN.first_name
GROUP BY A.first_name,MN.male_cnt
HAVING female_cnt <> 0
ORDER BY log ASC;",0.6,soj206,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
870,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT *
FROM actors;

SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING cnt >= 50
ORDER BY cnt DESC;

DROP TEMPORARY TABLE female_names;

CREATE TEMPORARY TABLE female_names AS
SELECT first_name, count(*) AS female_cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'F' AND female_cnt > 50
ORDER BY female_cnt DESC;

SELECT A.first_name, COUNT(A.first_name) as total_cnt, MN.female_cnt,
COUNT(A.first_name)-MN.female_cnt AS male_cnt
FROM actors A
JOIN female_names MN ON A.first_name = MN.first_name
GROUP BY A.first_name,MN.female_cnt
HAVING male_cnt = 0;",0.8,soj206,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
871,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT *
FROM actors;

SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING cnt >= 50
ORDER BY cnt DESC;

DROP TEMPORARY TABLE IF EXISTS temp_male_names;

CREATE TEMPORARY TABLE temp_male_names AS
SELECT first_name, COUNT(*) AS male_cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING gender = 'M' AND male_cnt > 50
ORDER BY male_cnt DESC;

SELECT A.first_name, COUNT(A.first_name) as total_cnt, MN.male_cnt,
COUNT(A.first_name)-MN.male_cnt AS female_cnt
FROM actors A
JOIN male_names MN ON A.first_name = MN.first_name
GROUP BY A.first_name,MN.male_cnt
HAVING female_cnt = 0;
",0.8,soj206,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
872,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
SHOW TABLES;
DESCRIBE actors;

CREATE TEMPORARY TABLE temp_eligible_names AS
SELECT first_name, COUNT(*) AS cnt, gender
FROM
    actors
WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name, gender
HAVING cnt > 50;
",0.8,soj206,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
873,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"USE music;
SHOW tables;
SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) , MAX(played_on)
FROM track T
LEFT JOIN tracks_played P ON T.track_id = P.track_id
GROUP BY T.track_name;",0.8,soj206,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
874,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"USE music;
SHOW tables;
SELECT A.artist_name, COUNT(DISTINCT AL.album_id) AS num_albums
FROM artist A
LEFT JOIN album AL ON A.artist_id = AL.artist_id
GROUP BY A.artist_name;",1.0,soj206,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
875,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"USE music;
SHOW tables;
SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name, COUNT(DISTINCT user_id) AS users, SUM(T.time) AS total_time, COUNT(*) AS total_tracks
FROM tracks_played P
JOIN artist A ON P.artist_id = A.artist_id
JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",1.0,soj206,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
876,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"USE music;
SHOW tables;
SELECT U.user_id, COUNT(TP.track_id) AS tracks_played, SUM(TP.time) AS total_time
FROM users U
LEFT JOIN tracks_played P ON U.user_id =P.user_id
LEFT JOIN track TP ON TP.artist_id = P.artist_id AND TP.album_id = P.album_id AND TP.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id;",1.0,soj206,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
877,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"USE music;
SHOW tables;
SELECT artist_id, album_id, SUM(time) AS total_time
FROM track
HAVING SUM(time) > 60;",0.8,soj206,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
878,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"USE music;
SHOW tables;
SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id;",1.0,soj206,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
879,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"USE music;
SHOW tables;
SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,soj206,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
880,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"USE music;
SHOW tables;
SELECT AVG(time), STDDEV(time)
FROM track;",1.0,soj206,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
881,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"USE music;
SHOW tables;
SELECT COUNT(*)
FROM track;",1.0,soj206,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
882,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"USE music;
SHOW tables;
SELECT COUNT(*)
FROM artist;",1.0,soj206,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
883,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"USE music;
SHOW tables;
SELECT U.first_name, U.last_name
FROM users U
LEFT JOIN tracks_played P ON U.user_id = P.user_id
WHERE P.user_id IS NULL;",1.0,soj206,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
884,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"USE music;
SHOW tables;
SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P
JOIN users U ON U.user_id = P.user_id
JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on;",1.0,soj206,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
885,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"USE music;
SHOW tables;
SELECT T.*
FROM track T JOIN artist R ON T.artist_id = R.artist_id
WHERE R.artist_name = 'The Stone Roses'
ORDER BY T.time;",1.0,soj206,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
886,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"USE music;
SHOW tables;
SELECT track_name, artist_name, album_name
FROM track T
JOIN artist R ON T.artist_id = R.artist_id
JOIN album A ON A.album_id = T.album_id AND A.artist_id = T.artist_id;",1.0,soj206,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
887,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"USE music;
SHOW tables;
SELECT T.*
FROM track T JOIN album A on A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE A.album_name = 'Second Coming';",1.0,soj206,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
888,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"USE music;
SHOW tables;
SELECT *
FROM artist R JOIN album A on A.artist_id = R.artist_id
WHERE R.artist_name = 'New Order';",1.0,soj206,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
889,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM track
WHERE track_name LIKE '%love%';",1.0,soj206,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
890,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id =5;

SELECT *
FROM track
WHERE artist_id IN (1,3,5);",1.0,soj206,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
891,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM album
WHERE album_name >= 'F' AND album_name < 'S';",1.0,soj206,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
892,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM track
WHERE track_name < 'M';",1.0,soj206,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
893,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,soj206,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
894,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM album
WHERE artist_id = 4;",1.0,soj206,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
895,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,soj206,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
896,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM artist
WHERE artist_id =5;",1.0,soj206,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
897,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM track
ORDER BY time
LIMIT 10; ",1.0,soj206,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
898,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"show databases;
USE music;
SHOW Tables;
DESCRIBE album;
SELECT artist_id, album_name AS album_title
FROM album;",1.0,soj206,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
899,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,soj206,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
900,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM track;",1.0,soj206,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
901,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM album;",1.0,soj206,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
902,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"show databases;
USE music;
SHOW Tables;
SELECT *
FROM artist;",1.0,soj206,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
921,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE after_disc AS
SELECT O.CustomerID, C.CompanyName, SUM(D.UnitPrice*D.Quantity) AS total_price, AVG(D.Quantity*D.UnitPrice*D.Discount) AS total_discount_applied
FROM Orders O
	JOIN Customers C ON C.CustomerID = O.CustomerID
    JOIN OrderDetails D ON D.OrderID = O.OrderID
WHERE year(O.OrderDate) = 2016
GROUP BY O.CustomerID;

CREATE TEMPORARY TABLE after_disc2 AS
SELECT CustomerID, CompanyName, total_price-total_discount_applied AS spent_after_disc
FROM after_disc;

SELECT *,
CASE
	WHEN spent_after_disc <= 1000 THEN 'LOW'
	WHEN spent_after_disc > 1000 AND spent_after_disc < 5000 THEN 'Medium'
	WHEN spent_after_disc > 5000 THEN 'High'
	ELSE NULL
END AS GroupText
FROM after_disc2;
",10.0,gwc260,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
923,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, COUNT(D.ProductID) AS num_products, SUM(D.Quantity*D.UnitPrice) AS tot_p
FROM Orders O
	JOIN OrderDetails D ON D.OrderID = O.OrderID
WHERE tot_p > 10000
GROUP BY O.CustomerID
ORDER BY tot_p DESC;",7.0,gwc260,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
924,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,gwc260,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
925,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.OrderID) AS num_orders
FROM Customers C
	LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID
ORDER BY num_orders DESC;",10.0,gwc260,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
926,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) As First_ever_order
FROM Orders;",7.5,gwc260,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
927,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY P.ProductID;
",7.5,gwc260,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
928,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,gwc260,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
929,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';
",5.0,gwc260,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
930,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(O.OrderID) AS num_orders, COUNT(DISTINCT O.ShippedDate) num_dis_days
FROM Shippers S
	JOIN Orders O ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",7.5,gwc260,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
954,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_names
SELECT eligible_names.first_name, COUNT(*) AS frequency
FROM eligible_names
INNER JOIN actors ON actors.first_name = eligible_names.first_name
WHERE gender = 'M'
GROUP BY first_name;

CREATE TEMPORARY TABLE female_names 
SELECT eligible_names.first_name, COUNT(*) AS frequency
FROM eligible_names
INNER JOIN actors ON actors.first_name = eligible_names.first_name
WHERE gender = 'F'
GROUP BY first_name;

SELECT female_names.first_name, ABS(LOG(male_names.frequency/female_names.frequency)) AS Ambiguous_names_count
FROM male_names
INNER JOIN female_names ON female_names.first_name = male_names.first_name
GROUP BY Ambiguous_names_count, female_names.first_name
ORDER BY Ambiguous_names_count ASC;",2.0,pp1711,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
955,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS freq_name
FROM actors
WHERE first_name NOT IN
  (SELECT DISTINCT first_name 
  FROM actors 
  WHERE gender = 'M'
  )
GROUP BY first_name
ORDER BY freq_name DESC; ",0.8,pp1711,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
956,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS freq_name
FROM actors
WHERE first_name NOT IN
  (SELECT DISTINCT first_name 
  FROM actors 
  WHERE gender = 'F'
  )
GROUP BY first_name
ORDER BY freq_name DESC; ",0.8,pp1711,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
957,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT DISTINCT first_name, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%""%""' AND first_name NOT LIKE '%(%)%' 
GROUP BY first_name
HAVING COUNT(*) >= 50
ORDER BY cnt DESC;",1.0,pp1711,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
966,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on
FROM track T
INNER JOIN tracks_played TP ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
GROUP BY T.artist_id, T.album_id, T.track_id;",0.8,pp1711,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
967,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name, COUNT(DISTINCT M.album_name) AS num_albums
FROM artist A
INNER JOIN album M ON M.artist_id=A.artist_id
GROUP BY A.artist_id, A.artist_name;",1.0,pp1711,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
968,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played, A.artist_id, A.artist_name, COUNT(DISTINCT TP.user_id) AS users, SUM(T.time) AS total_time, COUNT(TP.user_id) AS total_tracks 
FROM tracks_played TP
INNER JOIN track T ON TP.artist_id=T.artist_id AND TP.album_id=T.album_id AND TP.track_id=T.track_id
INNER JOIN artist A ON TP.artist_id=A.artist_id
GROUP BY date_played, A.artist_id, A.artist_name
ORDER BY date_played;",1.0,pp1711,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
969,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.track_id) as tracks_played, SUM(time) as total_time
FROM tracks_played TP
INNER JOIN track T ON T.track_id=TP.track_id AND T.artist_id=TP.artist_id AND T.album_id=TP.album_id
RIGHT JOIN users U ON TP.user_id=U.user_id
GROUP BY U.user_id
ORDER BY U.user_id;
",1.0,pp1711,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
970,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT T.album_id, SUM(time) 
FROM track T
GROUP BY T.album_id, T.artist_id
HAVING SUM(time)>60;",1.0,pp1711,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
971,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_id) AS cnt_track, SUM(time) AS cnt_time 
FROM track
GROUP BY album_id;",1.0,pp1711,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
972,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,pp1711,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
973,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STDDEV(time) AS stddev_time
FROM track;",1.0,pp1711,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
974,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_id)
FROM track;",1.0,pp1711,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
975,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_id)
FROM artist;",1.0,pp1711,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
983,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
LEFT OUTER JOIN tracks_played TP ON U.user_id = TP.user_id
WHERE TP.track_id IS NULL;",1.0,pp1711,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
984,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played TP
INNER JOIN users U ON TP.user_id = U.user_id
INNER JOIN album A ON A.album_id = TP.album_id
INNER JOIN track T ON TP.track_id = T.track_id;",1.0,pp1711,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
985,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.*
FROM track T
INNER JOIN artist A ON T.artist_id = A.artist_id
WHERE A.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,pp1711,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
986,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A1.artist_name, A2.album_name
FROM track T
INNER JOIN artist A1 ON T.artist_id = A1.artist_id 
INNER JOIN album A2 ON T.artist_id = A2.artist_id;",0.7,pp1711,"


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






"
987,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.*
FROM track T
INNER JOIN album A ON T.album_id = A.album_id
WHERE A.album_name = 'Second Coming';",0.7,pp1711,"SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'"
988,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist A
INNER JOIN album M ON M.artist_id = A.artist_id
WHERE artist_name = 'New Order';",1.0,pp1711,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
996,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT track_name
FROM track
WHERE track_name LIKE '%love%' ; ",1.0,pp1711,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
997,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT track_name
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;


SELECT track_name
FROM track
WHERE artist_id IN (1, 3, 5) ; ",1.0,pp1711,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
998,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT track_name
FROM track
WHERE track_name > 'E%' AND track_name < 'S%'
ORDER BY track_name;",0.5,pp1711,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
999,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name
FROM track
WHERE (track_name) < 'M%'
ORDER BY track_name;",1.0,pp1711,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1000,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT track_name
FROM track
WHERE artist_id = 3 AND album_id = 2;

Output: Shhh/Peaceful
In A Silent Way/It's About That Time",1.0,pp1711,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1001,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT album_name
FROM album
WHERE artist_id = 4;

Output: Exile On Main Street",1.0,pp1711,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1002,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';


Output: 4 The Rolling Stones",1.0,pp1711,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1003,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;

Output: 5 The Stone Roses",1.0,pp1711,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1004,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"Select *
FROM track
ORDER BY time
LIMIT 10 ;",1.0,pp1711,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1005,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,pp1711,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1006,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,pp1711,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1007,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,pp1711,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1008,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,pp1711,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1009,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;

SELECT *
FROM artist;",1.0,pp1711,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1046,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT OD.OrderID, COUNT(ProductID) AS 'Number of Products' , COUNT(orderID) AS 'Total Units',  SUM(Quantity *UnitPrice) AS 'Total Order Price'
FROM OrderDetails AS OD
JOIN Orders AS O ON O.OrderID = OD.OrderID
JOIN Customers AS C ON C.Customer ID = OD.OrderID
GROUP BY CustomerID WHERE 'Total Order Price' > 10000
ORDER BY 'Number of Products' DESC ; 
",4.0,gej214,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC ","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC "
1047,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT TOP 3 ShipCountry, AVG(Freight) AS AverageFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC;",6.5,gej214,"LIMIT, not TOP 3","SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,"The feedback from the TA was LIMIT, not TOP 3"
1048,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT DISTINCT CustomerID, COUNT(*) AS 'Number of orders'
FROM Orders
GROUP BY CustomerID; ",8.0,gej214,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
1049,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) AS FirstOrder
FROM Orders; ",7.5,gej214,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
1050,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, CompanyName AS Supplier
FROM Products AS P
JOIN Suppliers AS S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",7.5,gej214,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1051,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName like '%queso%' ;",5.0,gej214,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1052,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate 
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'United States';",4.5,gej214,"SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' ","SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,"The feedback from the TA was SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' "
1076,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, SumOrderPrice, TotalDiscount,
    CASE 
        WHEN SumOrderPrice - TotalDiscount BETWEEN 0 AND 1000 THEN 'Low'
        WHEN SumOrderPrice - TotalDiscount BETWEEN 1000 AND 5000 THEN 'Medium'
        WHEN SumOrderPrice - TotalDiscount > 5000 THEN 'High'
    END AS Grouping
FROM (
    SELECT Orders.CustomerID, Customers.CompanyName, SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) AS TotalOrderPrice, SUM(OrderDetails.Quantity * OrderDetails.UnitPrice * OrderDetails.Discount) AS TotalDiscount
    FROM Orders
    JOIN Customers ON Orders.CustomerID = Customers.CustomerID
    JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
    WHERE YEAR(Orders.OrderDate) = 2016
    GROUP BY Orders.CustomerID, Customers.CompanyName
) AS CustomerData
ORDER BY CustomerID;",8.0,td2210,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
1078,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT Orders.CustomerID, COUNT(OrderDetails.ProductID) AS NumberProducts, SUM(OrderDetails.Quantity) AS TotalUnits, SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) AS TotalOrderPrice
FROM Orders
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
GROUP BY Orders.CustomerID, Orders.OrderID
HAVING SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) > 10000
ORDER BY TotalOrderPrice DESC;",9.5,td2210,"SELECT&nbsp;O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC
-1pts for not showing the orderID","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT&nbsp;O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC
-1pts for not showing the orderID"
1079,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS AverageFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC
LIMIT 3;


1) Austria
2) Ireland
3) USA",7.5,td2210,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1080,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT CustomerID, COUNT(OrderID) AS CountOrders
FROM Orders
GROUP BY CustomerID;

",8.0,td2210,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
1081,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) 
FROM Orders;

2014--07-04 8pm",7.5,td2210,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
1082,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT Products.ProductID, Products.ProductName, Suppliers.CompanyName
FROM Products
JOIN Suppliers ON Products.SupplierID = Suppliers.SupplierID
ORDER BY Products.ProductID;",7.5,td2210,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1083,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName like '%queso%';",5.0,td2210,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1084,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,td2210,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1085,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT Shippers.ShipperID, Shippers.CompanyName, 
       COUNT(DISTINCT Orders.OrderID) as CountofOrders,
       COUNT(DISTINCT DATE(Orders.ShippedDate)) as Number_of_Distinct_Days
FROM Shippers
JOIN Orders ON Shippers.ShipperID = Orders.ShipperID
GROUP BY Shippers.ShipperID, Shippers.CompanyName
ORDER BY Shippers.ShipperID;
",7.0,td2210,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
1108,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"DROP TABLE IF EXISTS customerspend;
CREATE TEMPORARY TABLE customerspend AS
	SELECT C.CustomerID, C.CompanyName, SUM(OD.UnitPrice * OD.Quantity) AS total_price, SUM(OD.UnitPrice * OD.Quantity * OD.Discount) AS total_discount, YEAR(O.OrderDate) AS order_year
	FROM Customers C
	JOIN Orders O ON C.CustomerID = O.CustomerID
	JOIN OrderDetails OD ON O.OrderID = OD.OrderID
	GROUP BY C.CustomerID, order_year
	HAVING order_year = 2016
	ORDER BY C.CustomerID
;


SELECT CustomerID, CompanyName, total_price, total_discount,
CASE
	WHEN SUM(total_price - total_discount) <1000 THEN 'LOW'
    WHEN SUM(total_price - total_discount) >1000 AND SUM(total_price - total_discount) <5000 THEN 'MEDIUM'
    WHEN SUM(total_price - total_discount) >5000 THEN 'HIGH'
    ELSE 'ERROR'
    END AS customer_grouping
FROM customerspend  
GROUP BY CustomerID, CompanyName, total_price, total_discount
ORDER BY CustomerID 
;",10.0,skp7683,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
1110,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.OrderID, O.CustomerID, COUNT(OD.ProductID) AS cnt_products, SUM(OD.Quantity) AS cnt_units, SUM(OD.UnitPrice * OD.Quantity) AS total_price
FROM Orders O
JOIN OrderDetails OD ON O.OrderID = OD.OrderID
GROUP BY OrderID, CustomerID
HAVING total_price > 10000
ORDER BY total_price DESC
;",10.0,skp7683,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
1111,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC
LIMIT 3
;",7.5,skp7683,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1112,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(OrderID) AS cnt_orders
FROM Customers C
JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID
;",8.0,skp7683,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
1113,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) AS First_Order
FROM Orders
;",7.5,skp7683,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
1114,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID
;",7.5,skp7683,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1115,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%QUESO%'
;",5.0,skp7683,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1116,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA'
;",5.0,skp7683,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1117,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(O.OrderID) AS cnt_orders, COUNT(DISTINCT O.ShippedDate) AS cnt_days
FROM Orders O
JOIN Shippers S ON S.ShipperID = O.ShipVia
GROUP BY S.ShipperID
;",7.5,skp7683,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
1128,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SET @total_price = (SELECT SUM(D.Quantity*D.UnitPrice) FROM OrderDetails D);
SET @total_discount = (SELECT SUM(D.Quantity*D.UnitPrice*D.Discount) FROM OrderDetails D);
SET @total_after_discount = (SELECT (SUM(D.Quantity*D.UnitPrice)-SUM(D.Quantity*D.UnitPrice*D.Discount)) FROM OrderDetails D);

SELECT O.CustomerID
		, C.CompanyName
        , @total_price
        , @total_discount
        , @total_after_discount
		,CASE 
		WHEN @total_after_discount BETWEEN 0 AND 1000 THEN ""LOW""
        WHEN @total_after_discount BETWEEN 1000 AND 5000 THEN ""MEDIUM""
        WHEN @total_after_discount > 5000 THEN ""HIGH""
        ELSE ""NONE""
	END AS Grouping
FROM Orders O
	INNER JOIN Customers C ON C.CustomerID = O.CustomerID
    INNER JOIN OrderDetails D ON D.OrderID = O.OrderID
WHERE O.OrderDate BETWEEN ""2016-01-01 00:00:00"" AND ""2016-12-31 11:59:59""
GROUP BY O.CustomerID, C.CompanyName
ORDER BY O.CustomerID;",8.0,ea1177,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
1130,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.customerID
		, COUNT(D.ProductID) as num_products
        , SUM(D.Quantity) as num_units
        , ROUND(SUM(D.UnitPrice*D.Quantity),2) as tot_order_price 
FROM Orders O
	INNER JOIN OrderDetails D ON D.OrderID = O.OrderID
GROUP BY O.customerID
HAVING tot_order_price>10000
ORDER BY tot_order_price DESC;",8.0,ea1177,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
1131,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) as avg_freight
FROM Orders
GROUP BY  ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,ea1177,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1132,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT CustomerID, COUNT(OrderID) as num_orders
FROM Orders
GROUP BY CustomerID;",8.0,ea1177,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
1133,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) as first_order_date
FROM Orders
GROUP BY OrderDate
LIMIT 1;",7.5,ea1177,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
1134,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	INNER JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY P.ProductID;",7.5,ea1177,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1135,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,ea1177,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1136,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = ""Sales Representative"" AND Country = ""USA"";",5.0,ea1177,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1137,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(O.OrderID) as num_orders, COUNT(Distinct(O.ShippedDate)) as num_distinct_days
FROM Shippers S
	INNER JOIN Orders O ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID, S.CompanyName;",7.5,ea1177,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
1270,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE 2016_Orders
	SELECT *
	FROM Orders
	WHERE OrderDate > '2015-12-31 11:00:00'
	ORDER BY OrderDate DESC;

DROP TABLE IF EXISTS amt_spent_2016;
CREATE TEMPORARY TABLE amt_spent_2016
	SELECT C.CustomerID, C.CompanyName, ROUND(SUM(D.Quantity*D.UnitPrice),2) AS Total_Price, ROUND(SUM(D.Quantity*D.UnitPrice*D.Discount),2) AS Total_Discount
	FROM Customers C
		LEFT OUTER JOIN 2016_Orders O ON C.CustomerID = O.CustomerID
		INNER JOIN OrderDetails D ON O.OrderID = D.OrderID
	GROUP BY C.CustomerID
	ORDER BY C.CustomerID;

CREATE TEMPORARY TABLE amt_spent_2016_discount
	SELECT *, (Total_Price-Total_Discount) AS Post_Discount
	FROM amt_spent_2016;

SELECT *,
	CASE
		WHEN Post_Discount < 1000 THEN 'Low'
        WHEN Post_Discount BETWEEN 1000 AND 5000 THEN 'Medium'
        WHEN POST_DISCOUNT > 5000 THEN 'High'
	END AS 'Grouping'
FROM amt_spent_2016_discount",10.0,cmp8819,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
1272,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT C.customerID, O.OrderID, COUNT(D.ProductID) AS Num_Products, ROUND(SUM((D.Quantity*D.UnitPrice)),2) AS Total_Price
FROM Customers C
	INNER JOIN Orders O ON C.CustomerID = O.CustomerID
    INNER JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY C.customerID, O.OrderID
HAVING Total_Price > 10000
ORDER BY Total_Price DESC;",9.0,cmp8819,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
1273,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT DISTINCT (ShipCountry) AS Unique_Country, AVG(Freight) AS Avg_Freight
FROM Orders
GROUP BY ShipCountry
ORDER BY Avg_Freight DESC
LIMIT 3;",7.5,cmp8819,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1274,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.OrderID) AS Num_Orders
FROM Customers C
	LEFT OUTER JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID
ORDER BY Num_Orders DESC;",10.0,cmp8819,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1275,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT DATE(MIN(OrderDate)) AS Date, TIME(MIN(OrderDate)) AS Time
FROM Orders;",7.5,cmp8819,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
1276,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	INNER JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",7.5,cmp8819,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1277,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,cmp8819,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1278,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Country = ""USA"" AND Title = ""Sales Representative"";",5.0,cmp8819,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1279,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(O.OrderID) AS Num_orders, COUNT(DISTINCT(DATE(O.ShippedDate))) AS Num_days
FROM Orders O
	INNER JOIN Shippers S ON O.ShipVia = S.ShipperID 
GROUP BY S.ShipperID",7.5,cmp8819,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
1290,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"
Select 
	O.CustomerID 
    Count(D.ProductID) as num_of_products
    sum(D.Quantity) as NumUnits 
    sum(D.UnitPrice * D.Quantity) as total_price  
From Orders O
	Join OrderDetails D on O.OrderID = D.OrderID
Group by O.CustomerID
Order by total_price DESC
Having sum(D.UnitPrice * D.Quantity)> 10000;
",2.0,sek495,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
1291,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"
Select 
	O.CustomerID 
    Count(D.ProductID) as num_of_products
    sum(D.Quantity) as num_units 
    sum(D.UnitPrice*D.Quantity) as total_price  
From Orders O
	Inner Join OrderDetails D on O.OrderID = D.OrderID
Group by O.CustomerID
Having sum(D.UnitPrice * D.Quantity)> 10000
Order by total_price DESC;

",7.5,sek495,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
1292,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"Select ShipCountry, avg(Freight) as avg_freight
From Orders
Group by ShipCountry
Order by avg_freight DESC
Limit 3;",7.5,sek495,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1293,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select C.CustomerID, count(O.OrderID) 
From Customers C 
	Left Join Orders O on O.CustomerID = C.CustomerID 
Group by C.CustomerID;",7.5,sek495,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1294,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"Select P.ProductID, P.ProductName, S.SupplierID, S.CompanyName 
From Products P 
	Join Suppliers S on S.SupplierID = P.SupplierID
Group by P.ProductID, S.SupplierID;",5.0,sek495,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1295,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"Select ProductID, ProductName 
From Products 
Where ProductName like '%queso%';",5.0,sek495,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1296,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"Select FirstName, LastName, HireDate 
From Employees 
	Where Title = 'Sales Representative' 
	and Country = 'USA';
",5.0,sek495,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1297,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"Select M.origin, M.dest, A.State 
From m_ticket_prices M, m_airports A 
Group by A.State M.origin, M.dest; ",2.0,sek495,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
1298,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"Select 
	A.state, 
	T.origin, 
    count(T.origin), 
    count(T.carriers), 
    sum(T.passengers) as total_passengers, 
    avg(T.fare_per_mile)
From m_ticket_prices M, m_airports A 
Group by A.State, T.origin;",1.0,sek495,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
1299,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"Select
	carrier,
	count(origin)- count(dest) as num_routes,
    count(origin) as num_airports_leave 
    avg(fare_per_mile) 
From m_ticket_prices 
Where sum(passengers) > 20,000 
Group by carrier;",5.0,sek495,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
1310,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"Select 
    origin, 
    dest, 
    max(fare) as most_expensive, 
    min(fare) as cheapest_fare, 
    avg(fare) as avg_fare, 
    count(carrier) as num_carriers, 
    sum(passengers) as total_passengers 
From m_ticket_prices 
Group by origin, dest 
Having num_carriers >= 3 and total_passengers > 10,000;",7.5,sek495,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
1356,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"Create temporary table male_frequency as 
	Select 
		first_name, 
        count(first_name) as male_freq 
	From actors  
    Where gender = 'M'
    Group by first_name;

Create temporary table female_frequency as 
	Select 
		first_name, 
        count(first_name) as female_freq 
	From actors  
    Where gender = 'F'
    Group by first_name;


Select Distinct 
	E.first_name, 
    M.male_freq, 
    F.female_freq,
    ABS(log(male_freq / female_freq)) as ambiguous_names 
From eligible_names E 
	Join male_frequency M on M.first_name = E.first_name 
    Join female_frequency F on F.first_name = E.first_name 
Where M.male_freq is not null and M.male_freq > 0 and F.female_freq is not null and F.female_freq > 0 
Order by ambiguous_names ASC;",2.0,sek495,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1357,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Select 
	A.first_name, 
    count(A.first_name) as total_cnt,  
    F.female_cnt, 
    count(A.first_name) - female_cnt as male_cnt 
From actors A
	inner join female_names F on A.first_name = F.first_name 
Group by A.first_name, female_cnt
Having male_cnt = 0;",1.0,sek495,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1358,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"Create temporary table male_names as
	Select 
		first_name, 
		Count(*) as male_cnt, 
		gender
	From actors 
	Where first_name not like ""%.%"" and first_name not like ""%(%)%"" 
	Group by first_name, gender
	Having gender = 'M' and male_cnt >= 50
	Order by male_cnt DESC;

Create temporary table female_names as
	Select 
		first_name, 
		Count(*) as female_cnt, 
		gender
	From actors 
	Where first_name not like ""%.%"" and first_name not like ""%(%)%"" 
	Group by first_name, gender
	Having gender = 'F' and female_cnt >= 50
	Order by female_cnt DESC;

Select 
	A.first_name, 
    count(A.first_name) as total_cnt,  
    M.male_cnt, 
    count(A.first_name) - male_cnt as female_cnt 
From actors A
	inner join male_names M on A.first_name = M.first_name 
Group by A.first_name, male_cnt
Having female_cnt = 0;",1.0,sek495,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1359,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"Create temporary table eligible_names as 
	Select 
		first_name, 
		count(*) as cnt,  
	From actors 
	Where first_name not like ""%.%"" and first_name not like ""%(%)%"" 
	Group by first_name 
	Having cnt >=50
	Order by cnt DESC;
",1.0,sek495,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1360,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"Select 
	T.artist_id,
    T.album_id, 
    T.track_id,
    T.track_name,
    Min(P.played_on) as min_played_on,
    Max(P.played_on) as max_played_on 
From track T
	Left join tracks_played P on P.track_id = T.track_id and P.artist_id = T.artist_id and P.album_id = T.album_id
Group by T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,sek495,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1361,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"Select 
    A.artist_name, 
    Count(L.album_id) as num_albums
From album L
	Inner join artist A on A.artist_id = L.artist_id 
Group by A.artist_name;",1.0,sek495,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1362,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question," SELECT Convert(TP.played_on, date) AS date_played
	, A.artist_id
	, A.artist_name
	, COUNT(DISTINCT TP.user_id) AS users
	, SUM(T.time) AS total_time
	, COUNT(TP.artist_id) AS total_tracks
FROM tracks_played TP
	JOIN artist A ON TP.artist_id = A.artist_id
	JOIN track T ON TP.track_id = T.track_id AND TP.album_id = T.album_id AND TP.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played;",1.0,sek495,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
1363,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"Select 
	U.user_id, 
    Count(R.track_id) as tracks_played,
    Sum(R.time) as total_time
From users U
	Left join tracks_played T on T.user_id = U.user_id
    Left join track R on R.artist_id = T.artist_id and R.album_id = T.album_id and R.track_id = T.track_id
Group by U.user_id
Order by U.user_id ASC;",1.0,sek495,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
1364,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"Select 
     A.album_id, 
     A.artist_id,
    sum(T.time) as length_album
From track T 
	Left Join album A on A.album_id = T.album_id and A.artist_id = T.artist_id 
Group by A.album_id, A.artist_id
Having length_album > 60;",1.0,sek495,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1365,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"Select
     A.album_id, 
     A.artist_id,
    Count(T.track_id) as num_tracks, 
    sum(T.time) as length_tracks
From track T 
	Left Join album A on A.album_id = T.album_id and A.artist_id = T.artist_id 
Group by A.album_id, A.artist_id;",1.0,sek495,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
1366,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"Select artist_id, Count(album_id) as cnt_albums
From album  
Group by artist_id;",1.0,sek495,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1367,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"Select
     avg(time) as avg_length, 
    STDDEV(time) as std_lenght
From track;",1.0,sek495,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1368,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"Select Count(*) as cnt_tracks
From track;",1.0,sek495,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1369,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;
Select Count(*) as cnt_artists 
from artist; ",1.0,sek495,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1370,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"Select 
U.first_name, 
U.last_name 
From users U
	Left Join tracks_played P on P.user_id = U.user_id
Where played_on is Null;",1.0,sek495,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1371,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"Select
U.user_id,
U.first_name, 
U.last_name,  
A.album_name,
T.track_name,
P.played_on  
From tracks_played P 
	Left Join users U on U.user_id = P.user_id 
	Left Join album A on A.album_id = P.album_id and A.artist_id = P.artist_id
    Left Join track T on T.track_id = P.track_id and T.album_id = P.album_id and T.artist_id = P.artist_id
Order by U.user_id, played_on ASC;",1.0,sek495,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1372,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Select T.track_id, T.track_name, A.artist_id, T.album_id, T.time
From track T 
    INNER JOIN artist A on T.artist_id = A.artist_id
Where A.artist_name = ""The Stone Roses""
Order by time ASC;
",1.0,sek495,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1373,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"Select T.track_name, L.album_name, A.artist_name
From track T 
    Inner Join album L on L.album_id = T.album_id AND L.artist_id = T.artist_id
    Inner Join artist A on A.artist_id = L.artist_id;",1.0,sek495,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
1374,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"Select*
From track T
	Inner Join album L on L.album_id = T.album_id AND L.artist_id = T.artist_id 
Where L.album_name = 'Second Coming';",1.0,sek495,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1375,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"Select*
From album L
	Inner Join artist R on L.album_id = R.artist_id 
Where R.artist_name = 'New Order'",1.0,sek495,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1376,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"Select*
From track
Where track_name like ""%love%"";

#could also use SELECT track_name to only see the track name ",1.0,sek495,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1377,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT track_name
From track
Where artist_id = 1 or artist_id = 3 or artist_id =5;

SELECT track_name
From track
Where artist_id in (""1"",""3"",""5"");

#could use SELECT* for more information ",1.0,sek495,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
1378,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT*
From album
Where album_name >= ""F"" and album_name < ""S"";

or

SELECT*
From album
Where left (album_name, 1) > ""E"" and left (album_name, 1) < ""S"";

or

SELECT* 
From album 
Where album_name BETWEEN 'F' and 'R'; 

",1.0,sek495,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
1379,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT*
From track
Where track_name < ""M"";",1.0,sek495,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1380,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT* 
From track
Where artist_id = 3 and album_id = 2;
",1.0,sek495,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1381,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT*
From album
Where artist_id = 4;",1.0,sek495,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1382,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT*
From artist 
Where artist_name = ""The Rolling Stones"";",1.0,sek495,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1383,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT*
From artist 
Where artist_id = 5; 
",1.0,sek495,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1384,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_id, track_name, artist_id, album_id, time
FROM track 
ORDER BY time ASC
LIMIT 10;",1.0,sek495,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1385,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name as album_title
FROM album;",1.0,sek495,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1386,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,sek495,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1387,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT track_id, track_name, artist_id, album_id, time
FROM track;",1.0,sek495,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1388,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT artist_id, album_id, album_name
FROM album; ",1.0,sek495,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1389,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"SELECT artist_id, artist_name
FROM artist; ",1.0,sek495,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1408,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, total_price, total_discount_applied,
	CASE 
		WHEN total_after_discount > 5000 THEN 'High'
		WHEN total_after_discount <1000 THEN 'Low'
        ELSE 'Medium'
	END AS 'Grouping'
FROM (
SELECT C.CustomerID, C.CompanyName, SUM(UnitPrice*Quantity) AS total_price, SUM(UnitPrice*Quantity*Discount) AS total_discount_applied, SUM(UnitPrice*Quantity)-SUM(UnitPrice*Quantity*Discount) AS total_after_discount
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
LEFT JOIN OrderDetails OD ON O.OrderID = OD.OrderID
WHERE OrderDate LIKE '2016%'
GROUP BY C.CustomerID, C.CompanyName
ORDER BY C.CustomerID) A;",10.0,dd3174,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
1410,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, COUNT(OD.ProductID) AS num_products, SUM(OD.Quantity) AS total_units, SUM(OD.UnitPrice*OD.Quantity) AS total_price
FROM OrderDetails OD
LEFT JOIN Orders O ON OD.OrderID = O.OrderID
LEFT JOIN Products P ON OD.ProductID = P.ProductID
GROUP BY OD.OrderID, O.CustomerID
HAVING total_price > 10000
ORDER BY total_price DESC;",9.0,dd3174,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
1411,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC
LIMIT 3;",7.5,dd3174,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1412,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT DISTINCT C.CustomerID, COUNT(O.OrderID) AS cnt_orders
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",10.0,dd3174,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1413,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT DATE(MIN(OrderDate)) AS min_date, TIME(MIN(OrderDate)) AS min_time
FROM Orders;",7.5,dd3174,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
1414,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
INNER JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID ASC;",7.5,dd3174,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1415,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,dd3174,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1416,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,dd3174,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1417,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, COUNT(OrderID) AS cnt_orders, COUNT(DISTINCT(DATE(ShippedDate))) AS cnt_days
FROM Shippers S
INNER JOIN Orders O ON S.ShipperID = O.ShipVia
GROUP BY S.ShipperID, S.CompanyName;",7.5,dd3174,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
1480,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
    c.CustomerID,
    c.CompanyName,
    t.total_spent AS total_spent_before_discount,
    t.total_discount,
    CASE 
        WHEN t.total_spent >= 0 AND t.total_spent <= 1000 THEN 'Low'
        WHEN t.total_spent > 1000 AND t.total_spent <= 5000 THEN 'Medium'
        ELSE 'High'
    END AS customer_group
FROM 
    Customers c
    JOIN (
        SELECT 
            o.CustomerID,
            SUM(od.Quantity * od.UnitPrice) AS total_spent,
            SUM(od.Quantity * od.UnitPrice * od.Discount) AS total_discount
        FROM 
            Orders o 
            JOIN OrderDetails od ON o.OrderID = od.OrderID
        WHERE 
            YEAR(o.OrderDate) = 2016
        GROUP BY 
            o.CustomerID
    ) t ON c.CustomerID = t.CustomerID
ORDER BY 
    c.CustomerID;
",10.0,rrk6921,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
1481,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"CREATE TEMPORARY TABLE temp_orders_2016 AS (
    SELECT 
        CustomerID,
        Quantity,
        UnitPrice,
        Discount
    FROM 
        Orders o 
        JOIN OrderDetails od ON o.OrderID = od.OrderID
    WHERE 
        YEAR(o.OrderDate) = 2016
);

SELECT 
    c.CustomerID,
    c.CompanyName,
    SUM(t.Quantity * t.UnitPrice) AS total_price,
    SUM(t.Quantity * t.UnitPrice * t.Discount) AS total_discount
FROM 
    Customers c 
    JOIN temp_orders_2016 t ON c.CustomerID = t.CustomerID
GROUP BY 
    c.CustomerID,
    c.CompanyName
ORDER BY 
    c.CustomerID;
",10.0,rrk6921,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
1482,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"use northwind;

SELECT o.CustomerID, COUNT(od.ProductID) AS NumProducts, SUM(od.Quantity) AS TotalUnits, 
SUM(od.Quantity * od.UnitPrice) AS TotalPrice

FROM Orders o

JOIN OrderDetails od ON o.OrderID = od.OrderID

GROUP BY o.CustomerID, o.OrderID

HAVING SUM(od.Quantity * od.UnitPrice) > 10000

ORDER BY TotalPrice DESC;",7.5,rrk6921,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
1483,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"use northwind;

SELECT ShipCountry, AVG(Freight) AS AverageFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC
LIMIT 3;
",7.5,rrk6921,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1484,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"use northwind;

SELECT C.CustomerID, COUNT(O.OrderID) AS Number_Of_Orders
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",7.5,rrk6921,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1485,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"use northwind;

Select ProductID, ProductName,  CompanyName
from Products P
inner join Suppliers S
on P.SupplierID = S.SupplierID
order by ProductID;",5.0,rrk6921,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1486,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"use northwind;

Select ProductID, ProductName

from Products

where ProductName like '%queso%';",5.0,rrk6921,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1487,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;

select FirstName, LastName, HireDate 
from Employees

where Title = 'Sales Representative'  and Country = 'USA';",5.0,rrk6921,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1488,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"use flights;

SELECT DISTINCT
    f.origin,
    f.dest,
    a.state
FROM
    flights.m_ticket_prices f
JOIN
    flights.m_airports a ON f.origin = a.airport
JOIN
    flights.m_airports b ON f.dest = b.airport
WHERE
    a.state = b.state;
",7.5,rrk6921,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
1489,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"use flights;

SELECT 
    a.state AS origin_state,
    COUNT(DISTINCT a.airport) AS num_origins,
    COUNT(DISTINCT tp.carrier) AS num_carriers,
    SUM(tp.passengers) AS total_passengers,
    AVG(tp.fare / tp.distance) AS avg_fare_per_mile
FROM 
    flights.m_ticket_prices tp
    JOIN flights.m_airports a ON tp.origin = a.airport
GROUP BY 
    origin_state
ORDER BY 
    origin_state;
",7.5,rrk6921,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
1490,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT 
    carrier,
    COUNT(DISTINCT CONCAT(origin, '-', dest)) AS num_routes,
    COUNT(DISTINCT origin) AS num_airports,
    SUM(passengers) AS total_passengers,
    SUM(fare) / SUM(distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices
GROUP BY carrier
HAVING total_passengers > 20000;
",10.0,rrk6921,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
1501,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"use flights;
SELECT 
    origin,
    dest,
    MIN(fare) AS cheapest_fare,
    MAX(fare) AS most_expensive_fare,
    AVG(fare) AS average_fare,
    COUNT(DISTINCT carrier) AS carriers_count,
    SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin, dest
HAVING carriers_count >= 3 AND total_passengers > 10000;",7.5,rrk6921,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
1502,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"use flights;

select pa.origin, 
DENSE_RANK() over(order by totalPassengers desc) as national_rank,
DENSE_RANK() over(partition by ma.state order by totalPassengers desc) as state_rank,
totalPassengers
from m_airports ma 
join passengers_per_airport pa 
on pa.origin = ma.airport 
order by national_rank;",4.0,rrk6921,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
1503,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"use flights;
create TEMPORARY TABLE passengers_per_airport as
select origin, SUM(passengers) as totalPassengers from m_ticket_prices group by origin;

# to see the output
#select* from passengers_per_airport",1.0,rrk6921,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
1504,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"use facebook;

SELECT si.signUpDate, 
       si.totalSignUpsTillToday - ina.totalInactiveTillToday as totalActiveUsers
FROM SingUpsAsOf si
LEFT JOIN InactiveAsOf ina ON si.signUpDate = ina.InactiveDate;
",4.0,rrk6921,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
1505,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"use facebook;
create TEMPORARY TABLE InactiveAsOf as
select InactiveDate, SUM(totalInactiveOn) over(order by InactiveDate) as totalInactiveTillToday
from InactiveOn;

#use this to see the output
#select* from InactiveAsOf;",2.0,rrk6921,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
1506,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"use facebook;

create TEMPORARY TABLE SingUpsAsOf as
select signUpDate, SUM(totalSignUps) over(order by signUpDate) as totalSignUpsTillToday from SignUpsOn;

#to see the output
#select* from SingUpsAsOf;",2.0,rrk6921,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
1507,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"use facebook;

create TEMPORARY TABLE InactiveOn as
select Date(LastUpdate) as InactiveDate, COUNT(*) as totalInactiveOn from Profiles group by InactiveDate order by InactiveDate;

#to see the output
#select* from InactiveOn;",1.0,rrk6921,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
1508,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"use facebook;

create TEMPORARY TABLE SignUpsOn as 
select Date(MemberSince) as signUpDate, COUNT(*) as totalSignUps from Profiles group by signUpDate order by signUpDate;

#to see the output
#select* from SignUpsOn;",1.0,rrk6921,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
1509,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"drop table if exists eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) AS count, SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS female_count
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING count >= 50;

SELECT first_name, male_count, female_count, ABS(LOG(male_count/female_count)) AS ambiguity_score
FROM eligible_names
WHERE male_count > 0 AND female_count > 0
ORDER BY ambiguity_score;
",2.0,rrk6921,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1510,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"
Drop table IF Exists female_names ;
CREATE TEMPORARY TABLE female_names AS
SELECT first_name, COUNT(*) as freq
FROM actors
WHERE gender = 'F' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING freq >= 50;

SELECT fn.first_name, fn.freq
FROM female_names fn
LEFT JOIN (
  SELECT DISTINCT first_name
  FROM actors
  WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
) mn ON fn.first_name = mn.first_name
WHERE mn.first_name IS NULL
ORDER BY freq desc;",1.0,rrk6921,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1511,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) AS frequency
FROM actors
WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING frequency >= 50;

SELECT m.first_name, m.frequency
FROM male_names m
WHERE NOT EXISTS (
  SELECT *
  FROM actors a
  WHERE a.gender = 'F' AND a.first_name = m.first_name
)
ORDER BY frequency DESC;
",1.0,rrk6921,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1512,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TABLE IF EXISTS eligible_names;

CREATE TEMPORARY TABLE eligible_names AS
select first_name, count(*) as frequency 
from actors where first_name not like '%(%)%' and first_name not like '%.%' 
group by first_name 
having frequency >= 50;
",1.0,rrk6921,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1513,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"use music;
use music;
Select 
          tr.artist_id,
          tr.album_id,
          tr.track_id, tr.track_name,
          MIN(tp.played_on) AS first_played,
          MAX(tp.played_on) AS last_played

from track tr

LEFT JOIN tracks_played tp ON tr.track_id = tp.track_id and  tr.artist_id = tp.artist_id and tr.album_id = tp.album_id

GROUP BY tr.track_id, tr.artist_id, tr.album_id;
",1.0,rrk6921,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1514,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"use music;
SELECT 
	artist.artist_id,
       artist.artist_name, 
  COUNT(album.album_id) AS num_albums 
FROM 
  artist 
  LEFT JOIN album ON artist.artist_id = album.artist_id 
GROUP BY 
  artist.artist_id;
",1.0,rrk6921,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1515,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"use Music;

select
  DATE(tp.played_on) AS date_played,
  tp.artist_id,
  ar.artist_name,
  COUNT(DISTINCT tp.user_id) AS users,
  SUM(tr.time) AS total_time,
  COUNT( tp.track_id) AS total_tracks 
from
  tracks_played tp
JOIN
  artist ar 
  ON ar.artist_id = tp.artist_id
JOIN
  track tr 
  ON tr.track_id = tp.track_id and tr.artist_id = tp.artist_id and tr.album_id = tp.album_id
GROUP BY
  date_played,
  tp.artist_id,
  ar.artist_name;


",1.0,rrk6921,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
1516,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"use Music;

SELECT ur.user_id, COUNT( tp.track_id) as tracks_played, SUM(tr.time) as total_time
FROM users ur
	LEFT JOIN tracks_played tp  ON ur.user_id = tp.user_id
       LEFT JOIN track tr ON  tr.track_id = tp.track_id and tr.artist_id = tp.artist_id and tr.album_id= tp.album_id
GROUP BY ur.user_id
ORDER BY user_id;
",1.0,rrk6921,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
1517,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"use Music;
select a.artist_id, a.album_id, SUM(t.time) 
from album a join track t on a.artist_id = t.artist_id and a.album_id = t.album_id 
group by a.artist_id, a.album_id 
having SUM(t.time) > 60;",1.0,rrk6921,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1518,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"use Music;

SELECT al.album_id, al.artist_id,
        COUNT(tr.track_id) AS cnt_track, SUM(tr.time) AS sum_time
FROM track tr
	JOIN album al ON al.album_id = tr.album_id and  al.artist_id = tr.artist_id
GROUP BY al.album_id, al.artist_id;",1.0,rrk6921,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
1519,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"use music;

select artist_id, count(*) as cnt_albums from album group by artist_id;

",1.0,rrk6921,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1520,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"use music;

SELECT 
        AVG(time) AS avg_time, STDDEV(time) AS std_time
FROM track;",1.0,rrk6921,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1521,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"# Find the number of tracks in the database
use music;
SELECT COUNT(*) AS cnt_tracks
FROM track;",1.0,rrk6921,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1522,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"# Find the number of artists in the database
use music;

SELECT COUNT(*) AS cnt_artist
FROM artist;",1.0,rrk6921,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1523,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"use music;
SELECT us.first_name, us.last_name
FROM users us
LEFT JOIN tracks_played tp ON us.user_id = tp.user_id
WHERE tp.user_id IS NULL;

",1.0,rrk6921,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1524,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"use music;
select u.user_id, u.first_name, u.last_name, a.album_name, t.track_name, tp.played_on 

from track t 

inner join tracks_played tp on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id 

inner join album a on a.artist_id = t.artist_id and a.album_id = t.album_id 

inner join users u on tp.user_id = u.user_id

limit 5000;
",1.0,rrk6921,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1525,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"use music;

select tr.track_id, tr.track_name, tr.artist_id, tr.album_id, tr.time
from track tr
inner join artist ar 
on tr.artist_id = ar.artist_id
where artist_name = ""The Stone Roses""
order by tr.time;

",1.0,rrk6921,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1526,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"use music;

select t.track_name, ar.artist_name, al.album_name 
from track t inner join album al on t.artist_id = al.artist_id and t.album_id = al.album_id 
inner join artist ar on ar.artist_id = al.artist_id;
",1.0,rrk6921,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
1527,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"use music;
select tr.track_id, tr.track_name, al.artist_id, al.album_id, tr.time
from album al
inner join track tr
on al.artist_id = tr.artist_id
where al.album_name = 'Second Coming';
",1.0,rrk6921,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1528,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;
Select * from artist ar
inner join album al
on ar.artist_id = al.artist_id
where ar.artist_name = ""New Order"";",1.0,rrk6921,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1529,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"use music;

Select track_name 
from track
where track_name Like ""%Love%"";
",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1530,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"use movies;

Select track_name from track
where artist_id IN (""1"",""3"", ""5"")
order by artist_id;


/*using OR*/

Select track_name from track
where artist_id = ""1"" OR artist_id = ""3"" OR  artist_id= ""5""
order by artist_id;

",1.0,rrk6921,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
1531,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"use music;

select album_name
from album
where album_name>= ""F"" AND album_name <""S"";



",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
1532,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"use music;

select *
from album
where album_name <= ""L""
Order by album_name;

",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1533,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"use music;

Select track_name from track
where artist_id = ""3"" and album_id = ""2"";

",1.0,rrk6921,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1534,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"use music;

Select album_name from album
where artist_id = ""4"";
",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1535,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"use music;

select *
from artist
where artist_name = 'The Rolling Stones';",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1536,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;

select artist_id, artist_name 
from artist
where artist_id = 5;",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1537,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"use music;
SELECT track_id, track_name, artist_id,	album_id, time
FROM track
ORDER BY time ASC
LIMIT 10;

",1.0,rrk6921,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1538,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"use music;

Select artist_id, album_name as album_tile
from album;
",1.0,rrk6921,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1539,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"use music:
select artist_name from artist
   order by artist_name asc;
",1.0,rrk6921,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1540,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"use music;
select * from track;
",1.0,rrk6921,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1541,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"use music;
select * 
from album;
",1.0,rrk6921,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1542,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;
select *
from artist;
",1.0,rrk6921,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1549,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, TotalPrice AS TotalSpent, TotalDiscountApplied, TotalAfterDiscount,
CASE
	WHEN TotalAfterDiscount > 0 AND TotalAfterDiscount < 1000 THEN ""Low""
    WHEN TotalAfterDiscount > 1000 AND TotalAfterDiscount < 5000 THEN ""Medium""
    ELSE ""High""
END AS CustomerGroup
FROM (
	SELECT *, (TotalPrice - TotalDiscountApplied) AS TotalAfterDiscount
	FROM (
			SELECT C.CustomerID, 
			C.CompanyName, 
			SUM(OD.Quantity * OD.UnitPrice) AS TotalPrice, 
			SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TotalDiscountApplied 
		FROM Orders O 
		RIGHT JOIN Customers C
		ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
		LEFT JOIN OrderDetails OD 
		ON O.OrderID = OD.OrderID
		GROUP BY C.CustomerID
		ORDER BY C.CustomerID
		) TB1
) TB2;",10.0,sm9439,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
1550,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT C.CustomerID, 
	C.CompanyName, 
    SUM(OD.Quantity * OD.UnitPrice) AS TotalPrice, 
    SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TotalDiscountApplied 
FROM Orders O 
RIGHT JOIN Customers C
ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
LEFT JOIN OrderDetails OD 
ON O.OrderID = OD.OrderID
GROUP BY C.CustomerID
ORDER BY C.CustomerID;",10.0,sm9439,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
1551,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, 
	COUNT(*) AS TotalProducts, 
    SUM(OD.Quantity) AS TotalQuantity, 
    SUM(OD.UnitPrice * OD.Quantity) AS TotalPrice 
FROM Orders O JOIN OrderDetails OD
ON O.OrderID = OD.OrderID
GROUP BY O.OrderID HAVING TotalPrice > 10000
ORDER BY TotalPrice DESC;",7.5,sm9439,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
1552,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) FROM Orders 
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC LIMIT 3;",7.5,sm9439,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1553,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.CustomerID) FROM Customers C LEFT JOIN Orders O
ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",7.5,sm9439,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1554,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName FROM Products P JOIN Suppliers S
ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",5.0,sm9439,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1555,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductName,
	ProductID
FROM Products 
WHERE ProductName LIKE ""%queso%"";",5.0,sm9439,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1556,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, 
	LastName, 
	HireDate 
FROM Employees 
WHERE Title = ""Sales Representative"" AND Country = ""USA"";",5.0,sm9439,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1557,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT T.origin, T.dest, A.state AS SecondState, T.FirstState FROM (
	SELECT T.*, A.state AS FirstState 
    FROM (SELECT dest, origin FROM m_ticket_prices GROUP BY dest, origin) T 
    JOIN m_airports A ON T.origin = A.airport) T
JOIN m_airports A ON T.dest = A.airport
WHERE T.FirstState = A.state;",7.5,sm9439,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
1558,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT A.state, 
	COUNT(*) AS TotalOriginAirport, 
	COUNT(DISTINCT carrier) AS TotalCarrier,
    SUM(passengers) AS TotalPass,
    AVG(fare_per_mile) as AvgFPM 
FROM m_ticket_prices T
INNER JOIN m_airports A
ON T.origin = A.airport
GROUP BY A.state;",7.0,sm9439,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
1559,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT COUNT(*) AS NoOfRoutes, 
	COUNT(origin) AS OriginAirport, 
	AVG(fare_per_mile) AS AvgFPM, 
	SUM(passengers) AS TotalPass
FROM m_ticket_prices
GROUP BY carrier
HAVING TotalPass > 20000;",9.5,sm9439,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
1570,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT MIN(fare) AS MinFare, 
	MAX(fare) AS MaxFare, 
    AVG(fare) AS AvgFare, 
    COUNT(*) AS TotalCarriers,
    SUM(passengers) AS TotalPassengers
FROM m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) >= 3 AND SUM(passengers) > 10000;",7.5,sm9439,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
1571,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT M.airport,P.total_number_passengers,
RANK() OVER(PARTITION BY M.state ORDER BY P.total_number_passengers DESC) AS state_rank,
RANK() OVER(ORDER BY P.total_number_passengers DESC) AS national_rank
FROM passengers_per_airport AS P
INNER JOIN m_airports AS M
ON M.airport = P.origin;",4.0,sm9439,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
1572,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_number_passengers FROM m_ticket_prices
GROUP BY origin;",1.0,sm9439,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
1573,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT SU.MemberSince,SU.count - IU.count AS total_active_users FROM SingUpsAsOf AS SU
INNER JOIN InactiveAsOf AS IU ON SU.MemberSince = IU.LastUpdate;",4.0,sm9439,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
1574,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT *, SUM(count) OVER(ORDER BY LastUpdate) AS cumulative_sum_inactive FROM InactiveOn;",2.0,sm9439,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
1575,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE SingUpsAsOf AS
SELECT *, SUM(count) OVER(ORDER BY MemberSince) AS cumulative_sum_signups FROM SignUpsOn;",2.0,sm9439,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
1576,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT LastUpdate, COUNT(*) AS count FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",1.0,sm9439,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
1577,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsOn AS
SELECT MemberSince, COUNT(*) AS count FROM Profiles
GROUP BY MemberSince;",1.0,sm9439,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
1578,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT MA.first_name, ABS(LOG(MA.count / FA.count)) AS ranking FROM eligible_names AS EN
INNER JOIN male_actors AS MA ON EN.first_name = MA.first_name
INNER JOIN female_actors AS FA ON FA.first_name = EN.first_name
ORDER BY ranking;",2.0,sm9439,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1579,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT * FROM eligible_names WHERE first_name IN (SELECT first_name FROM female_actors) AND first_name NOT IN (SELECT first_name FROM male_actors)
ORDER BY count DESC;",1.0,sm9439,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1580,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_actors AS 
SELECT first_name, gender, COUNT(*) AS count FROM actors
GROUP BY first_name, gender
HAVING gender IN(""M"")
ORDER BY first_name;

CREATE TEMPORARY TABLE female_actors AS 
SELECT first_name, gender, COUNT(*) AS count FROM actors
GROUP BY first_name, gender
HAVING gender IN(""F"")
ORDER BY first_name;

SELECT * FROM eligible_names WHERE first_name IN (SELECT first_name FROM male_actors) AND first_name NOT IN (SELECT first_name FROM female_actors)
ORDER BY count DESC;",1.0,sm9439,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1581,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS 
SELECT first_name, COUNT(*) AS count FROM actors 
WHERE id NOT IN (SELECT id FROM actors WHERE first_name LIKE '%.%' OR first_name LIKE '%(%' OR first_name LIKE '%)%')
GROUP BY first_name
HAVING count >= 50
ORDER BY first_name;",1.0,sm9439,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1599,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on FROM track AS T
LEFT JOIN tracks_played AS TP ON TP.track_id = T.track_id AND TP.artist_id = T.artist_id AND TP.album_id = T.album_id
GROUP BY T.artist_id, T.album_id, T.track_id;",1.0,sm9439,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1600,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_ID, A.artist_name AS artist_name, 
	COUNT(AL.album_id) AS num_albums 
FROM artist AS A
LEFT JOIN album AS AL ON AL.artist_id = A.artist_id
GROUP BY A.artist_id;",1.0,sm9439,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1601,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT CAST(TP.played_on AS DATE) AS date_played, A.artist_id, A.artist_name, 
       COUNT(DISTINCT TP.user_id) AS users, 
       SUM(T.time) AS total_time, count(*) AS total_track
FROM tracks_played AS TP 
JOIN track AS T ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
JOIN artist AS A ON TP.artist_id = A.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played;",1.0,sm9439,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
1602,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, 
       COUNT(TP.track_id) AS tracks_played, 
       SUM(T.time) AS total_time 
FROM users AS U
LEFT JOIN tracks_played AS TP ON U.user_id = TP.user_id 
LEFT JOIN track AS T ON TP.track_id = T.track_id AND TP.album_id = T.album_id AND TP.artist_id = T.artist_id
GROUP BY U.user_id
ORDER BY U.user_id;",1.0,sm9439,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
1603,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, artist_id, SUM(time) AS total_time FROM track GROUP BY album_id, artist_id HAVING total_time > 60;

",1.0,sm9439,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1604,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(*) AS track_id, SUM(time) AS total_time FROM track GROUP BY artist_id, album_id;
",1.0,sm9439,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
1605,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(DISTINCT album_id) AS cnt_albums FROM album GROUP BY artist_id;
",1.0,sm9439,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1606,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time FROM track;",1.0,sm9439,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1607,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,SELECT COUNT(*) AS track_id FROM track;,1.0,sm9439,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1608,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,SELECT COUNT(*) AS artist_id FROM artist;,1.0,sm9439,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1609,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name FROM tracks_played as T 
RIGHT JOIN users as U 
ON T.user_id = U.user_id
WHERE T.user_id IS NULL;",1.0,sm9439,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1610,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.first_name, U.last_name, TP.user_id, AL.album_name, T.track_name, TP.played_on FROM tracks_played as TP
INNER JOIN users AS U ON U.user_id = TP.user_id
INNER JOIN track AS T ON T.track_id = TP.track_id AND T.artist_id = TP.artist_id AND T.album_id = TP.album_id
INNER JOIN album as AL ON AL.artist_id = TP.artist_id AND AL.album_id = TP.album_id
ORDER BY TP.user_id;",1.0,sm9439,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1611,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT * FROM track AS T
INNER JOIN artist AS AR ON T.artist_id = AR.artist_id
WHERE AR.artist_name = 'The Stone Roses'
ORDER BY time;",1.0,sm9439,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1612,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A.album_name, AR.artist_name FROM track AS T
INNER JOIN album AS A ON T.album_id = A.album_id AND T.artist_id = A.artist_id
INNER JOIN artist AS AR ON T.artist_id = AR.artist_id;",1.0,sm9439,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
1613,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT * FROM track T
INNER JOIN album A ON A.album_id = T.album_id AND A.artist_id = T.artist_id
WHERE A.album_name = 'Second Coming';",1.0,sm9439,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1614,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT * FROM album AL
INNER JOIN artist AR ON AL.artist_id = AR.artist_id
WHERE artist_name = 'New Order';",1.0,sm9439,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1626,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,SELECT * FROM track WHERE track_name LIKE '%Love%';,1.0,sm9439,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1627,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR Boolean Condition: 

SELECT * FROM track WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

IN Operation: 

SELECT * FROM track WHERE artist_id IN (1,3,5);
",1.0,sm9439,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
1628,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM album WHERE album_name >= 'F' AND album_name < 'S';
",1.0,sm9439,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
1629,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,SELECT * FROM track WHERE track_name < 'M';,1.0,sm9439,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1630,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,SELECT * FROM track WHERE artist_id = 3 AND album_id = 2;,1.0,sm9439,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1631,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * FROM album WHERE artist_id = 4;
",1.0,sm9439,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1632,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,SELECT * FROM artist WHERE artist_name = 'The Rolling Stones';,1.0,sm9439,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1633,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,SELECT * FROM artist WHERE artist_id = 5;,1.0,sm9439,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1634,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,SELECT * FROM track ORDER BY time LIMIT 10;,1.0,sm9439,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1635,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title FROM album;",1.0,sm9439,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1636,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,SELECT artist_name FROM artist ORDER BY artist_name;,1.0,sm9439,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1637,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,SELECT * FROM track;,1.0,sm9439,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1638,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,SELECT * FROM album;,1.0,sm9439,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1639,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,SELECT * FROM artist;,1.0,sm9439,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1676,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Same as above, but the last section of code was updated to the following:

-- Add only first_names that have ONLY female as gender with no male actors having this first_name
SELECT DISTINCT first_name
FROM actors
WHERE first_name IN (SELECT first_name FROM eligible_names)
	AND first_name NOT IN (SELECT first_name FROM all_male_names);


Please note I tried to store subqueries in temp tables but was not able to get my results. ",0.8,sn2860,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1677,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"Here is my attempt, hoping to receive some credit, though the code does not work:

-- Create an eligible_names list with requirements: 
-- 1) first_name excludes . and ()
-- 2) first_name appears at least 50 times
-- 3) first_name appears across both M and F genders
DROP TEMPORARY TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name,
		gender,
		COUNT(*) as count
	FROM actors
	WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%' AND first_name IN (
		SELECT first_name
		FROM actors
		GROUP BY first_name
		HAVING COUNT(DISTINCT gender) = 2
	)
	GROUP BY first_name, gender
	HAVING count >= 50
	ORDER BY first_name; #951

SELECT * FROM eligible_names;

-- Create an all_male names list  
SELECT COUNT(DISTINCT first_name)
FROM actors
WHERE gender = 'M'; #69293

SELECT DISTINCT first_name, COUNT(*) as male_count
FROM actors
WHERE gender = 'M'
GROUP BY first_name
ORDER BY COUNT(*) DESC;

DROP TEMPORARY TABLE IF",0.8,sn2860,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1678,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TEMPORARY TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name
	FROM actors
	WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
	GROUP BY first_name
	HAVING COUNT(*) >= 50 AND COUNT(DISTINCT gender) = 2
	ORDER BY first_name; #948",0.8,sn2860,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1679,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT
	T.artist_id, 
    T.album_id, 
    T.track_id, 
    T.track_name,
    MIN(TP.played_on) AS min_played_on,
    MAX(TP.played_on) AS max_played_on
FROM track T
	LEFT JOIN tracks_played TP ON T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id
GROUP BY 
	T.artist_id, 
    T.album_id, 
    T.track_id, 
    T.track_name;",1.0,sn2860,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1680,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT 
	AR.artist_id,
    AR.artist_name,
	COUNT(DISTINCT AL.album_id) AS num_albums
FROM artist AR
	INNER JOIN album AL ON AR.artist_id = AL.artist_id
GROUP BY AR.artist_id, AR.artist_name;",1.0,sn2860,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1681,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT 
	DATE(TP.played_on) AS date_played,
    TP.artist_id,
    A.artist_name,
    COUNT(DISTINCT TP.user_id) AS users,
    SUM(T.time) AS total_time,
	COUNT(TP.track_id) AS total_tracks
FROM tracks_played TP
	INNER JOIN artist A ON TP.artist_id = A.artist_id
    INNER JOIN track T ON TP.artist_id = T.artist_id AND (TP.album_id = T.album_id AND TP.track_id = T.track_id)
GROUP BY 
	DATE(TP.played_on), 
    TP.artist_id, 
    A.artist_name
ORDER BY date_played ASC, TP.artist_id ASC;",1.0,sn2860,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
1682,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
	LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
    LEFT JOIN track T ON TP.track_id = T.track_id
WHERE (TP.artist_id = T.artist_id AND TP.album_id = T.album_id) OR TP.track_id IS NULL
GROUP BY U.user_id
ORDER BY U.user_id;",1.0,sn2860,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
1683,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album.artist_id,
	album.album_id, 
    COUNT(track.track_id) AS cnt_tracks, 
    SUM(track.time) AS total_track_length
FROM album 
	INNER JOIN track ON album.album_id = track.album_id
WHERE album.artist_id = track.artist_id
GROUP BY 
	album.album_id, 
	album.artist_id
HAVING total_track_length > 60
ORDER BY total_track_length DESC;",1.0,sn2860,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1684,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album.artist_id,
	album.album_id, 
    COUNT(track.track_id) AS cnt_tracks, 
    SUM(track.time) AS total_track_length
FROM album 
	INNER JOIN track ON album.album_id = track.album_id
WHERE album.artist_id = track.artist_id
GROUP BY 
	album.album_id, 
	album.artist_id
ORDER BY album.artist_id ASC, album.album_id ASC;",1.0,sn2860,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
1685,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,sn2860,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1686,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),6) AS avg_time, ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,sn2860,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1687,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_id)
FROM track;",1.0,sn2860,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1688,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_id)
FROM artist;",1.0,sn2860,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1689,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT DISTINCT U.first_name, U.last_name
FROM users U
	LEFT OUTER JOIN tracks_played TP ON U.user_id = TP.user_id
WHERE TP.user_id IS NULL;",1.0,sn2860,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1690,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT 
	TP.user_id, 
    U.first_name, 
    U.last_name, 
    A.album_name, 
    T.track_name, 
    TP.played_on
FROM tracks_played TP
	INNER JOIN users U ON TP.user_id = U.user_id
    INNER JOIN album A ON TP.album_id = A.album_id 
	INNER JOIN track T ON TP.track_id = T.track_id 
    WHERE TP.artist_id = A.artist_id AND (TP.artist_id = T.artist_id AND TP.album_id = T.album_id)
ORDER BY TP.user_id ASC, TP.played_on ASC;",1.0,sn2860,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1691,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN artist A ON T.artist_id = A.artist_id
    WHERE A.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,sn2860,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1692,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, AR.artist_name, AL.album_name
FROM track T
	INNER JOIN artist AR ON AR.artist_id = T.artist_id
    INNER JOIN album AL ON AL.album_id = T.album_id
	WHERE AL.artist_id = T.artist_id;",1.0,sn2860,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
1693,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM album A
	INNER JOIN track T ON A.album_id = T.album_id
    WHERE A.album_name = 'Second Coming' AND T.artist_id = 5;",1.0,sn2860,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1694,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist
	INNER JOIN album ON artist.artist_id = album.artist_id
    WHERE artist.artist_name = 'New Order';",1.0,sn2860,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1695,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"-- find all tracks that include the word ""Love"" anywhere in the title
SELECT *
FROM track
WHERE track_name LIKE '%Love%';",1.0,sn2860,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1696,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"-- list tracks from artists with artist_id of 1, 3, 5 using boolean
SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

-- list tracks from artists with artist_id of 1, 3, 5 using IN operation
SELECT *
FROM track
WHERE artist_id IN (1,3,5);",1.0,sn2860,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
1697,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name > ""F"" AND album_name < ""S""
ORDER BY album_name;

-- notice how using the ""less than"" inequality operator is not inclusive, but is inclusive with ""greater than""
-- album_name > ""E"" returned albums starting with letter ""E"", but album_name < ""S"" does not seem to return album names starting with the letter ""S""",1.0,sn2860,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
1698,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < ""M""
ORDER BY track_name;",1.0,sn2860,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1699,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,sn2860,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1700,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",1.0,sn2860,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1701,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,sn2860,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1702,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;",1.0,sn2860,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1703,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time ASC
LIMIT 10;",1.0,sn2860,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1704,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,sn2860,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1705,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,sn2860,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1706,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,sn2860,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1707,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,sn2860,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1708,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,sn2860,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1715,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"Got a bit lost on this one...

SELECT
  e.first_name,
  m.frequency,
  f.frequency
  ABS(LOG(m.frequency / f.frequency)) AS ambiguitous


FROM
  eligible_names E
LEFT JOIN
    (SELECT
    first_name,
    COUNT(*) AS frequency
  
FROM
    Actors A

  WHERE
    gender = 'M'

  GROUP BY
    first_name) m ON e.first_name = m.first_name",1.6,mgd328,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1716,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Same as above, but Flipped

USE imdb;

DROP TEMPORARY TABLE IF EXISTS f_freq;
CREATE TEMPORARY TABLE f_freq AS
SELECT DISTINCT first_name, name_freq
FROM eligible_names

WHERE first_name NOT IN (
  SELECT DISTINCT first_name
  FROM actors
  WHERE gender = 'M' );


SELECT *
FROM f_freq;",0.8,mgd328,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1717,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"USE imdb;

DROP TEMPORARY TABLE IF EXISTS m_freq;
CREATE TEMPORARY TABLE m_freq AS
SELECT DISTINCT first_name, name_freq
FROM eligible_names

WHERE first_name NOT IN (
  SELECT DISTINCT first_name
  FROM actors
  WHERE gender = 'F' );


SELECT *
FROM m_freq;",0.8,mgd328,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1718,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE temporary table eligible_names AS
SELECT first_name
FROM Actors A
            INNER JOIN Roles R
            ON R.actor_id = A.id
WHERE first_name NOT LIKE '%.%' 
AND first_name NOT LIKE '%(%'
AND first_name NOT LIKE '%)%'
GROUP BY first_name 
HAVING COUNT(*) > 49",0.8,mgd328,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1719,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT P.played_on, T.track_name, MIN(P.played_on), MAX(P.played_on
FROM track T
            LEFT OUTER JOIN tracks_played P
            ON T.track_id = P.track_id
GROUP BY TP.played_on, T.track_name",0.8,mgd328,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
1720,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT artist_id, artist_name, COUNT(DISTINCT album_id) AS num_albums
FROM artist
            LEFT OUTER JOIN albums on artist_id = albums,artist_id;",0.8,mgd328,"SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name","#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,"The feedback from the TA was SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name"
1721,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT T.played_on AS date, T.arstist_id, COUNT(T.user_id) AS listens, A.artist_name
FROM tracks_played T
            INNER JOIN artist A
            ON T.artist_id = A.artist_id
GROUP BY T.played_on, T.artist_id, A.artist_name, T.user_id",0.8,mgd328,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
1722,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"  SELECT U.user_id, COUNT(T.track_id), COUNT(T.played_on)
    FROM Users U 
		INNER JOIN tracks_played T
        ON U.user_id = T.user_id
	GROUP BY U.user_id ASC;
",0.8,mgd328,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
1723,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, count(*) as numberoftracks, sum(time) as length
FROM track
GROUP BY album_id, artist_id
HAVING SUM(time) > 60;


",1.0,mgd328,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1724,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, count(*) as numberoftracks, sum(time) as length
FROM track
GROUP BY album_id;
",0.8,mgd328,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
1725,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, count(album_id) AS cnt_albums
FROM album
group by artist_id;",1.0,mgd328,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1726,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, Stddev(time) AS std_time
FROM track;",1.0,mgd328,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1727,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_id)
FROM track;",1.0,mgd328,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1728,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_name)
FROM artist;",1.0,mgd328,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1729,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT first_name, last_name
FROM users U 
	LEFT JOIN tracks_played TP
    ON U.user_id = TP.user_id
    WHERE TP.user_id IS null;",1.0,mgd328,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1730,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT TP.user_id, U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played TP
	INNER JOIN users U
    ON TP.user_id = U.user_id
    INNER JOIN album A
    ON TP.artist_id = A.artist_id
    INNER JOIN track T
    ON T.artist_id = A.artist_id;",1.0,mgd328,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1731,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, AR.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN artist AR
    ON T.artist_id = AR.artist_id
    WHERE artist_name = 'The Stone Roses'
    ORDER BY time ASC;",1.0,mgd328,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1732,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, AR.artist_name, AL.album_name
FROM track T
	INNER JOIN album AL 
    ON T.artist_id = AL.artist_id AND T.album_id = AL.album_id
    INNER JOIN artist AR
    ON AR.artist_id=AL.artist_id AND AR.artist_id = T.artist_id;
    ",1.0,mgd328,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
1733,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT track_id, track_name, T.artist_id, T.album_id, time
FROM track T
	INNER JOIN album A 
    ON T.artist_id = A.artist_id AND T.album_id = A.album_id
WHERE album_name = 'Second Coming';",1.0,mgd328,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1734,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT*
FROM album AS AL
	INNER JOIN artist AS AR
	ON AL.artist_id = AR.artist_id
WHERE artist_name= 'New Order';",1.0,mgd328,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1735,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT*
FROM track
WHERE track_name LIKE '%Love%';",1.0,mgd328,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1736,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT*
FROM track
WHERE artist_id = 1 OR 3 OR 5;

SELECT*
FROM track
WHERE artist_id IN (1,3,5);",0.8,mgd328,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5"
1737,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT*
FROM album
WHERE album_name > 'E' AND album_name < 'S';",0.7,mgd328,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
1738,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT*
FROM track
WHERE track_name < 'M';",1.0,mgd328,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1739,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT*
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,mgd328,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1740,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT*
FROM album
WHERE artist_id=4;",1.0,mgd328,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1741,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_name='The Rolling Stones';",1.0,mgd328,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1742,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_id=5;",1.0,mgd328,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1743,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_id, track_name, artist_id, album_id, time
FROM track
ORDER BY time ASC
LIMIT 10;

",1.0,mgd328,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1744,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;
",1.0,mgd328,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1745,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,mgd328,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1746,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,mgd328,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1747,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,mgd328,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1748,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,mgd328,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1755,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT C.CustomerID, C.CompanyName, O.OrderDate,
       COUNT(D.ProductID)*D.Quantity*D.UnitPrice AS total_price
FROM Customers C
   LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
   LEFT JOIN OrderDetails D ON D.OrderID = O.OrderID
GROUP BY O.OrderID, C.CustomerID, D.OrderID, D.ProductID
HAVING YEAR(O.OrderDate) = 2016; ",8.0,ax2029,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
1756,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"USE northwind;

SELECT D.OrderID, C.CustomerID, 
       COUNT(D.ProductID) AS num_of_products,
       COUNT(D.ProductID) * D.Quantity AS total_units,
       COUNT(D.ProductID) * D.Quantity * D.UnitPrice AS total_price
FROM Orders O
   LEFT JOIN Customers C ON C.CustomerID = O.CustomerID
   LEFT JOIN OrderDetails D ON D.OrderID = O.OrderID
GROUP BY C.CustomerID, D.OrderID, D.ProductID
HAVING total_price > 10000
ORDER BY total_price DESC;",7.5,ax2029,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
1757,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"USE northwind;

SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,ax2029,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1758,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"USE northwind;

SELECT C.CustomerID, COUNT(O.OrderID) AS num_of_orders
FROM Customers C
   LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID;
",7.5,ax2029,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1759,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"USE northwind;

SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
     INNER JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY P.ProductID;",5.0,ax2029,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1760,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"USE northwind;

SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,ax2029,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1761,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;

SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = ""Sales Representative"" AND Country = ""USA"";",5.0,ax2029,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1762,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"USE flights;

SELECT M.origin, M.dest, A.state
FROM m_ticket_prices M
   JOIN m_airports A ON A.airport = M.origin
GROUP BY M.origin, M.dest, A.airport;",5.0,ax2029,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
1763,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"USE flights;

SELECT M.origin, M.dest, A.state
FROM m_ticket_prices M
   JOIN m_airports A ON A.airport = M.origin
GROUP BY M.origin, M.dest, A.airport;",2.5,ax2029,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
1775,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"USE flights;

SELECT M.origin, M.dest, A.state,
              MIN(M.fare), MAX(M.fare), AVG(M.fare),
              COUNT(M.carrier) AS num_carriers,
              COUNT(M.passengers) AS num_passengers
FROM m_ticket_prices M
   JOIN m_airports A ON A.airport = M.origin
GROUP BY M.origin, M.dest, A.airport;",5.0,ax2029,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
1776,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT M.*, P.total_passengers,
       RANK() OVER w1 AS state_rank,
       RANK() OVER w2 AS national_rank
FROM passengers_per_airport P
   JOIN m_airports M ON M.airport = P.origin
WINDOW w1 AS (PARTITION BY M.state ORDER BY P.total_passengers DESC),
       w2 AS (ORDER BY P.total_passengers DESC);",4.0,ax2029,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
1777,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"USE flights;

DROP TABLE IF EXISTS passengers_per_airport;
CREATE TEMPORARY TABLE passengers_per_airport AS
   SELECT origin, 
       SUM(passengers) AS total_passengers
   FROM m_ticket_prices
   GROUP BY origin;",1.0,ax2029,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
1778,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT S.MemberSince As Date,
       S.cum_num_sign - I.cum_num_inactive AS total_active_users
FROM SingUpsAsOf S
   JOIN InactiveAsOf I ON I.LastUpdate = S.MemberSince;
",2.0,ax2029,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
1779,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS InactiveAsOf;
CREATE TEMPORARY TABLE InactiveAsOf AS
   SELECT LastUpdate,
          SUM(num_inactive) over w AS cum_num_inactive
   FROM InactiveOn
   WINDOW w AS (ORDER BY LastUpdate);",2.0,ax2029,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
1780,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS SingUpsAsOf;
CREATE TEMPORARY TABLE SingUpsAsOf AS
   SELECT MemberSince,
          SUM(num_sign) over w AS cum_num_sign
   FROM SignUpsOn
   WINDOW w AS (ORDER BY MemberSince);",2.0,ax2029,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
1781,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"DROP TABLE IF EXISTS InactiveOn;
CREATE TEMPORARY TABLE InactiveOn AS
   SELECT LastUpdate, COUNT(*) AS num_inactive
   FROM Profiles
   GROUP BY LastUpdate;",1.0,ax2029,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
1782,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"USE facebook;

DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOn AS
   SELECT MemberSince, COUNT(*) AS num_sign
   FROM Profiles
   GROUP BY MemberSince; 
",1.0,ax2029,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
1783,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_female_names AS
   SELECT M.first_name, 
          M.frequency AS male_freq,
          F.frequency AS female_freq
   FROM male_names M
      JOIN female_names F ON F.first_name = M.first_name;

SELECT first_name, 
       abs(log(male_freq/female_freq )) AS ambiguous
FROM male_female_names
ORDER BY ambiguous;
",2.0,ax2029,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1784,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT F.first_name, F.frequency
FROM female_names F
WHERE F.first_name NOT IN (SELECT first_name FROM male_names)
ORDER BY F.frequency DESC;",1.0,ax2029,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1785,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
   SELECT A.first_name, A.gender, count(*) AS frequency
   FROM actors A
   WHERE A.first_name IN (SELECT first_name FROM eligible_names)
      AND A.gender = 'M'
   GROUP BY A.first_name, A.gender;

CREATE TEMPORARY TABLE female_names AS
   SELECT A.first_name, A.gender, count(*) AS frequency
   FROM actors A
   WHERE A.first_name IN (SELECT first_name FROM eligible_names)
      AND A.gender = 'F'
   GROUP BY A.first_name, A.gender;

SELECT M.first_name, M.frequency
FROM male_names M
WHERE M.first_name NOT IN (SELECT first_name FROM female_names)
ORDER BY M.frequency DESC;",1.0,ax2029,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1786,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
CREATE TEMPORARY TABLE eligible_names AS 
    SELECT first_name, count(*) AS cnt
    FROM actors 
    WHERE first_name NOT LIKE '%.%'
	   AND first_name NOT LIKE '%(%)%'
    GROUP BY first_name
    HAVING cnt >= 50;",1.0,ax2029,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1797,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"USE music;
SELECT T.artist_id, T.album_id, T.track_id, T.track_name, 
       MIN(played_on) AS min_played_on,
       MAX(played_on) AS max_played_on
FROM track T     
     LEFT JOIN tracks_played P ON P.track_id = T.track_id
     AND P.artist_id = T.artist_id 
     AND P.album_id = T.album_id
GROUP BY T.artist_id, T.album_id, T.track_id; ",1.0,ax2029,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1798,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"USE music;
SELECT R.artist_id, R.artist_name, COUNT(L.album_id) AS num_albums
FROM artist R
     LEFT JOIN album L ON L.artist_id = R.artist_id
GROUP BY R.artist_id;
",1.0,ax2029,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1799,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"USE music;
SELECT DATE(P.played_on) AS date_played,
	   R.artist_id, R.artist_name, 
	   COUNT(DISTINCT(P.user_id)) AS users,
       SUM(T.time) AS total_time,
       COUNT(T.track_id) AS total_tracks
FROM tracks_played P
    LEFT JOIN track T ON T.artist_id = P.artist_id
          AND T.album_id = P.album_id
          AND T.track_id = P.track_id
    LEFT JOIN artist R ON R.artist_id = T.artist_id
GROUP BY date_played, R.artist_id
ORDER BY date_played;",1.0,ax2029,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
1800,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"USE music;
SELECT U.user_id, 
       COUNT(T.track_id) AS tracks_played,
       SUM(T.time) AS total_time
FROM users U
    LEFT JOIN tracks_played P ON P.user_id = U.user_id
    LEFT JOIN track T ON T.artist_id = P.artist_id
          AND T.album_id = P.album_id
          AND T.track_id = P.track_id
GROUP BY U.user_id;",1.0,ax2029,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
1801,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"USE music;
SELECT L.artist_id, L.album_id, SUM(T.time) AS total_time
FROM track T
     INNER JOIN album L ON L.album_id = T.album_id AND L.artist_id = T.artist_id
GROUP BY L.artist_id, L.album_id
HAVING total_time > 60;",1.0,ax2029,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1802,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"USE music;
SELECT artist_id, album_id, 
       COUNT(*) AS cnt_tracks, 
       SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id;
",1.0,ax2029,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
1803,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"USE music;
SELECT artist_id, COUNT(DISTINCT album_id) AS cnt_albums
FROM track
GROUP BY artist_id;",1.0,ax2029,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1804,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"USE music;
SELECT ROUND(AVG(time),6) AS avg_time, 
       ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,ax2029,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1805,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"USE music;
SELECT COUNT(*)
FROM track;",1.0,ax2029,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1806,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"USE music;
SELECT COUNT(*)
FROM artist;",1.0,ax2029,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1807,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
   LEFT JOIN tracks_played P ON P.user_id = U.user_id
WHERE P.user_id IS NULL;

",1.0,ax2029,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1808,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, L.album_name, T.track_name, P.played_on
FROM tracks_played P
   INNER JOIN users U ON U.user_id = P.user_id
   INNER JOIN track T ON T.artist_id = P.artist_id AND
                        T.album_id = P.album_id AND
						T.track_id = P.track_id
   INNER JOIN album L ON L.artist_id = P.artist_id AND
						L.album_id = P.album_id;",1.0,ax2029,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1809,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, R.artist_id, T.album_id, R.artist_name, T.time
FROM track T
   INNER JOIN artist R ON R.artist_id = T.artist_id
WHERE R.artist_name = ""The Stone Roses""
ORDER BY T.time;   
",1.0,ax2029,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1810,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, L.album_name, R.artist_name
FROM track T
   INNER JOIN album L ON L.album_id = T.album_id AND 
   L.artist_id = T.artist_id
   INNER JOIN artist R ON R.artist_id = T.artist_id;
",0.5,ax2029,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
1811,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, L.*
FROM track T
   INNER JOIN album L ON L.album_id = T.album_id AND 
   L.artist_id = T.artist_id
   WHERE L.album_name = ""Second Coming"";",1.0,ax2029,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1812,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM album L
INNER JOIN artist R ON L.artist_id = R.artist_id
WHERE R.artist_name = ""New Order"";

",1.0,ax2029,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1821,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE ""%LOVE%"";

artist_id	album_id  track_id track_name	                             time
1	       3	          7	         Bizarre Love Triangle	              4.35
1	       6	         10	         Bizarre Love Triangle	              6.74
1	       7	         4	         Bizarre Love Triangle	              4.37
2	       1	         0	         Do You Love Me?	              5.95
2	       1	         2	         Loverman	                             6.37
2	       1	         5	         I Let Love In	                      4.25
2	       1	         9	         Do You Love Me? (Part Two)	6.23
5	       1	         2	         Ten Storey Love Song	       4.50
5	       1	         11	         Love Spreads	                      5.79
6	       1	         4	         Loveboat	                             4.18
6	       1	         10	         Under The Influence Of Love	3.40
",1.0,ax2029,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1822,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 1 
   OR artist_id = 3
   OR artist_id = 5;

SELECT *
FROM track
WHERE artist_id IN (1, 3, 5);

artist_id	album_id	track_id	track_name	time
1	1	0	Elegia	4.93
1	1	1	In A Lonely Place	6.26
1	1	2	Procession	4.47
1	1	3	Your Silent Face	5.99
1	1	4	Sunrise	6.01
1	1	5	Let's Go	3.90
1	1	6	Broken Promise	3.76
1	1	7	Dreams Never End	3.20
1	1	8	Cries And Whispers	3.42
1	1	9	All Day Long	5.18
1	1	10	Sooner Than You Think	5.21
1	1	11	Leave Me Alone	4.67
1	1	12	Lonesome Tonight	5.19
1	1	13	Every Little Counts	4.47
1	1	14	Run Wild	3.95
1	2	0	In A Lonely Place	6.30
1	2	1	Procession	4.46
1	2	2	Mesh	3.44
1	2	3	Hurt	6.98
1	2	4	The Beach	7.32
1	2	5	Confusion	7.64
1	2	6	Lonesome Tonight	5.20
1	2	7	Murder	3.93
1	2	8	Thieves Like Us	6.95
1	2	9	Kiss Of Death	7.05
1	2	10	Shame Of The Nation	7.91
1	2	11	1963	5.63
1	3	0	Fine Time	4.71
1	3	1	Temptation	8.71
1	3	2	True Faith	5.88
1	3	3	The Perfect Kiss	4.83
1	3	4	Ceremony	4.41
1	3	5	R",1.0,ax2029,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
1823,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name > ""E"" AND album_name < ""S"";

artist_id	album_id  album_name
1	       1	          Retro - John McCready FAN
1	       3	          Retro - Miranda Sawyer POP
1	       4	          Retro - New Order / Bobby Gillespie LIVE
1	       5	          Power, Corruption & Lies
2	       1	          Let Love In
3	       1	          Live Around The World
3	       2	          In A Silent Way
4	       1	          Exile On Main Street
6	       1	          Light Years
",1.0,ax2029,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
1824,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < ""M"";

artist_id	album_id	track_id	track_name	time
1	1	0	Elegia	4.93
1	1	1	In A Lonely Place	6.26
1	1	5	Let's Go	3.90
1	1	6	Broken Promise	3.76
1	1	7	Dreams Never End	3.20
1	1	8	Cries And Whispers	3.42
1	1	9	All Day Long	5.18
1	1	11	Leave Me Alone	4.67
1	1	12	Lonesome Tonight	5.19
1	1	13	Every Little Counts	4.47
1	2	0	In A Lonely Place	6.30
1	2	3	Hurt	6.98
1	2	5	Confusion	7.64
1	2	6	Lonesome Tonight	5.20
1	2	9	Kiss Of Death	7.05
1	2	11	1963	5.63
1	3	0	Fine Time	4.71
1	3	4	Ceremony	4.41
1	3	6	Crystal	6.83
1	3	7	Bizarre Love Triangle	4.35
1	3	8	Confusion	8.22
1	3	10	Blue Monday	7.48
1	3	11	Brutal	4.83
1	3	13	Everyone Everywhere	4.43
1	4	0	Ceremony [Studio 54, Barcelona 7/7/84]	4.82
1	4	2	Everything's Gone Green [Tolworth Recreation Centre, London 12/3/85]	5.25
1	4	3	In A Lonely Place [Glastonbury Festival 20/6/81]	5.55
1	4	4	Age Of Consent [Spectrum Arena, Warrington 1/3/86]	5.04
1	4	5	Elegia [Glastonbury Festival 19/",1.0,ax2029,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1825,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE album_id = 2 AND artist_id = 3;

artist_id	album_id  track_id  track_name	                                    time
3	       2	         0	          Shhh/Peaceful	                                    16.67
3	       2	         1	          In A Silent Way/It's About That Time	16.67
",1.0,ax2029,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1826,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;

artist_id	album_id album_name
4	       1	        Exile On Main Street
",1.0,ax2029,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1827,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = ""The Rolling Stones"";

artist_id	artist_name
4	       The Rolling Stones
",1.0,ax2029,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1828,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;

artist_id	artist_name
5	       The Stone Roses
",1.0,ax2029,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1829,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time 
LIMIT 10;

artist_id	album_id	track_id	track_name	time
1	4	11	Intermission By Alan Wise [Olympia, Paris 12/11/01]	1.34
3	1	0	In A Silent Way	1.81
4	1	1	Rip This Joint	2.38
4	1	10	Turd On The Run	2.64
2	1	3	Jangling Jack	2.78
3	1	8	Full Nelson	2.81
4	1	12	I Just Want To See His Face	2.90
4	1	7	Sweet Black Angel	2.97
5	1	4	Your Star Will Shine	2.99
4	1	2	Shake Your Hips	3.00
",1.0,ax2029,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
1830,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;

artist_id	album_title
1	       Retro - John McCready FAN
1	       Substance (Disc 2)
1	       Retro - Miranda Sawyer POP
1	       Retro - New Order / Bobby Gillespie LIVE
1	       Power, Corruption & Lies
1	       Substance 1987 (Disc 1)
1	       Brotherhood
2	       Let Love In
3	       Live Around The World
3	       In A Silent Way
4	       Exile On Main Street
5	       Second Coming
6	       Light Years
",1.0,ax2029,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1831,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name 
FROM artist
ORDER BY artist_name;

artist_name
Kylie Minogue
Miles Davis
New Order
Nick Cave & The Bad Seeds
The Rolling Stones
The Stone Roses
",1.0,ax2029,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1832,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;

artist_id	album_id	track_id	track_name	time
1	1	0	Elegia	4.93
1	1	1	In A Lonely Place	6.26
1	1	2	Procession	4.47
1	1	3	Your Silent Face	5.99
1	1	4	Sunrise	6.01
1	1	5	Let's Go	3.9
1	1	6	Broken Promise	3.76
1	1	7	Dreams Never End	3.2
1	1	8	Cries And Whispers	3.42
1	1	9	All Day Long	5.18
1	1	10	Sooner Than You Think	5.21
1	1	11	Leave Me Alone	4.67
1	1	12	Lonesome Tonight	5.19
1	1	13	Every Little Counts	4.47
1	1	14	Run Wild	3.95
1	2	0	In A Lonely Place	6.3
1	2	1	Procession	4.46
1	2	2	Mesh	3.44
1	2	3	Hurt	6.98
1	2	4	The Beach	7.32
1	2	5	Confusion	7.64
1	2	6	Lonesome Tonight	5.2
1	2	7	Murder	3.93
1	2	8	Thieves Like Us	6.95
1	2	9	Kiss Of Death	7.05
1	2	10	Shame Of The Nation	7.91
1	2	11	1963	5.63
1	3	0	Fine Time	4.71
1	3	1	Temptation	8.71
1	3	2	True Faith	5.88
1	3	3	The Perfect Kiss	4.83
1	3	4	Ceremony	4.41
1	3	5	Regret	4.14
1	3	6	Crystal	6.83
1	3	7	Bizarre Love Triangle	4.35
1	3	8	Confusion	8.22
1	3	9	Round And Round	4.52
1	3	10	",1.0,ax2029,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1833,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;

artist_id	album_id   album_name
1	       1	          Retro - John McCready FAN
1	       2	          Substance (Disc 2)
1	       3	          Retro - Miranda Sawyer POP
1	       4	          Retro - New Order / Bobby Gillespie LIVE
1	       5	          Power, Corruption & Lies
1	       6	          Substance 1987 (Disc 1)
1	       7	          Brotherhood
2	       1	          Let Love In
3	       1	          Live Around The World
3	       2	          In A Silent Way
4	       1	          Exile On Main Street
5	       1	          Second Coming
6	       1	          Light Years

",1.0,ax2029,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1834,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"SELECT * 
FROM artist;

artist_id	artist_name
1	        New Order
2	        Nick Cave & The Bad Seeds
3	        Miles Davis
4	        The Rolling Stones
5	        The Stone Roses
6	        Kylie Minogue


",1.0,ax2029,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1841,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT first_name, ABS(LOG((M_cnt) / (F_cnt))) AS ambig
FROM (
  SELECT EN.first_name,
    (SELECT COUNT(*) FROM actors WHERE first_name = EN.first_name AND gender = 'M') AS M_cnt,
    (SELECT COUNT(*) FROM actors WHERE first_name = EN.first_name AND gender = 'F') AS F_cnt
  FROM (SELECT DISTINCT first_name FROM eligible_names) EN
) ambig
ORDER BY ambig;

Ambiguity ranking impacted by my inability to properly pull frequencies above",1.6,jlp704,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1842,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"   SELECT first_name, COUNT(*) AS freq
FROM eligible_names
WHERE first_name NOT IN (
	SELECT first_name
    FROM actors
    WHERE gender = 'M'
    )
    GROUP BY first_name
    ;

Unable to return frequency as I expected",0.8,jlp704,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1843,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS freq
FROM eligible_names
WHERE first_name IN (
	SELECT first_name
    FROM actors
    WHERE gender = 'M'
    )
    GROUP BY first_name
    ;

Unable to return frequency as I expected",0.8,jlp704,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1844,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
SELECT DISTINCT first_name, gender, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
GROUP BY first_name, gender
HAVING COUNT(first_name) > 50
ORDER BY COUNT(*) DESC;",1.0,jlp704,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1845,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on), MAX(TP.played_on)
FROM track T
LEFT JOIN tracks_played TP
ON T.track_id = TP.track_id AND T.artist_id = TP.artist_id AND T.album_id = TP.album_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,jlp704,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1846,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT AL.artist_id, AR.artist_name, 
COUNT(album_name)
FROM album AS AL 
inner join artist AS AR
ON AL.artist_id = AR.artist_id
GROUP BY AL.artist_id, AR.artist_name;",1.0,jlp704,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1847,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"Select TP.played_on, AR.artist_id, AR.artist_name,TP.user_id, COUNT(T.time), COUNT(T.track_name)
FROM tracks_played TP
INNER JOIN artist AR
ON TP.artist_id = AR.artist_id
INNER JOIN track T
ON TP.artist_id = T.artist_id
GROUP BY TP.played_on, AR.artist_id, AR.artist_name,TP.user_id;

Unable to consolidate the output/get correct amount of time",0.8,jlp704,"



Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 



Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
1848,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id , COUNT(DISTINCT TP.played_on), SUM(T.time)
FROM users U
LEFT JOIN tracks_played TP 
ON TP.user_id = U.user_id
LEFT JOIN track T
ON TP.track_id = T.track_id
GROUP BY U.user_id;

Unable to reach the RHS column's numbers for total time",0.8,jlp704,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
1849,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, SUM(time) AS length
FROM track
GROUP BY album_id
HAVING length > 60;",0.8,jlp704,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
1850,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"Select (album_id), COUNT(DISTINCT track_id) AS track_count
FROM track
GROUP BY album_id;",0.8,jlp704,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
1851,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT (artist_id), COUNT(DISTINCT album_id) AS album_count
FROM track
GROUP BY artist_id;",1.0,jlp704,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1852,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT
ROUND(AVG(time),2) AS avg_time,
ROUND(STDDEV(time),2) AS std_time
FROM track;",1.0,jlp704,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1853,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT track_name,
COUNT(*) AS num_tracks
FROM track
GROUP BY track_name
ORDER BY num_tracks DESC;",0.9,jlp704,"


Answer Key







SELECT COUNT(*) AS cnt
FROM&nbsp;track






","SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT COUNT(*) AS cnt
FROM&nbsp;track






"
1854,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT artist_name,
COUNT(*) AS num_artist
FROM artist
GROUP BY artist_name;",0.9,jlp704,"


Answer Key







SELECT COUNT(*) AS cnt
FROM&nbsp;artist






","SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT COUNT(*) AS cnt
FROM&nbsp;artist






"
1855,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT first_name, last_name
FROM users U 
LEFT OUTER JOIN tracks_played TP
ON U.user_id = TP.user_id
WHERE TP.user_id IS NULL;",1.0,jlp704,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1856,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT first_name, last_name, track_name, played_on
FROM tracks_played TP 
INNER JOIN users U
ON TP.user_id = U.user_id
INNER JOIN track T 
ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
ORDER BY played_on;

No matter how many joins i attempt to pull in user ID or album name, I continually receive error code 1052 for both fields stating that they are ambiguous ",1.0,jlp704,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1857,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT artist_id
FROM artist
WHERE artist_name = 'The Stone Roses';


Select track_name, time
FROM track
WHERE artist_id = '5'
ORDER BY time ASC;",1.0,jlp704,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
1858,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select *
FROM track T inner join album A inner join artist AN
	ON T.artist_id = A.artist_id AND T.album_id = A.album_id;",0.7,jlp704,"


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






"
1859,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT *
FROM album
WHERE album_name = 'Second Coming';

Select *
FROM track
where album_id= 1 AND artist_id = 5;",1.0,jlp704,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
1860,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'New Order';

SELECT *
FROM album
WHERE artist_id ='1';",1.0,jlp704,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
1861,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT track_name
FROM track
WHERE track_name LIKE '%Love%';",0.9,jlp704,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
1862,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT track_name
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT track_name
FROM track
WHERE artist_id IN (1,3,5);",0.9,jlp704,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
1863,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name > 'F'
AND album_name < 'S';",0.9,jlp704,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
1864,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M';",0.9,jlp704,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
1865,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3
AND album_id = 2;",0.9,jlp704,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
1866,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",0.9,jlp704,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
1867,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';",0.9,jlp704,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
1868,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT artist_name
FROM artist
WHERE artist_id = 5;",0.9,jlp704,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
1869,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_name,time
FROM track
ORDER BY time ASC;",0.75,jlp704,"SELECT&nbsp;*
FROM&nbsp;track
ORDER&nbsp;BY&nbsp;time
LIMIT&nbsp;10","SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
ORDER&nbsp;BY&nbsp;time
LIMIT&nbsp;10"
1870,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id,album_name AS album_title
FROM album;",0.9,jlp704,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
1871,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",0.9,jlp704,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
1872,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",0.9,jlp704,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
1873,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"Select *
FROM album;",0.9,jlp704,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
1874,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",0.9,jlp704,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
1875,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2A: Database Navigation,"301,292",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"An artist must create at least one album, potentially many. An album is tied to at most one artist.
An album requires at least one track, potentially many. Each track is unique to the album and there are no duplicates. Tracks must be played at least once to be recorded, potentially many times. There is a single track to be registered as a track played. Users must play at least one track, potentially many. There is only one user to record for tracks played.",0.45,jlp704,"


Answer Key







Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&nbsp;The foreign key in the track album is the pair (artist_id, album_id).&nbsp;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to ","Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,"The feedback from the TA was 


Answer Key







Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&nbsp;The foreign key in the track album is the pair (artist_id, album_id).&nbsp;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to "
1881,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT C.CustomerID, C.CompanyName, 
	ROUND((SUM(OD.Quantity*OD.UnitPrice)),4) AS total_price,
	ROUND((SUM(OD.Quantity*OD.UnitPrice*OD.Discount)),4) AS total_discount,
CASE 
	WHEN (
		SELECT
		(SUM(OD.Quantity*OD.UnitPrice)) - (SUM(OD.Quantity*OD.UnitPrice*OD.Discount))
		FROM Customers C LEFT JOIN Orders O ON C.CustomerID=O.CustomerID
		LEFT JOIN OrderDetails OD ON O.OrderID=OD.OrderID
	) >0 AND (
		SELECT
		(SUM(OD.Quantity*OD.UnitPrice)) - (SUM(OD.Quantity*OD.UnitPrice*OD.Discount))
		FROM Customers C LEFT JOIN Orders O ON C.CustomerID=O.CustomerID
		LEFT JOIN OrderDetails OD ON O.OrderID=OD.OrderID
	) <1000 THEN 'LOW'
    WHEN (
		SELECT
		(SUM(OD.Quantity*OD.UnitPrice)) - (SUM(OD.Quantity*OD.UnitPrice*OD.Discount))
		FROM Customers C LEFT JOIN Orders O ON C.CustomerID=O.CustomerID
		LEFT JOIN OrderDetails OD ON O.OrderID=OD.OrderID
	) >=1000 AND (
		SELECT
		(SUM(OD.Quantity*OD.UnitPrice)) - (SUM(OD.Quantity*OD.UnitPrice*OD.Discount))
		FROM Customers C LEFT",7.0,hh2858,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
1882,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT C.CustomerID, C.CompanyName,
	 ROUND((SUM(OD.Quantity*OD.UnitPrice)),4) AS total_price,
        ROUND((SUM(OD.Quantity*OD.UnitPrice*OD.Discount)),4) AS total_discount
FROM Customers C LEFT JOIN Orders O ON C.CustomerID=O.CustomerID
	 LEFT JOIN OrderDetails OD ON O.OrderID=OD.OrderID
WHERE YEAR(O.OrderDate)=2016
GROUP BY C.CustomerID
ORDER BY C.CustomerID;",10.0,hh2858,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
1883,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, COUNT(OD.ProductID) AS num_products,
	SUM(OD.Quantity) AS total_units,
       (SUM(OD.Quantity*OD.UnitPrice)) AS total_price
FROM Orders O INNER JOIN OrderDetails OD ON O.OrderID=OD.OrderID
GROUP BY O.OrderID
HAVING total_price >10000
ORDER BY total_price DESC;",7.5,hh2858,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
1884,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC;",7.0,hh2858,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
1885,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.OrderID) AS num_orders
FROM Orders O RIGHT JOIN Customers C ON O.CustomerID=C.CustomerID
GROUP BY C.CustomerID;",7.5,hh2858,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
1886,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P INNER JOIN Suppliers S ON P.SupplierID=S.SupplierID
GROUP BY P.ProductID;",5.0,hh2858,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
1887,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,hh2858,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
1888,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;
SELECT FirstName, LastName,  HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country='USA';",5.0,hh2858,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
1889,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT T.origin, T.dest, A.state AS origin_state, A2.state AS dest_state
FROM m_ticket_prices T INNER JOIN m_airports A ON T.origin=A.airport
	INNER JOIN m_airports A2 ON T.dest=A2.airport
GROUP BY T.origin, T.dest
HAVING origin_state=dest_state;",7.5,hh2858,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
1890,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT A.state,
	COUNT(T.origin) AS num_origin,
       COUNT(carrier) AS num_carriers, 
       SUM(passengers) AS total_passengers,
       AVG(fare_per_mile) AS average_fare_per_mile
FROM m_ticket_prices T INNER JOIN m_airports A ON T.origin=A.airport
GROUP BY A.state;",7.5,hh2858,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
1891,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT carrier,
	COUNT(DISTINCT origin, dest) AS num_routes,
       COUNT(DISTINCT origin) AS num_origin,
       AVG(fare_per_mile) AS average_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)>20000;",10.0,hh2858,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
1902,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin, dest
	, MIN(fare) AS cheapest_fare, MAX(fare) AS most_expensive_fare,
       AVG(fare) AS average_fare, COUNT(carrier) AS num_carriers, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin, dest
HAVING num_carriers>=3 AND total_passengers >10000;",7.5,hh2858,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
1970,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT P.origin, P.total_passengers, M.*
	, RANK() OVER w1 AS national_rank
       , RANK() OVER w2 AS state_rank
FROM passengers_per_airport P LEFT JOIN m_airports M ON P.origin=M.airport
WINDOW w1 AS (ORDER BY P.total_passengers DESC),
	w2 AS (PARTITION BY M.state ORDER BY P.total_passengers DESC)
ORDER BY national_rank, M.state;",4.0,hh2858,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
1971,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"USE flights;
DROP TABLE IF EXISTS passengers_per_airport;
CREATE TEMPORARY TABLE passengers_per_airport AS
	SELECT origin, SUM(passengers) AS total_passengers
	FROM m_ticket_prices
	GROUP BY origin
	ORDER BY total_passengers DESC;",1.0,hh2858,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
1972,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT S.MemberSince, S.num_signup, S.cumulative_signup
	, I.LastUpdate, I.num_inactive, I.cumulative_inactive 
       , (S.cumulative_signup - I.cumulative_inactive) AS total_active_users
FROM InactiveAsOf I JOIN SingUpsAsOf S ON I.MemberSince=S.MemberSince
ORDER BY S.MemberSince;",4.0,hh2858,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
1973,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS InactiveAsOf;
CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT S.MemberSince, I.LastUpdate, I.num_inactive 
	, SUM(COALESCE(I.num_inactive,0)) OVER w AS cumulative_inactive
FROM InactiveOn I RIGHT JOIN SignUpsOn S ON I.LastUpdate=S.MemberSince
WINDOW w AS (ORDER BY I.LastUpdate)
ORDER BY S.MemberSince;",2.0,hh2858,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
1974,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS SingUpsAsOf;
CREATE TEMPORARY TABLE SingUpsAsOf AS
	SELECT MemberSince, num_signup 
		, SUM(num_signup) OVER w AS cumulative_signup
	FROM SignUpsOn
	WINDOW w AS (ORDER BY MemberSince);",2.0,hh2858,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
1975,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"DROP TABLE IF EXISTS InactiveOn;
CREATE TEMPORARY TABLE InactiveOn AS
	SELECT LastUpdate, COUNT(*) AS num_inactive
	FROM Profiles
	GROUP BY LastUpdate
	ORDER BY LastUpdate;",1.0,hh2858,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
1976,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"USE facebook;
DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOn AS
	SELECT MemberSince, COUNT(*) AS num_signup
	FROM Profiles
	GROUP BY MemberSince
	ORDER BY MemberSince;",1.0,hh2858,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
1977,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT EN.first_name, FN.female_freq, MN.male_freq,
	ABS(LOG(male_freq/female_freq)) AS ambiguous_ratio
FROM eligible_names EN INNER JOIN female_names FN ON EN.first_name=FN.first_name
	INNER JOIN male_names MN ON MN.first_name=EN.first_name
ORDER BY ambiguous_ratio;",2.0,hh2858,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
1978,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(first_name) AS cnt
FROM actors
WHERE first_name IN (SELECT first_name FROM eligible_names)
	AND first_name NOT IN (SELECT first_name FROM male_names)
	AND first_name IN (SELECT first_name FROM female_names)
GROUP BY first_name
ORDER BY cnt DESC;",1.0,hh2858,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
1979,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
	SELECT first_name, gender, COUNT(first_name) AS male_freq
       FROM actors
       WHERE gender = 'M'
       GROUP BY first_name;
DROP TABLE IF EXISTS female_names;   
CREATE TEMPORARY TABLE female_names AS
	SELECT first_name, gender, COUNT(first_name) AS female_freq
       FROM actors
       WHERE gender = 'F'
       GROUP BY first_name;  
SELECT first_name, COUNT(first_name) AS cnt
FROM actors
WHERE first_name IN (SELECT first_name FROM eligible_names)
	AND first_name IN (SELECT first_name FROM male_names)
	AND first_name NOT IN (SELECT first_name FROM female_names)
GROUP BY first_name
ORDER BY cnt DESC;",1.0,hh2858,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
1980,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name, COUNT(*)
      FROM actors
      WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
      GROUP BY first_name
      HAVING COUNT(*) >= 50
      ORDER BY COUNT(*) DESC;",1.0,hh2858,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
1987,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name,
	MIN(TP.played_on) AS min_played_on,
       MAX(TP.played_on) AS max_played_on
FROM track T
	LEFT JOIN tracks_played TP ON T.artist_id = TP.artist_id AND T.album_id = TP.album_id
		AND T.track_id = TP.track_id
GROUP BY T.artist_id, T.album_id, T.track_id;",1.0,hh2858,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
1988,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT AR.artist_id, AR.artist_name, COUNT(AL.album_id) AS num_albums
FROM artist AR
	LEFT JOIN album AL ON AR.artist_id = AL.artist_id
GROUP BY AR.artist_id;",1.0,hh2858,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
1989,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played, T.artist_id, A.artist_name, 
	COUNT(DISTINCT TP.user_id) AS users, 
    SUM(T.time) AS total_time, 
    COUNT(TP.track_id) AS total_tracks
FROM tracks_played TP
	# since each track played record belong to one and only one track
       # and each track belong to one and only one album and artist
	INNER JOIN track T ON T.artist_id=TP.artist_id AND T.album_id=TP.album_id 
		AND T.track_id=TP.track_id
	INNER JOIN artist A ON A.artist_id = T.artist_id
GROUP BY DATE(TP.played_on), T.artist_id
ORDER BY DATE(TP.played_on);
",1.0,hh2858,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
1990,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
	LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
	LEFT JOIN track T ON T.artist_id=TP.artist_id AND T.album_id=TP.album_id 
		AND T.track_id=TP.track_id
GROUP BY U.user_id;",1.0,hh2858,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
1991,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id
FROM track
GROUP BY artist_id, album_id
HAVING SUM(time) >60;",1.0,hh2858,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
1992,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"# the primary key of the album is the combination of artist_id and album_id
SELECT artist_id, album_id, 
	COUNT(track_id) AS cnt_tracks, SUM(time) AS total_length
FROM track
GROUP BY artist_id, album_id;",1.0,hh2858,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
1993,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,hh2858,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
1994,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),6) AS avg_time,
	ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,hh2858,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
1995,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_id) AS num_track
FROM track;",1.0,hh2858,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
1996,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_id) AS num_artist
FROM artist;",1.0,hh2858,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
1997,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
	LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
WHERE TP.played_on IS NULL;
",1.0,hh2858,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
1998,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT TP.user_id, U.first_name, U.last_name, AL.album_name, T.track_name, TP.played_on
FROM tracks_played TP
       # since each track_played records belong to one and only one user
	INNER JOIN users U ON U.user_id = TP.user_id
       INNER JOIN album AL ON AL.artist_id = TP.artist_id AND AL.album_id = TP.album_id
       INNER JOIN track T ON T.artist_id = TP.artist_id AND T.album_id = TP.album_id 
       AND T.track_id = TP.track_id
ORDER BY TP.user_id, TP.played_on;
",1.0,hh2858,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
1999,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.*
FROM track T
	INNER JOIN artist AR ON AR.artist_id = T.artist_id
WHERE AR.artist_name = ""The Stone Roses""
ORDER BY T.time;
",1.0,hh2858,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2000,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, AR.artist_name, AL.album_name
FROM album AL
	# since each track belong to one and only one album and artist
	INNER JOIN track T ON AL.artist_id = T.artist_id AND AL.album_id = T.album_id
       INNER JOIN artist AR ON AL.artist_id = AR.artist_id;

",1.0,hh2858,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2001,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.*
FROM album AL
	INNER JOIN track T ON AL.artist_id = T.artist_id AND AL.album_id = T.album_id
WHERE AL.album_name = ""Second Coming"";
",1.0,hh2858,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2002,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT * 
FROM album AL
	INNER JOIN artist AR ON AL.artist_id = AR.artist_id
WHERE AR.artist_name = ""New Order"";",1.0,hh2858,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2003,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%love%';
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2004,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"# Using the OR boolean
SELECT *
FROM track
WHERE artist_id = 1 
	OR artist_id = 3
    OR artist_id = 5;
# Using the IN operation
SELECT *
FROM track
WHERE artist_id IN (1,3,5);

",1.0,hh2858,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2005,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name >= 'F'
	AND album_name < 'S'
ORDER BY album_name;
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2006,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M'
ORDER BY track_name;
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2007,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE album_id = 2
	AND artist_id = 3;
",1.0,hh2858,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2008,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"# From C.2 we know the artisti_id is 4.
SELECT *
FROM album
WHERE artist_id = 4;
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2009,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2010,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2011,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time
LIMIT 10;
",1.0,hh2858,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2012,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;
",1.0,hh2858,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2013,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name 
FROM artist
ORDER BY artist_name;
",1.0,hh2858,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2014,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT * 
FROM track;
",1.0,hh2858,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2015,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT * 
FROM album;
",1.0,hh2858,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2016,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"SELECT * 
FROM artist;
",1.0,hh2858,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2017,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"An artist has one to many albums. An album created by one and only one artist.
An album has one to many tracks. A track belongs to one and only one album.
A track could be played one to many times. Each record of track playing belongs to one and only one track.
Each record of track playing was played by one and only one user. A user could have one to many records of track playing.
Entity 'album' has the foreign key 'artisti_id'.
Entity 'track' has the foreign key 'artisti_id' and 'album_id'. 
Entity 'tracks_played' has the foreign key 'user_id', 'artisti_id', 'album_id', and 'track_id'.
Entity 'artist' and 'users' don't have a foreign key.
",1.0,hh2858,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
2023,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"create temporary table cust_spend_2016
with agg_orders as (
	select O.OrderID, O.CustomerID, D.total_order_price, D.total_discount, O.OrderDate
		from Orders O
        inner join agg_details D on O.OrderID = D.OrderID
        having year(O.OrderDate) = 2016
        )
	select C.CustomerID, C.CompanyName, sum(A.total_order_price) as total_price, sum(A.total_discount) as total_discount
		from Customers C
        left join agg_orders A on C.CustomerID = A.CustomerID
        group by C.CustomerID
        order by C.CustomerID;

select *, (total_price - total_discount) as net_spend, 
		case
			when (total_price - total_discount) < 1000 then 'low'
            when (total_price - total_discount) >= 1000 and (total_price - total_discount) < 5000 then 'medium'
            when (total_price - total_discount) is null then 'low'
            else 'high'
		end as spend_group
	from cust_spend_2016 
    order by CustomerID;
",10.0,acs9901,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2024,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"create temporary table agg_details
	select OrderID, sum(UnitPrice * Quantity) as total_order_price, sum(UnitPrice * Quantity * Discount) as total_discount
			from OrderDetails
			group by OrderID;

with agg_orders as (
	select O.OrderID, O.CustomerID, D.total_order_price, D.total_discount, O.OrderDate
		from Orders O
        inner join agg_details D on O.OrderID = D.OrderID
        having year(O.OrderDate) = 2016
        )
	select C.CustomerID, C.CompanyName, sum(A.total_order_price) as total_price, sum(A.total_discount) as total_discount
		from Customers C
        left join agg_orders A on C.CustomerID = A.CustomerID
        group by C.CustomerID
        order by C.CustomerID;",10.0,acs9901,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2025,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"with agg_details as (
	select OrderID, count(OrderID) as num_products, sum(Quantity) as total_units, sum(UnitPrice * Quantity) as total_order_price
		from OrderDetails
		group by OrderID
	)
	select O.OrderID, O.CustomerID, D.num_products, D.total_units, D.total_order_price
		from Orders O
               inner join agg_details D on O.OrderID = D.OrderID
               having D.total_order_price > 10000;",7.5,acs9901,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2026,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, avg(Freight) as av_freight from Orders
	group by ShipCountry
       order by av_freight desc
       limit 3;",7.5,acs9901,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2027,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"with orders_count as (
	select CustomerID, count(*) as num_orders from Orders
		group by CustomerID
	)
	select C.CustomerID, O.num_orders from Customers C
		left join orders_count O on C.CustomerID = O.CustomerID;",7.5,acs9901,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2028,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select ProductID, ProductName, CompanyName from Products P
	inner join Suppliers S on S.SupplierID = P.SupplierID
       order by ProductID;",5.0,acs9901,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2029,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName 
	from Products
       where ProductName like '%queso%';",5.0,acs9901,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2030,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate 
	from Employees
       where Title = 'Sales Representative'
       and Country = 'USA';",5.0,acs9901,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2031,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"create temporary table start_state
select distinct T.origin, T.dest, A.state as origin_state from m_ticket_prices T
	inner join m_airports A on T.origin = A.airport;

create temporary table end_state
select distinct T.origin, T.dest, A.state as end_state from m_ticket_prices T
	inner join m_airports A on T.dest = A.airport;

select S.* from start_state S
	inner join end_state E on S.origin = E.origin and S.dest = E.dest
    where S.origin_state = E.end_state;",7.5,acs9901,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2032,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"create temporary table route_data
select origin, dest, min(fare) as cheapest, max(fare) most_expensive, avg(fare) as av_fare, count(carrier) as num_carriers,
	sum(passengers) as num_passengers
    from m_ticket_prices
    group by origin, dest
    having num_carriers >= 3 and num_passengers > 10000;
select A.state_name, count(R.origin) as num_origin, max(R.num_carriers) as num_carriers, sum(R.num_passengers) as num_passengers
	from route_data R
    left join m_airports A on A.airport = R.origin
    group by A.state_name;",6.5,acs9901,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2043,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select origin, dest, min(fare) as cheapest, max(fare) most_expensive, avg(fare) as av_fare, count(carrier) as num_carriers,
	sum(passengers) as num_passengers
    from m_ticket_prices
    group by origin, dest
    having num_carriers >= 3 and num_passengers > 10000;",7.5,acs9901,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2044,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select P.*,
	rank() over(order by num_passengers DESC) as national_rank,
       rank() over w as state_rank
       from passengers_per_airport P
       inner join m_airports A on A.airport = P.origin
       window w  as (partition by state_name order by num_passengers DESC);",4.0,acs9901,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2045,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"create temporary table passengers_per_airport
	select origin, sum(passengers) as num_passengers
		from m_ticket_prices
              group by origin;",1.0,acs9901,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2046,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"select S.* ,I.Total_Inactive, S.Total_Signups - Total_Inactive as Current_Users  from SingUpsAsOf S
	inner join InactiveAsOf I on I.LastUpdate = S.MemberSince",2.0,acs9901,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2047,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"create temporary table InactiveAsOf
	select *,
		sum(num_inactive) over(order by LastUpdate) as Total_Inactive
              from InactiveOn;",2.0,acs9901,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2048,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"create temporary table SingUpsAsOf
	select *, 
		sum(num_signups) over(order by MemberSince) as Total_Signups 
              from SignUpsOn;",2.0,acs9901,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2049,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"create temporary table InactiveOn
	select LastUpdate, count(*) as num_inactive
		from Profiles
              group by LastUpdate
              order by LastUpdate;",1.0,acs9901,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2050,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"create temporary table SignUpsOn
	select MemberSince, count(*) as num_signups
		from Profiles
		group by MemberSince;
",1.0,acs9901,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2051,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"create temporary table male_ambiguous
	select first_name, gender, count(id) as freq
		from actors
		where first_name not in (
			select first_name from male_only
			)
			and first_name not in (
			select first_name from female_only
			)
			and first_name in (
				select first_name from eligible_names
			)
		and gender='M'
		group by first_name
		order by freq desc;
        
create temporary table female_ambiguous
	select first_name, gender, count(id) as freq
		from actors
		where first_name not in (
			select first_name from male_only
			)
			and first_name not in (
			select first_name from female_only
			)
			and first_name in (
				select first_name from eligible_names
			)
		and gender='F'
		group by first_name
		order by freq desc;

select M.first_name, M.freq, F.freq, abs(log(M.freq / F.freq)) as rating
	from male_ambiguous M
       inner join female_ambiguous F on M.first_name = F.first_name
       order by rating;",2.0,acs9901,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2052,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table female_only as
	select * 
		from eligible_names
		where first_name not in (
			select first_name
				from actors
				where gender='M'
		)
		order by freq desc;",1.0,acs9901,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2053,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table male_only as
	select * 
		from eligible_names
		where first_name not in (
			select first_name
				from actors
				where gender='F'
		)
		order by freq desc;
",1.0,acs9901,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2054,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as
	select first_name, count(first_name) as freq
		from actors
		where first_name not like '%.%' and first_name not like '%(%'
		group by first_name
		having  freq > 50;",1.0,acs9901,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2055,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id, T.album_id, T.track_id, track_name, 
    min(played_on) as min_played_on, max(played_on) as max_played_on
    from track T
    left outer join tracks_played as P on P.artist_id = T.artist_id 
    and P.album_id = T.album_id 
    and P.track_id = T.track_id
    group by T.artist_id, T.album_id, T.track_id;",1.0,acs9901,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2056,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select artist_name, count(*) as num_albums
    from artist A
    join album L on A.artist_id = L.artist_id
    group by A.artist_id",1.0,acs9901,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2057,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select cast(played_on as date) as date_played, A.artist_id, artist_name, count(distinct P.user_id) as users, count(*) as total_played, sum(time) as total_time
    from tracks_played P
    join track T on P.artist_id = T.artist_id and P.album_id = T.album_id and P.track_id = T.track_id
    join artist A on A.artist_id = T.artist_id 
    group by date_played, A.artist_id
    order by date_played;",1.0,acs9901,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2058,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(time) as num_played, sum(time) as time_listened
    from users u
    left join tracks_played P on u.user_id = P.user_id
    left join track T on P.artist_id = T.artist_id and P.album_id = T.album_id and P.track_id = T.track_id
    group by user_id
    order by user_id",1.0,acs9901,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2059,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id
	from track
       group by artist_id, album_id
       having sum(time) > 60",1.0,acs9901,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2060,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(*) as num_tracks, sum(time)
	from track
       group by artist_id, album_id",1.0,acs9901,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2061,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) as cnt_albums 
    from album
    group by artist_id;",1.0,acs9901,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2062,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time from track;",1.0,acs9901,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2063,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) as num_tracks from track;,1.0,acs9901,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2064,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;
select count(distinct artist_name) as num_artists from artist;",1.0,acs9901,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2065,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select first_name, last_name from users
	left join tracks_played on (users.user_id = tracks_played.user_id)
       where tracks_played.user_id is null",1.0,acs9901,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2066,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select users.user_id, first_name, last_name, album_name, track_name, played_on from tracks_played
	inner join users on (tracks_played.user_id = users.user_id)
       inner join track on (tracks_played.artist_id = track.artist_id 
		and tracks_played.album_id = track.album_id
               and tracks_played.track_id = track.track_id)
	inner join album on (tracks_played.artist_id = album.artist_id
		and tracks_played.album_id = album.album_id)
	order by user_id, played_on",1.0,acs9901,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2067,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track.* from track
	inner join artist on (track.artist_id = artist.artist_id)
       where artist.artist_name = 'The Stone Roses'
       order by time",1.0,acs9901,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2068,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name, artist_name, album_name from track
	inner join album on (album.album_id = track.album_id and album.artist_id = track.artist_id)
       inner join artist on artist.artist_id = track.artist_id",1.0,acs9901,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2069,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select track_id, track_name, track.artist_id, track.album_id, time from track
	inner join album on album.artist_id = track.artist_id
       where album_name = 'Second Coming'",1.0,acs9901,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2070,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;
select artist.artist_id, artist_name, album.* from album
	inner join artist on artist.artist_id = album.artist_id
       where artist_name = 'New Order';",1.0,acs9901,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2071,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from track
	where track_name like '%love%';",1.0,acs9901,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2072,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from track
	where artist_id = 1 or artist_id = 3 or artist_id = 5;

select * from track
	where artist_id IN(1,3,5);",1.0,acs9901,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2073,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from album
	where album_name > 'E' and album_name < 'S';",1.0,acs9901,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2074,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track
	where track_name < 'M';",1.0,acs9901,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2075,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * from track
	where artist_id = 3 and album_id = 2;",1.0,acs9901,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2076,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album
	where artist_id = 4;",1.0,acs9901,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2077,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist
	where artist_name = 'The Rolling Stones';",1.0,acs9901,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2078,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * from artist
	where artist_id = 5;",1.0,acs9901,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2079,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select * from track
	order by time
    limit 10;",1.0,acs9901,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2080,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title from album;",1.0,acs9901,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2081,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name from artist
	order by artist_name;",1.0,acs9901,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2082,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,acs9901,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2083,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,acs9901,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2084,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"use music;
select * from artist;
",1.0,acs9901,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2091,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"Select C.CustomerID, C.CompanyName
	, sum(OD.Quantity*OD.UnitPrice) as total_price
    , sum(OD.Quantity*OD.UnitPrice*OD.Discount) as total_discount
    , sum(OD.Quantity*OD.UnitPrice)-sum(OD.Quantity*OD.UnitPrice*OD.Discount) as net_spend
    , CASE
		when sum(OD.Quantity*OD.UnitPrice)-sum(OD.Quantity*OD.UnitPrice*OD.Discount)<1000
			and sum(OD.Quantity*OD.UnitPrice)-sum(OD.Quantity*OD.UnitPrice*OD.Discount)>0 then 'Low'
        when sum(OD.Quantity*OD.UnitPrice)-sum(OD.Quantity*OD.UnitPrice*OD.Discount)>1000 
			and sum(OD.Quantity*OD.UnitPrice)-sum(OD.Quantity*OD.UnitPrice*OD.Discount)<5000 then 'Medium'
		when sum(OD.Quantity*OD.UnitPrice)-sum(OD.Quantity*OD.UnitPrice*OD.Discount)>5000 then 'High'
		else ""unknown""
	END as cust_group
from Customers C
	left join Orders O on C.CustomerID = O.CustomerID
    left join OrderDetails OD on O.OrderID = OD.OrderID
Where year(O.OrderDate) = 2016
group by C.CustomerID
order by C.CustomerID;",10.0,ram659,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2092,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"Select C.CustomerID, C.CompanyName
	, sum(OD.Quantity*OD.UnitPrice) as total_price
    , sum(OD.Quantity*OD.UnitPrice*OD.Discount) as total_discount
from Customers C
	left join Orders O on C.CustomerID = O.CustomerID
    left join OrderDetails OD on O.OrderID = OD.OrderID
Where year(O.OrderDate) = 2016
group by C.CustomerID
order by C.CustomerID;",10.0,ram659,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2093,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select OD.OrderID, O.CustomerID
	, count(distinct OD.ProductID) as num_products
    , sum(OD.Quantity) as num_units
    , sum(OD.Quantity*OD.UnitPrice) as total_price
from OrderDetails OD
left join Orders O on OD.OrderID = O.OrderID
group by OD.OrderID
having total_price > 10000
Order by total_price DESC;",7.5,ram659,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2094,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"Select ShipCountry, round(avg(Freight),2) as avg_freight
from Orders
group by ShipCountry
order by avg_freight desc
limit 3;",7.5,ram659,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2095,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.CustomerID, C.CompanyName, count(OrderID) as order_cnt
from Customers C
	left join Orders O on C.CustomerID = O.CustomerID
group by C.CustomerID;",7.5,ram659,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2096,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select P.ProductID, P.ProductName, S.CompanyName
from Products P
	join Suppliers S on P.SupplierID = S.SupplierID
Order by P.ProductID;",5.0,ram659,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2097,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
from Products
where ProductName like ""%queso%"";",5.0,ram659,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2098,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate 
from Employees
where Title = ""Sales Representative""
	and Country = ""USA"";",5.0,ram659,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2099,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"select A.state, count(distinct airport) as airport_cnt, count(distinct carrier) as carrier_cnt, sum(passengers) as total_passengers, avg(fare_per_mile) as avg_fare_mile
from m_airports A
	join m_ticket_prices T on T.origin = A.airport
group by state;",7.5,ram659,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2110,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select origin, dest
	, count(distinct carrier) as carrier_cnt
    , min(fare) as min_fare
    , max(fare) as max_fare
    , avg(fare) as avg_fare
    , sum(passengers) as total_passengers
from m_ticket_prices
group by origin, dest;",7.0,ram659,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2111,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select P.origin, A.state, P.total_airport_passengers
	, rank() over (order by P.total_airport_passengers desc) as natl_rank
    , rank() over (partition by A.state order by P.total_airport_passengers desc) as state_rank
from passengers_per_airport P
join m_airports A on P.origin = A.airport;",4.0,ram659,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2112,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"create temporary table passengers_per_airport as
	select *, sum(passengers) over (partition by origin) as total_airport_passengers
	from m_ticket_prices;",1.0,ram659,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2113,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"select signup_date as date, signup_cnt, inactive_cnt
	, sum(signup_cnt) over (order by signup_date) as SignUpsAsOf
    , sum(inactive_cnt) over (order by inactive_date) as InactiveAsOf
    , sum(signup_cnt) over (order by signup_date) - sum(inactive_cnt) over (order by inactive_date) as total_active
from SignUpsOn
	join InactiveOn on signup_date=inactive_date;",4.0,ram659,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2114,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"select inactive_date, inactive_cnt
	, sum(inactive_cnt) over (order by inactive_date) as InactiveAsOf
from InactiveOn;",2.0,ram659,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2115,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"select signup_date, signup_cnt
	, sum(signup_cnt) over (order by signup_date) as SignUpsAsOf
from SignUpsOn;",2.0,ram659,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2116,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"create temporary table InactiveOn as
	select date(LastUpdate) as inactive_date, count(*) as inactive_cnt
    from Profiles
    group by date(LastUpdate)
    order by inactive_date;",1.0,ram659,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2117,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"create temporary table SignUpsOn as
	select date(MemberSince) as signup_date, count(*) as signup_cnt
    from Profiles
    group by date(MemberSince)
    order by signup_date;",1.0,ram659,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2118,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"#all male names and frequency
create temporary table male_frequency as
	select first_name, count(first_name) as m_freq
	from actors
	where gender=""M""
	group by first_name
	order by m_freq desc;

#all female names and frequency
create temporary table female_frequency as
	select first_name, count(first_name) as f_freq
	from actors
	where gender=""F""
	group by first_name
	order by f_freq desc;

select E.first_name, M.m_freq, F.f_freq, log(m_freq / f_freq) as ambiguous_score
from eligible_names E
	left join male_frequency M on E.first_name = M.first_name
       left join female_frequency F on E.first_name = F.first_name
where M.m_freq is not null
	and M.m_freq > 0
	and F.f_freq is not null
    and F.f_freq > 0
order by abs(ambiguous_score) asc;",2.0,ram659,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2119,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"#Female names
create temporary table female_only as
	select A.first_name, gender, count(A.first_name) as f_count
	from actors A
	where A.first_name not in (select first_name from actors where gender=""M"") 
		and A.first_name in (select first_name from eligible_names)
	group by first_name, gender;",1.0,ram659,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2120,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"# Male names
create temporary table male_only as
	select A.first_name, gender, count(A.first_name) as m_count
	from actors A
	where A.first_name not in (select first_name from actors where gender=""F"") 
		and A.first_name in (select first_name from eligible_names)
	group by first_name, gender;",1.0,ram659,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2121,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as
	select first_name, count(first_name) as cnt
	from actors
		where first_name not like ""%.%"" 
		and first_name not like ""%(%)%""
	group by first_name
	having cnt >=50
	order by cnt desc;",1.0,ram659,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2122,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id, T.album_id, T.track_id, T.track_name, min(TP.played_on) as first_played, max(TP.played_on) as last_played
from track T
	left join tracks_played TP on T.track_id = TP.track_id and T.album_id = TP.album_id and T.artist_id = TP.artist_id
group by T.artist_id, T.album_id, T.track_id;",1.0,ram659,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2123,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select A.artist_id, artist_name, count(album_id) as num_albums
from artist A
	left join album AL on AL.artist_id = A.artist_id
group by A.artist_id;",1.0,ram659,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2124,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(TP.played_on) as day, A.artist_name, A.artist_id, count(distinct TP.user_id) as daily_listeners, 
	count(TP.track_id) as tracks_played, sum(T.time) as minutes_listened
from tracks_played TP
	left join album AL on TP.artist_id = AL.artist_id and TP.album_id = AL.album_id
	left join artist A on TP.artist_id = A.artist_id
    left join track T on TP.track_id = T.track_id and TP.artist_id = T.artist_id and TP.album_id = T.album_id
group by date(TP.played_on), A.artist_id
order by day asc;",1.0,ram659,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2125,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select U.user_id, count(TP.track_id) as track_count, sum(T.time) as total_listening
from users U
	left join tracks_played TP on TP.user_id = U.user_id
	left join track T on T.artist_id = TP.artist_id and T.album_id = TP.album_id and T.track_id = TP.track_id
group by user_id;",1.0,ram659,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2126,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id, count(track_id) as num_tracks, sum(time) as total_length
from track
group by artist_id, album_id
having total_length > 60;",1.0,ram659,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2127,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(track_id) as num_tracks, sum(time) as total_length
from track
group by artist_id, album_id;",1.0,ram659,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2128,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*)
from album
group by artist_id;",1.0,ram659,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2129,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time)
from track;",1.0,ram659,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2130,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(*)
from track;",1.0,ram659,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2131,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(*)
from artist;",1.0,ram659,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2132,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
from users U
	left join tracks_played P on U.user_id = P.user_id
where track_id is NULL;",1.0,ram659,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2133,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.first_name, U.last_name, U.user_id, L.album_name, T.track_name, P.played_on
from tracks_played P
	left join users U on U.user_id = P.user_id
    left join track T on T.track_id = P.track_id and T.album_id = P.album_id and T.artist_id = P.artist_id
    left join album L on P.album_id = L.album_id and P.artist_id = L.artist_id
    left join artist R on R.artist_id = L.artist_id;",1.0,ram659,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2134,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.track_name, L.album_name, T.time
from track T
	left join album L on L.artist_id = T.artist_id and L.album_id = T.album_id
    left join artist R on R.artist_id = L.artist_id
where R.artist_name like ""%Stone Roses%""
order by time asc;",1.0,ram659,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2135,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, L.album_name, R.artist_name
from track T
	left join album L on L.artist_id = T.artist_id and L.album_id = T.album_id
    left join artist R on R.artist_id = L.artist_id;",1.0,ram659,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2136,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
from track T
	inner join album L on L.artist_id = T.artist_id and L.album_id = T.album_id
where album_name = ""Second Coming"";",1.0,ram659,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2137,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from album L
	inner join artist R on L.artist_id = R.artist_id
where artist_name = ""New Order"";",1.0,ram659,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2144,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from track
where track_name like ""%love%"";",1.0,ram659,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2145,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"#IN
select * from track
where artist_id in (1,3,5);

#OR BOOLEAN
select * from track
where artist_id = 1
or artist_id = 3
or artist_id = 5;",1.0,ram659,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2146,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from album
where album_name >= ""F""
and album_name < ""S"";",1.0,ram659,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2147,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track
where track_name < ""M"";",1.0,ram659,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2148,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * from track
where artist_id = 3 and album_id = 2;",1.0,ram659,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2149,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album
where artist_id = 4;",1.0,ram659,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2150,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist
where artist_name = ""The Rolling Stones"";",1.0,ram659,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2151,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * from artist
where artist_id = 5;",1.0,ram659,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2152,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select * from track
order by time asc
limit 10;",1.0,ram659,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2153,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_name as album_title, artist_id from album;",1.0,ram659,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2154,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name from artist
order by artist_name;",1.0,ram659,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2155,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,ram659,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2156,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,ram659,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2157,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,select * from artist;,1.0,ram659,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2164,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
  subq.CustomerID, 
  subq.CompanyName, 
  subq.TotalPrice AS TotalAmountSpentBeforeDiscounts, 
  subq.TotalDiscount,
  CASE 
    WHEN subq.TotalPrice >= 5000 THEN 'High' 
    WHEN subq.TotalPrice >= 1000 THEN 'Medium' 
    ELSE 'Low' 
  END AS SpendingGroup
FROM (
 SELECT 
  C.CustomerID, 
  C.CompanyName, 
  SUM(OD.Quantity * OD.UnitPrice) AS TotalPrice,
  SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TotalDiscount
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
LEFT JOIN OrderDetails OD ON O.OrderID = OD.OrderID
WHERE YEAR(O.OrderDate) = 2016
GROUP BY C.CustomerID
) AS subq
ORDER BY subq.CustomerID;",10.0,jk7371,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2165,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT 
  C.CustomerID, 
  C.CompanyName, 
  SUM(OD.Quantity * OD.UnitPrice) AS TotalPrice,
  SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TotalDiscount
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
LEFT JOIN OrderDetails OD ON O.OrderID = OD.OrderID
WHERE YEAR(O.OrderDate) = 2016
GROUP BY C.CustomerID
ORDER BY C.CustomerID;",10.0,jk7371,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2166,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT 
  O.CustomerID, 
  COUNT(OD.ProductID) AS Num_Products, 
  SUM(OD.Quantity) AS Total_Units, 
  SUM(OD.Quantity * OD.UnitPrice) AS Total_Price
FROM Orders O
	JOIN OrderDetails OD ON O.OrderID = OD.OrderID
GROUP BY O.OrderID
HAVING Total_Price > 10000
ORDER BY Total_Price DESC;",7.5,jk7371,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2167,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, avg(Freight) as AVGFreight from Orders group by ShipCountry order by AVGFreight desc limit 3;",7.5,jk7371,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2168,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.CustomerID, count(*) as num_orders 
from Customers C 
	left join Orders O on O.CustomerID=C.CustomerID 
group by C.CustomerID 
order by num_orders desc;
",7.5,jk7371,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2169,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select ProductID, ProductName, S.CompanyName from Products P 
	join Suppliers S on P.SupplierID=S.SupplierID
    order by ProductID;",5.0,jk7371,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2170,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID,ProductName from Products where ProductName like  '%queso%';",5.0,jk7371,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2171,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate from Employees where Title='Sales Representative' and Country='USA';",5.0,jk7371,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2172,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT a1.airport, a2.airport, a2.state FROM m_ticket_prices tp
	JOIN m_airports a1 ON tp.origin=a1.airport
	JOIN m_airports a2 ON tp.dest=a2.airport
WHERE a1.state=a2.state
GROUP BY a1.airport, a2.airport, a2.state ;",7.5,jk7371,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2173,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"select a.state, count(distinct origin), count(tp.carrier), sum(passengers), avg(fare_per_mile) from m_ticket_prices tp 
	join m_airports a on tp.origin=a.airport
group by a.state;",7.5,jk7371,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2174,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"select carrier, count(*), count(origin), avg(fare_per_mile) from m_ticket_prices 
group by carrier
having sum(passengers)>20000;",9.0,jk7371,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2185,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select origin, dest, min(fare), max(fare), avg(fare), count(distinct carrier), sum(passengers)
from m_ticket_prices
group by origin, dest
having count(distinct carrier)>2 and sum(passengers)>10000
order by sum(passengers) desc;",7.5,jk7371,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2186,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE Passengers_per_airport AS
	SELECT origin, COUNT(passengers) AS cnt    
	FROM m_ticket_prices   
	GROUP BY origin    
	ORDER BY cnt DESC;",1.0,jk7371,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2187,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"select LU, cnt, sum(cnt) over w
from InactiveOn
WINDOW w AS (ORDER BY cnt DESC);",1.0,jk7371,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2188,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"select MS, cnt, sum(cnt) over w
from SignUpsOn
WINDOW w AS (ORDER BY cnt DESC);",1.0,jk7371,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2189,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
	SELECT LastUpdate AS LU, COUNT(ProfileID) AS cnt    
	FROM Profiles   
	GROUP BY LastUpdate    
	ORDER BY cnt DESC;   ",1.0,jk7371,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2190,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsOn AS
	SELECT MemberSince AS MS, COUNT(ProfileID) AS cnt    
	FROM Profiles   
	GROUP BY MemberSince    
	ORDER BY cnt DESC;",1.0,jk7371,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2191,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select first_name, count(*) as frequency from female_only
where first_name not in (
select first_name from male_only)
group by first_name
order by frequency desc;",0.8,jk7371,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2192,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table male_only as
	select * from actors where gender='M';
create temporary table female_only as
	select * from actors where gender='F';
    
select first_name, count(*) as frequency from male_only
where first_name not in (
select first_name from female_only)
group by first_name
order by frequency desc;",0.9,jk7371,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2193,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as 
	select first_name
	from actors 
	where first_name not like '%.%' and first_name not like '%(%' and first_name not like '%(%'
	group by first_name
	having count(first_name)>50;",0.9,jk7371,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2194,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select distinct track_name, min(played_on), max(played_on) from track t
	left outer join tracks_played tp on tp.artist_id=t.artist_id and tp.album_id=t.album_id and tp.track_id=t.track_id
group by track_name;",1.0,jk7371,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2195,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select t.artist_id, artist_name, count(distinct album_id) as num_albums from track t 
	join artist a on t.artist_id=a.artist_id
group by artist_id;",1.0,jk7371,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2196,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(tp.played_on) as date_played, tp.artist_id, a.artist_name, count(distinct tp.user_id) as users, sum(t.time) as total_time, count(tp.track_id) as total_tracks from tracks_played tp
	join artist a on tp.artist_id=a.artist_id
    join track t on tp.artist_id=t.artist_id and tp.album_id=t.album_id and tp.track_id=t.track_id
group by date(played_on), tp.artist_id
order by date(played_on), tp.artist_id;",1.0,jk7371,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2197,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(tp.track_id) as tracks_played, sum(time) as total_time from users u
	left outer join tracks_played tp on u.user_id=tp.user_id
    left outer join track t on tp.artist_id=t.artist_id and tp.album_id=t.album_id and tp.track_id=t.track_id
group by u.user_id;",1.0,jk7371,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2198,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id, sum(time) from track group by artist_id, album_id having sum(time) > 60 ;",1.0,jk7371,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2199,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(*), sum(time) from track group by artist_id, album_id;",1.0,jk7371,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2200,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) as cnt_albums from album group by artist_id;",1.0,jk7371,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2201,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time from track;",1.0,jk7371,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2202,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) from track;,1.0,jk7371,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2203,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(*) from artist;,1.0,jk7371,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2205,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select *
from tracks_played tp
	inner join users u on tp.user_id = u.user_id
    inner join album b on tp.album_id = b.album_id
    inner join track t on tp.track_id = t.track_id;",0.5,jk7371,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2206,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select * 
from track t
	inner join artist a on t.artist_id = a.artist_id
where artist_name = ""The Stone Roses""
order by time;",1.0,jk7371,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2207,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select *
from track t
	inner join artist a on t.artist_id = a.artist_id
    inner join album b on t.album_id = b.album_id;",0.5,jk7371,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2208,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
from album b
	inner join track t on t.artist_id = b.artist_id
    where album_name=""Second coming"";",1.0,jk7371,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2209,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select * 
from artist a 
	inner join album b on a.artist_id = b.artist_id
    where artist_name = ""New Order"";",1.0,jk7371,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2210,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from track where track_name like ""%Love%"";",1.0,jk7371,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2211,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from track where artist_id=1 or artist_id=3 or artist_id=5;
select * from track where artist_id in (1,3,5);",1.0,jk7371,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2212,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from album where album_name > ""E"" and album_name < ""S"";",1.0,jk7371,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2213,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track where track_name < ""M"";",1.0,jk7371,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2214,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from track where artist_id=3 and album_id=2;,1.0,jk7371,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2215,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,select * from album where artist_id=4;,1.0,jk7371,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2216,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist where artist_name=""The Rolling Stones"";",1.0,jk7371,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2217,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,select * from artist where artist_id=5;,1.0,jk7371,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2218,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,select * from track order by time limit 10;,1.0,jk7371,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2219,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title from album;
",1.0,jk7371,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2220,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,select artist_name from artist order by artist_name;,1.0,jk7371,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2221,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,jk7371,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2222,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,jk7371,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2223,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"select * from artist;
select * from track; 
select artist_name from artist order by artist_name;
select artist_id, album_name as album_title from album;
select * from track order by time limit 10;",1.0,jk7371,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2229,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;
select*
from artist
where artist_id = 5;
",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2230,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"use northwind;
SELECT 
    c.CustomerID,
    c.CompanyName,
    t.total_spent AS total_spent_before_discount,
    t.total_discount,
    CASE 
        WHEN t.total_spent >= 0 AND t.total_spent <= 1000 THEN 'Low'
        WHEN t.total_spent > 1000 AND t.total_spent <= 5000 THEN 'Medium'
        ELSE 'High'
    END AS customer_group
FROM 
    Customers c
    JOIN (
        SELECT 
            o.CustomerID,
            SUM(od.Quantity * od.UnitPrice) AS total_spent,
            SUM(od.Quantity * od.UnitPrice * od.Discount) AS total_discount
        FROM 
            Orders o 
            JOIN OrderDetails od ON o.OrderID = od.OrderID
        WHERE 
            YEAR(o.OrderDate) = 2016
        GROUP BY 
            o.CustomerID
    ) t ON c.CustomerID = t.CustomerID
ORDER BY 
    c.CustomerID;
",10.0,pvk6327,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2231,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"use northwind;
CREATE TEMPORARY TABLE temp_orders_2016 AS (
    SELECT 
        CustomerID,
        Quantity,
        UnitPrice,
        Discount
    FROM 
        Orders o 
        JOIN OrderDetails od ON o.OrderID = od.OrderID
    WHERE 
        YEAR(o.OrderDate) = 2016
);

SELECT 
    c.CustomerID,
    c.CompanyName,
    SUM(t.Quantity * t.UnitPrice) AS total_price,
    SUM(t.Quantity * t.UnitPrice * t.Discount) AS total_discount
FROM 
    Customers c 
    JOIN temp_orders_2016 t ON c.CustomerID = t.CustomerID
GROUP BY 
    c.CustomerID,
    c.CompanyName
ORDER BY 
    c.CustomerID;
",10.0,pvk6327,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2232,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"use northwind;
SELECT O.CustomerID, COUNT(OD.ProductID) AS NumberofProducts, SUM(OD.Quantity) AS TotalUnits, 
SUM(OD.Quantity * OD.UnitPrice) AS TotalPrice
FROM Orders O
JOIN OrderDetails OD 
ON O.OrderID = OD.OrderID
GROUP BY O.CustomerID, O.OrderID
HAVING SUM(OD.Quantity * OD.UnitPrice) > 10000
ORDER BY TotalPrice DESC;
",7.5,pvk6327,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2233,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"use northwind;
SELECT ShipCountry, AVG(Freight) AS AverageFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC
LIMIT 3;",7.5,pvk6327,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2234,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"use northwind;

SELECT Cus.CustomerID, COUNT(Od.OrderID) AS NumberofOrders
FROM Customers Cus
LEFT JOIN Orders Od ON Cus.CustomerID = Od.CustomerID
GROUP BY Cus.CustomerID;",7.5,pvk6327,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2235,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"use northwind;

Select ProductID, ProductName,  CompanyName
from Products pr
inner join Suppliers Su
on pr.SupplierID = Su.SupplierID
order by ProductID;",5.0,pvk6327,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2236,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"use northwind;

Select ProductID, ProductName
from Products
where ProductName like '%queso%'",5.0,pvk6327,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2237,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;

select FirstName, LastName, HireDate 
from Employees
where Title = 'Sales Representative' and Country = 'USA';",5.0,pvk6327,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2238,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"use flights;
SELECT DISTINCT m.origin, m.dest, a.state
FROM
    m_ticket_prices m
JOIN
    m_airports a ON m.origin = a.airport
JOIN
    m_airports b 
    ON m.dest = b.airport
WHERE
a.state = b.state;
",7.5,pvk6327,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2239,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"use flights;
SELECT 
    a.state AS origin_state,
    COUNT(DISTINCT a.airport) AS num_origins,
    COUNT(DISTINCT tp.carrier) AS num_carriers,
    SUM(tp.passengers) AS total_passengers,
    AVG(tp.fare / tp.distance) AS avg_fare_per_mile
FROM 
    flights.m_ticket_prices tp
    JOIN flights.m_airports a 
    ON tp.origin = a.airport
GROUP BY 
    origin_state
ORDER BY 
    origin_state;
",7.5,pvk6327,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2240,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"use flights;

SELECT 
    carrier,
    COUNT(DISTINCT CONCAT(origin, '-', dest)) AS num_routes,
    COUNT(DISTINCT origin) AS num_airports,
    SUM(passengers) AS total_passengers,
    SUM(fare) / SUM(distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices
GROUP BY carrier
HAVING total_passengers > 20000;",10.0,pvk6327,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2251,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"use flights;
SELECT 
    origin, dest,
    MIN(fare) AS cheapest_fare,
    MAX(fare) AS most_expensive_fare,
    AVG(fare) AS average_fare,
    COUNT(DISTINCT carrier) AS carriers_count,
    SUM(passengers) AS total_passengers
FROM m_ticket_prices 
GROUP BY origin, dest
HAVING carriers_count >= 3 AND total_passengers > 10000;
",7.5,pvk6327,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2252,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"use flights;

select pa.origin, 
DENSE_RANK() over(order by totalPassengers desc) as national_rank,
DENSE_RANK() over(partition by ma.state order by totalPassengers desc) as state_rank,
totalPassengers
from m_airports ma 
join passengers_per_airport pa 
on pa.origin = ma.airport 
order by national_rank;",4.0,pvk6327,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2253,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"use flights;
create TEMPORARY TABLE passengers_per_airport as
select origin, SUM(passengers) as totalPassengers from m_ticket_prices group by origin;

# use this query to see the output
#select* from passengers_per_airport",1.0,pvk6327,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2254,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"use facebook;
SELECT si.signUpDate, 
       si.totalSignUpsTillToday - ina.totalInactiveTillToday as totalActiveUsers
FROM SingUpsAsOf si
LEFT JOIN InactiveAsOf ina ON si.signUpDate = ina.InactiveDate;",4.0,pvk6327,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2255,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"use facebook;
create TEMPORARY TABLE InactiveAsOf as
select InactiveDate, SUM(totalInactiveOn) over(order by InactiveDate) as totalInactiveTillToday
from InactiveOn;

#use this to see the output
#select* from InactiveAsOf;",2.0,pvk6327,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2256,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"use facebook;
create TEMPORARY TABLE SingUpsAsOf as
select signUpDate, SUM(totalSignUps) over(order by signUpDate) as totalSignUpsTillToday 
from SignUpsOn;


#please use this to see the output
#select* from SingUpsAsOf;",2.0,pvk6327,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2257,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"use facebook;
create TEMPORARY TABLE InactiveOn as
select Date(LastUpdate) as InactiveDate,
COUNT(*) as totalInactiveOn 
from Profiles group by InactiveDate 
order by InactiveDate;


 #please use this to see the output
#select* from InactiveOn",1.0,pvk6327,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2258,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"use facebook;
create TEMPORARY TABLE SignUpsOn as 
select Date(MemberSince) as signUpDate, COUNT(*) as totalSignUps from Profiles group by signUpDate order by signUpDate;


#please use this to see the output
#select* from SignUpsOn;",1.0,pvk6327,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2259,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"use imdb;
DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) AS count, SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS female_count
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING count >= 50;

SELECT first_name, male_count, female_count, ABS(LOG(male_count/female_count)) AS ambiguity_score
FROM eligible_names
WHERE male_count > 0 AND female_count > 0
ORDER BY ambiguity_score;",2.0,pvk6327,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2260,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"use imdb;

Drop table IF Exists female_names ;

CREATE TEMPORARY TABLE female_names AS
SELECT first_name, COUNT(*) as freq
FROM actors
WHERE gender = 'F' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING freq >= 50;

SELECT fn.first_name, fn.freq
FROM female_names fn
LEFT JOIN (
  SELECT DISTINCT first_name
  FROM actors
  WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
) mn ON fn.first_name = mn.first_name
WHERE mn.first_name IS NULL
ORDER BY freq desc;",1.0,pvk6327,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2261,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"use imdb;
DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) AS frequency
FROM actors
WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING frequency >= 50;

SELECT m.first_name, m.frequency
FROM male_names m
WHERE NOT EXISTS (
  SELECT *
  FROM actors a
  WHERE a.gender = 'F' AND a.first_name = m.first_name
)
ORDER BY frequency DESC;",1.0,pvk6327,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2262,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"use imdb;
DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
select first_name, count(*) as frequency 
from actors where first_name not like '%(%)%' and first_name not like '%.%' 
group by first_name 
having frequency >= 50;",1.0,pvk6327,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2263,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"use music;
Select 
tr.artist_id,
  tr.album_id,
  tr.track_id, tr.track_name,
  MIN(tp.played_on) AS first_played,
  MAX(tp.played_on) AS last_played
from track tr
LEFT JOIN 
tracks_played tp 
ON tr.track_id = tp.track_id and  tr.artist_id = tp.artist_id and tr.album_id = tp.album_id
GROUP BY tr.track_id, tr.artist_id, tr.album_id;

",1.0,pvk6327,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2264,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"use music;
select
	ar.artist_id,
       ar.artist_name, 
  COUNT(al.album_id) AS num_albums 
from 
  artist ar
  LEFT JOIN album al
  on ar.artist_id = al.artist_id 
GROUP BY 
  ar.artist_id;
",1.0,pvk6327,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2265,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"use music;
select
  DATE(tp.played_on) AS date_played,
  tp.artist_id,
  ar.artist_name,
  COUNT(DISTINCT tp.user_id) AS users,
  SUM(tr.time) AS total_time,
  COUNT( tp.track_id) AS total_tracks 
from
  tracks_played tp
JOIN
  artist ar 
  ON ar.artist_id = tp.artist_id
JOIN
  track tr 
  ON tr.track_id = tp.track_id and tr.artist_id = tp.artist_id and tr.album_id = tp.album_id
GROUP BY
  date_played,
  tp.artist_id,
  ar.artist_name;


",1.0,pvk6327,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2266,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"use music;
select ur.user_id, COUNT( tp.track_id) as tracks_played, SUM(tr.time) as total_time
from users ur
	LEFT JOIN tracks_played tp  
     ON ur.user_id = tp.user_id
    LEFT JOIN track tr 
ON  tr.track_id = tp.track_id and tr.artist_id = tp.artist_id and tr.album_id = tp.album_id
GROUP BY ur.user_id
ORDER BY ur.user_id;
",1.0,pvk6327,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2267,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"use music;
select al.artist_id, al.album_id, SUM(tr.time) 
from album al 
join track tr 
on al.artist_id = tr.artist_id and al.album_id = tr.album_id 
group by al.artist_id, al.album_id 
having SUM(tr.time) > 60;",1.0,pvk6327,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2268,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"use music;
SELECT al.album_id, al.artist_id,
        COUNT(tr.track_id) AS cnt_track, SUM(tr.time) AS sum_time
FROM track tr
	JOIN album al  
    ON al.album_id = tr.album_id and  al.artist_id = tr.artist_id
GROUP BY al.album_id, al.artist_id;",1.0,pvk6327,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2269,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"use music;
select artist_id, count(*) as cnt_albums
from album
group by artist_id;",1.0,pvk6327,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2270,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"use music;
SELECT AVG(time) AS avg_time, stddev(time) AS std_time
from track;",1.0,pvk6327,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2271,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"use music;
select  count(*) as count_tracks
from track;",1.0,pvk6327,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2272,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;
select count(*) as count_artist
from artist;",1.0,pvk6327,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2273,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"use music;
SELECT US.first_name, US.last_name
FROM users US
LEFT JOIN tracks_played TP
ON US.user_id = TP.user_id
WHERE TP.track_id IS NULL;",1.0,pvk6327,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2274,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"use music;
select u.user_id, u.first_name, u.last_name, a.album_name, tr.track_name, tp.played_on 
from track tr 
inner join tracks_played tp 
on tr.artist_id = tp.artist_id and tr.album_id = tp.album_id and tr.track_id = tp.track_id 
inner join album a 
on a.artist_id = tr.artist_id and a.album_id = tr.album_id 
inner join users u 
on tp.user_id = u.user_id
limit 5000;
",1.0,pvk6327,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2275,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"use music;
select TR.track_id, TR.track_name, AR.artist_id, TR.album_id, TR.time
from track TR
inner join artist AR
on TR.artist_id = AR.artist_id
where AR.artist_name = 'The Stone Roses'
ORDER BY TR.time;


",1.0,pvk6327,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2276,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"use music;
select TR.track_name, AR.artist_name, AL.album_name 
from track TR
inner join album AL 
on TR.artist_id = AL.artist_id and TR.album_id = AL.album_id 
inner join artist AR 
on AR.artist_id = AL.artist_id;

",1.0,pvk6327,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2277,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"use music;
select TR.track_id, TR.track_name, AL.artist_id, AL.album_id, TR.time 
from track TR
inner join album AL
on AL.artist_id = TR.artist_id and AL.album_id = TR.album_id 
where AL.album_name = 'Second Coming';",1.0,pvk6327,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2278,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;
Select* 
from artist AR
inner join album AL
on AR.artist_id = AL.artist_id
where AR.artist_name = 'New Order';",1.0,pvk6327,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2279,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"use music;
SELECT track_id, track_name, artist_id,	album_id, time
FROM
    track
ORDER BY time ASC
LIMIT 10;
",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2280,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"use music;
Select artist_id, album_name as album_tile
from album;
",1.0,pvk6327,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2281,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"use music; 
select artist_name from artist
order by artist_name asc;",1.0,pvk6327,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2282,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"use music;
select * from track;",1.0,pvk6327,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2283,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"use music;
select *
from album;",1.0,pvk6327,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2284,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"use music;
select*
from artist;",1.0,pvk6327,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2291,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"Select track_name from track
where track_name Like ""%Love%"";",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2292,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"/* using IN */
use music;
Select track_name from track
where artist_id IN (""1"",""3"", ""5"")
order by artist_id;


/*using OR*/

use music;
Select artist_id,track_name from track
where artist_id = ""1"" OR artist_id = ""3"" OR  artist_id= ""5""
order by artist_id;
",1.0,pvk6327,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2293,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select album_name
from album
where album_name>= ""F"" AND album_name <""S"";


",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2294,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select*
From album
Where album_name <='L' 
Order by album_name;",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2295,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"use music;
Select track_name from track
where artist_id = ""3"" and album_id = ""2"";",1.0,pvk6327,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2296,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"use music;
Select album_name from album
where artist_id = ""4"";",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2297,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"use music;
select*
from artist
where artist_name = 'The Rolling Stones';
",1.0,pvk6327,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2299,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT c.CustomerID, c.CompanyName, subquery.TotalPrice, subquery.TotalDiscount,
    CASE WHEN subquery.TotalPrice- subquery.TotalDiscount BETWEEN 0 AND 1000 THEN 'Low'
         WHEN subquery.TotalPrice- subquery.TotalDiscount BETWEEN 1000 AND 5000 THEN 'Medium'
         WHEN subquery.TotalPrice- subquery.TotalDiscount > 5000 THEN 'High'
    END AS group
FROM Customers c
    JOIN (SELECT c.CustomerID, c.CompanyName,
    SUM(d.Quantity * d.UnitPrice) AS TotalPrice,
    SUM(d.Quantity * d.UnitPrice * d.Discount) AS TotalDiscount
FROM Customers c
    LEFT OUTER JOIN Orders o ON c.CustomerID = o.CustomerID
    LEFT OUTER JOIN OrderDetails d ON o.OrderID = d.OrderID
        AND YEAR(o.OrderDate) = 2016
GROUP BY c.CustomerID
ORDER BY c.CustomerID) subquery ON c.CustomerID = subquery.CustomerID;",10.0,zz3543,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2300,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT c.CustomerID, c.CompanyName,
    SUM(d.Quantity * d.UnitPrice) AS TotalPrice,
    SUM(d.Quantity * d.UnitPrice * d.Discount) AS TotalDiscount
FROM Customers c
    LEFT OUTER JOIN Orders o ON c.CustomerID = o.CustomerID
    LEFT OUTER JOIN OrderDetails d ON o.OrderID = d.OrderID
        AND YEAR(o.OrderDate) = 2016
GROUP BY c.CustomerID
ORDER BY c.CustomerID",10.0,zz3543,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2301,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT o.CustomerID, COUNT(*) AS num_products,SUM(d.Quantity) AS total_units,
    SUM(d.Quantity * d.UnitPrice) AS total_order_price
FROM Orders o
JOIN OrderDetails d ON o.OrderID = d.OrderID
GROUP BY o.CustomerID, o.OrderID
HAVING total_order_price > 10000
ORDER BY total_order_price DESC;",7.5,zz3543,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2302,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry , ROUND(AVG(Freight),2) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC 
LIMIT 3;",7.5,zz3543,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2303,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT c.CustomerID, COUNT(o.OrderID) AS num_orders
FROM Customers c 
LEFT JOIN Orders o ON c.CustomerID=o.CustomerID
GROUP BY c.CustomerID
ORDER BY c.CustomerID;
",7.5,zz3543,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2304,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"Select p.ProductID, p.ProductName, s.CompanyName
From Products p
Join Suppliers s On p.SupplierID=s.SupplierID
Order BY p.ProductID;",5.0,zz3543,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2305,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"Select ProductID, ProductName
From Products
Where ProductName like '%queso%';",5.0,zz3543,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2306,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"Select FirstName , LastName, HireDate 
From Employees
Where title like ""Sales Representative"" and Country like ""USA"";",5.0,zz3543,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2307,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT a1.airport AS origin,a2.airport AS dest,a1.state AS state
FROM flights.m_ticket_prices m
JOIN flights.m_airports a1 ON m.origin = a1.airport
JOIN flights.m_airports a2 ON m.dest = a2.airport
WHERE a1.state = a2.state
GROUP BY origin, dest, state;",7.5,zz3543,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2308,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT a.state,COUNT(DISTINCT m.origin) AS num_origin_airports,COUNT(DISTINCT m.carrier) AS num_carriers,
    SUM(m.passengers) AS total_passengers,AVG(m.fare / m.distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices m
JOIN flights.m_airports a ON m.origin = a.airport
GROUP BY a.state;",7.5,zz3543,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2309,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT m.carrier,COUNT(DISTINCT CONCAT(m.origin, m.dest)) AS num_routes,COUNT(DISTINCT m.origin) AS num_airports,
    AVG(m.fare / m.distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices m
GROUP BY m.carrier
HAVING SUM(m.passengers) > 20000;",10.0,zz3543,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2320,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT m.origin,m.dest,MIN(m.fare) AS cheapest_fare, MAX(m.fare) AS most_expensive_fare,
    AVG(m.fare) AS average_fare,
    COUNT(DISTINCT m.carrier) AS num_of_carriers,
    SUM(m.passengers) AS total_passengers
FROM flights.m_ticket_prices m
GROUP BY m.origin, m.dest
HAVING num_of_carriers >= 3 AND total_passengers > 10000;",7.5,zz3543,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2321,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select p.origin, m.state, Dense_rank() over(order by p.total_passengers Desc) as national_rank, dense_rank() over (partition by m.state order by p.total_passengers desc) as state_rank
from passengers_per_airport p
Join m_airports m on p.origin = m.airport;",4.0,zz3543,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2322,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"create Temporary table passengers_per_airport as
select origin, Sum(passengers) As total_passengers
From m_ticket_prices
Group By Origin;",1.0,zz3543,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2323,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"select s.MemberSince, s.SignUpAsOf - i.InactiveAsOf As TotalActiveUsers
From SignUpAsOf s
left Join InactiveAsOf i on s.MemberSince =i.LastUpdate;",4.0,zz3543,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2324,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"Create Temporary Table InactiveAsOf AS
Select LastUpdate, Sum(InactiveSince) Over (Order by LastUpdate) As InactiveAsOf
From InactiveOn;
",2.0,zz3543,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2325,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"Create Temporary Table SignUpAsOf AS
Select MemberSince, Sum(SignUps) Over (Order by MemberSince) As SignUpAsOf
From SignUpOn;",2.0,zz3543,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2326,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"Create Temporary table InactiveOn AS
Select LastUpdate , count(ProfileID) AS InactiveSince
From Profiles
Group by LastUpdate;

",1.0,zz3543,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2327,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"Create Temporary table SignUpOn AS
Select MemberSince , count(ProfileID) AS Signups
From Profiles
Group by MemberSince;",1.0,zz3543,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2328,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select m.m_first_name as name , ABS(log(m.count/f.count))as frequency from female_names f
INNER JOIN male_names m
WHERE f.f_first_name=m.m_first_name AND m.count+f.count>=50
ORDER BY ABS(log(m.count/f.count));",2.0,zz3543,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2329,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
SELECT DISTINCT first_name AS f_first_name, COUNT(*) AS count
FROM actors
WHERE first_name NOT LIKE '%.%'
AND first_name NOT LIKE '%(%'
AND first_name NOT LIKE '%)%'
AND gender = 'F'
GROUP BY f_first_name;

select e.name, e.count from eligible_names e
LEFT JOIN female_names f ON f.f_first_name=e.name 
WHERE f.count=e.count
ORDER BY f.count DESC;
",1.0,zz3543,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2330,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT DISTINCT first_name AS m_first_name, COUNT(*) AS count
FROM actors
WHERE first_name NOT LIKE '%.%'
AND first_name NOT LIKE '%(%'
AND first_name NOT LIKE '%)%'
AND gender = 'M'
GROUP BY m_first_name;

select e.name, e.count from eligible_names e 
LEFT JOIN male_names m ON m.m_first_name=e.name 
WHERE m.count=e.count
ORDER BY m.count DESC;",1.0,zz3543,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2331,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"Select * from actors;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name AS name, COUNT(*) AS count
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%' 
GROUP BY name
HAVING count >= 50;",1.0,zz3543,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2332,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(R.played_on) as min_played_on, MAX(R.played_on) as max_played_on
FROM track T
LEFT JOIN tracks_played R
ON T.artist_id = R.artist_id and T.album_id = R.album_id and T.track_id= R.track_id
GROUP BY T.artist_id, T.album_id, T.track_id;
",1.0,zz3543,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2333,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, R.artist_name, COUNT(album_id) as num_albums
FROM album A
LEFT JOIN artist R
ON A.artist_id = R.artist_id
GROUP BY A.artist_id;",1.0,zz3543,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2334,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT date(T.played_on) as date_played,T.artist_id,A.artist_name, COUNT(DISTINCT T.user_id) as users,SUM(R.time) as total_time, COUNT(T.user_id) as total_tracks
FROM tracks_played T
LEFT JOIN artist A
ON T.artist_id = A.artist_id
LEFT JOIN track R
ON T.artist_id = R.artist_id and T.album_id = R.album_id and T.track_id= R.track_id
GROUP BY date(T.played_on), T.artist_id
ORDER BY date(T.played_on);",1.0,zz3543,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2335,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(T.user_id) AS tracks_played, SUM(R.time)
FROM users U
LEFT JOIN tracks_played T
ON T.user_id = U.user_id
LEFT JOIN track R
ON T.artist_id = R.artist_id and T.album_id = R.album_id and T.track_id= R.track_id
GROUP BY user_id;
",1.0,zz3543,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2336,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id,album_id,COUNT(*) AS num_track, SUM(time) AS total_time
FROM track
GROUP BY artist_id,album_id
HAVING total_time > 60;",1.0,zz3543,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2337,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id,album_id,COUNT(*) AS num_track, SUM(time) AS total_time
FROM track
GROUP BY artist_id,album_id;",1.0,zz3543,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2338,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,zz3543,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2339,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) as avg_time, STDDEV(time) as std_time from track;",1.0,zz3543,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2340,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,SELECT DISTINCT COUNT(track_id) FROM track;,1.0,zz3543,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2341,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,SELECT DISTINCT COUNT(artist_id) FROM artist;,1.0,zz3543,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2342,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name from users U Left join tracks_played T ON U.user_id=T.user_id
where T.user_id is NULL
order By U.user_id;",1.0,zz3543,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2343,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select T.user_id, U.first_name, U.last_name,A.album_name,B.track_name, T.played_on from tracks_played T
Inner join users U
Inner join album A
Inner join track B
where T.user_id=U.user_id AND A.album_id=T.album_id And A.artist_id=T.artist_id AND T.artist_id=B.artist_id AND T.album_id=B.album_id AND T.track_id=B.track_id
Order BY T.user_id, T.played_on;",1.0,zz3543,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2344,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.track_id, T.track_name, T.artist_id, T.album_id, T.time from track T
Inner join album A
Inner Join artist R
where A.artist_id=R.artist_id and A.artist_id = T.artist_id and T.album_id = A.album_id and R.artist_name='The Stone Roses'
order by T.time;",1.0,zz3543,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2345,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, R.artist_name, A.album_name from track T
Inner join album A
Inner Join artist R
where A.artist_id=R.artist_id and A.artist_id = T.artist_id and T.album_id = A.album_id;",1.0,zz3543,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2346,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select T.track_id, T.track_name, A.artist_id, A.album_id,T.time  from track T
Inner Join album A ON
T.album_id=A.album_id AND T.artist_id=A.artist_id
where A.album_name = 'Second Coming';",1.0,zz3543,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2347,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select * from artist A
Inner join
album M ON A.artist_id=M.artist_id
where artist_name = 'New Order';",1.0,zz3543,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2348,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT * FROM track
WHERE track_name LIKE '%LOVE%';",1.0,zz3543,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2349,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT * FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id =5;

SELECT * FROM track
WHERE artist_id IN (1,3,5);",1.0,zz3543,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2350,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM album
WHERE album_name < 'S%' and album_name > 'E%';",1.0,zz3543,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2351,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * FROM track
WHERE track_name < 'M%';",1.0,zz3543,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2352,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,zz3543,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2353,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * from album
WHERE artist_id = 4;",1.0,zz3543,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2354,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,zz3543,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2355,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM artist
WHERE artist_id = 5;",1.0,zz3543,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2356,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT * FROM track
ORDER BY time
LIMIT 10;",1.0,zz3543,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2357,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name as album_title FROM album;",1.0,zz3543,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2358,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name FROM artist
ORDER BY artist_name;",1.0,zz3543,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2359,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,SELECT * FROM track;,1.0,zz3543,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2360,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,SELECT * FROM album;,1.0,zz3543,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2361,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"# I assume this question is only asking the command for Show all the artist.
# I will answer the rest questions in the following question spaces.



SELECT * FROM artist;",1.0,zz3543,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2369,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID  , COUNT(D.ProductID) AS numberofproducts    
 , COUNT(D.Quantity) AS quantityofunits     
, D.Quantity*D.UnitPrice AS orderprice 
FROM Orders O 
JOIN OrderDetails D ON D.OrderID = O.OrderID 
GROUP BY CustomerID 
ORDER BY orderprice>'10,000';
",6.0,kac7704,"-2pts ""for each order"" not ""for each customer""
-1 SUM(D.Quantity * D.UnitPrice)
-1 SUM(D.Quantity)&nbsp;
SELECT&nbsp;O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -2pts ""for each order"" not ""for each customer""
-1 SUM(D.Quantity * D.UnitPrice)
-1 SUM(D.Quantity)&nbsp;
SELECT&nbsp;O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
2370,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"USE northwind;
SELECT AVG(Freight) AS average_freight, ShipCountry
FROM Orders
GROUP BY ShipCountry
ORDER BY average_freight DESC
LIMIT 3;


Answer:
'184.78750000', 'Austria'
'145.01263158', 'Ireland'
'112.87942623', 'USA'
",7.5,kac7704,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2371,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"USE northwind;
SELECT O.CustomerID, COUNT(OrderID)
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY O.CustomerID;",8.0,kac7704,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2372,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"USE northwind;
SELECT OrderDate
FROM Orders
ORDER BY OrderDate ASC;


COULD ALSO USE:
SELECT MIN(OrderDate)
FROM Orders

Answer:'2014-07-04 08:00:00'
",7.5,kac7704,First query needs a LIMIT 1,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,The feedback from the TA was First query needs a LIMIT 1
2373,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"USE northwind;
SELECT ProductName, ProductID, CompanyName
FROM Products P
	JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY ProductID;",7.5,kac7704,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2374,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"USE northwind;
SELECT ProductName, ProductID
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,kac7704,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2375,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;
SELECT LastName, Firstname, Title, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,kac7704,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2376,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"USE northwind;
SELECT S.ShipperID, C.CompanyName
	, COUNT(DISTINCT O.ShippedDate)
    , COUNT(OrderID)
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
JOIN Shippers S ON C.CompanyName = S.CompanyName
GROUP BY S.ShipperID;",3.0,kac7704,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
2387,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"WITH CustomerSpendIn2016 AS (
    SELECT
        C.CustomerID,
        C.CompanyName,
        IFNULL(
            SUM(D.Quantity * D.UnitPrice),
            0
        ) AS total_price,
        IFNULL(
            SUM(D.Quantity * D.UnitPrice * D.Discount),
            0
        ) AS total_discount
    FROM Customers C
        LEFT JOIN Orders O
            ON C.CustomerID = O.CustomerID
            AND YEAR(OrderDate) = 2016
        LEFT JOIN OrderDetails D
            ON O.OrderID = D.OrderID
    GROUP BY C.CustomerID
    ORDER BY C.CustomerID
)
SELECT
    CS.*,
    (CASE
        WHEN (CS.total_price - CS.total_discount) BETWEEN 0 AND 1000
            THEN 'Low'
        WHEN (CS.total_price - CS.total_discount) BETWEEN 1000 AND 5000
            THEN 'Medium'
        WHEN (CS.total_price - CS.total_discount) > 5000
            THEN 'High'
        END
    ) AS spend_group
FROM CustomerSpendIn2016 CS;",10.0,cc5816,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2389,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT
    O.*,
    C.CustomerID,
    COUNT(D.ProductID) AS product_count,
    SUM(D.Quantity) AS total_units,
    SUM(D.Quantity * D.UnitPrice) AS total_order_price
FROM Orders O
    LEFT JOIN Customers C ON O.CustomerID = C.CustomerID
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_order_price > 10000
ORDER BY total_order_price DESC;",10.0,cc5816,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2390,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,cc5816,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2391,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.*, COUNT(O.OrderID)
FROM Customers C
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",10.0,cc5816,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2392,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
FROM Orders;",7.5,cc5816,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
2393,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
    LEFT JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY ProductID;",7.5,cc5816,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2394,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,cc5816,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2395,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative'
    AND Country = 'USA';",5.0,cc5816,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2396,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT
    S.ShipperID,
    S.CompanyName,
    COUNT(O.OrderID),
    COUNT(DISTINCT DATE(ShippedDate))
FROM Shippers S
    LEFT JOIN Orders O ON S.ShipperID = O.ShipVia
GROUP BY S.ShipperID;",7.5,cc5816,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
2407,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select a1.CustomerID,a1.CompanyName,a1.total_order_price as Total_Spent,
a1.total_discount_applied as Total_Discount, 
(a1.total_order_price - a1.total_discount_applied) as Total_After_Discount,
case 
when (a1.total_order_price - a1.total_discount_applied) between 0 and 1000 then ""Low""
when (a1.total_order_price - a1.total_discount_applied) between 1000 and 5000 then ""Medium""
when (a1.total_order_price - a1.total_discount_applied) > 5000 then ""High""
END as spending_group
FROM
(
select c.CustomerID,c.CompanyName, 
sum(od.Quantity * od.UnitPrice) as total_order_price,
sum(od.Quantity * od.UnitPrice * od.Discount) as total_discount_applied
from Customers c
LEFT OUTER JOIN Orders o ON c.CustomerID=o.CustomerID and year(o.OrderDate)='2016'
LEFT JOIN OrderDetails od ON o.OrderID=od.OrderID
group by c.CustomerID,c.CompanyName
order by c.CustomerID
)a1;",10.0,ss13871,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2408,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"select c.CustomerID,c.CompanyName, 
sum(od.Quantity * od.UnitPrice) as total_order_price,
sum(od.Quantity * od.UnitPrice * od.Discount) as total_discount_applied
from Customers c
LEFT OUTER JOIN Orders o ON c.CustomerID=o.CustomerID and year(o.OrderDate)='2016'
LEFT JOIN OrderDetails od ON o.OrderID=od.OrderID
group by c.CustomerID,c.CompanyName
order by c.CustomerID;",10.0,ss13871,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2409,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select o.orderID, o.CustomerID, count(od.productID) as num_of_products,
sum(od.Quantity) as total_units, sum( od.Quantity * od.UnitPrice) as total_order_price
from
Orders o
LEFT JOIN OrderDetails od on o.orderID=od.orderID
group by o.orderID, o.CustomerID
having total_order_price>10000
order by total_order_price desc;",7.5,ss13871,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2410,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, round(avg(Freight),2) as avg_freight
from Orders
group by ShipCountry
order by avg(Freight) desc
LIMIT 3;",7.5,ss13871,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2411,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select c.CustomerID, count(o.OrderID) as num_of_orders
from Customers c
LEFT JOIN
Orders o
ON c.CustomerID=o.CustomerID
group by c.CustomerID;",7.5,ss13871,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2412,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"#left join since we need for each product the corresponding supplier

select p.ProductID, p.ProductName, s.CompanyName
from Products p
LEFT JOIN Suppliers s
on p.SupplierID = s.SupplierID
order by p.ProductID;",5.0,ss13871,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2413,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select productID,productName 
from Products
where ProductName like '%queso%';",5.0,ss13871,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2414,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName,LastName,HireDate from Employees
where Title='Sales Representative'
and Country='USA';",5.0,ss13871,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2415,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"select distinct m.origin,m.dest
from m_ticket_prices m
JOIN m_airports m1 on m.origin=m1.airport
JOIN m_airports m2 on m.dest=m2.airport and m1.state_name=m2.state_name;


",7.0,ss13871,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2416,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"select count(m.origin),count(distinct m.carrier),sum(m.passengers),
avg(m.fare_per_mile),m1.state_name
from m_ticket_prices m
LEFT JOIN m_airports m1 on m.origin=m1.airport
GROUP BY m1.state_name;",7.5,ss13871,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2427,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select 
origin,dest,
min(fare) as cheapest_fare,
max(fare) as most_expensive_fare,
avg(fare) as avg_fare,
count(distinct carrier) as num_of_carriers,
sum(passengers) as total_num_passengers
from m_ticket_prices
group by origin,dest
having num_of_carriers>=3 and total_num_passengers>10000;",7.5,ss13871,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2435,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT DISTINCT a1.origin,a1.state_name,a1.national_rank,a1.state_rank,a1.total_passengers from
(
SELECT *, dense_rank() over w as national_rank, dense_rank() over w1 as state_rank
from
passengers_per_airport a
JOIN
m_airports b
on a.origin=b.airport
window w as (order by total_passengers desc),
	w1 as (partition by state_name order by total_passengers desc)
order by national_rank,state_rank
)a1;",4.0,ss13871,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2436,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT *, SUM(passengers) OVER (partition by origin) as total_passengers
FROM m_ticket_prices
order by total_passengers desc;",1.0,ss13871,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2437,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT 
m.*,
(m.SignUpsAsOf - m.InactiveAsOf) as Total_active_users
FROM
(
select a.*,
coalesce(b.InactiveAsOf,0) as InactiveAsOf
from
(select date(MemberSince) as MemberSince, 
sum(cnt) over (order by MemberSince) as SignUpsAsOf
from SignUpsOn
)a
LEFT JOIN
(
select date(inactive_since) as inactive_since, 
sum(cnt) over (order by inactive_since) as InactiveAsOf
from InactiveOn
)b
ON a.MemberSince=b.inactive_since
)m;",4.0,ss13871,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2438,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"select *, 
sum(cnt) over (order by inactive_since) as InactiveAsOf
from InactiveOn;",2.0,ss13871,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2439,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"select *, 
sum(cnt) over (order by MemberSince) as SingUpsAsOf
from SignUpsOn;",2.0,ss13871,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2440,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
	SELECT LastUpdate AS inactive_since, COUNT(ProfileID) AS cnt    
	FROM Profiles    
	GROUP BY LastUpdate    
	ORDER BY LastUpdate;",1.0,ss13871,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2441,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsOn AS
	SELECT MemberSince, COUNT(ProfileID) AS cnt    
	FROM Profiles    
	GROUP BY MemberSince    
	ORDER BY MemberSince;",1.0,ss13871,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2442,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"create temporary table common_eligible_names as
select count(first_name) as freq, first_name, gender
from eligible_names
where first_name in (select distinct f.first_name 
from
(select distinct first_name from female_names) f
INNER JOIN 
(select distinct first_name from male_names) m
on f.first_name=m.first_name)
group by first_name,gender
order by first_name,gender;


select t1.first_name, t1.male_freq,t1.female_freq, log(t1.male_freq/t1.female_freq) as amb
from 
(
select first_name,SUM( CASE WHEN gender='M' then freq else 0 END) as male_freq,
SUM( CASE WHEN gender='F' then freq else 0 END) as female_freq
from common_eligible_names
group by first_name
)t1
order by abs(amb);
",2.0,ss13871,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2443,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select first_name, count(first_name) as only_female_count
from female_names
where first_name not in ( select first_name from male_names)
group by first_name
order by count(first_name) desc;",1.0,ss13871,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2444,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table male_names as
	select id,first_name,last_name, gender 
    from eligible_names where gender='M';

create temporary table female_names as
	select id,first_name,last_name, gender 
    from eligible_names where gender='F';

select first_name, count(first_name) as only_male_count
from male_names
where first_name not in ( select first_name from female_names)
group by first_name
order by count(first_name) desc;
",1.0,ss13871,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2445,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as
	select id, first_name,last_name, gender from actors 
	where first_name in 
	(
		SELECT first_name
		from actors
		where first_name not like '%.%' and first_name not like '%(%)%'
		group by first_name
		having count(first_name)>=50
	);",0.9,ss13871,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2446,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.artist_id,t.album_id,t.track_id,t.track_name,
min(tp.played_on) as min_played_on, max(tp.played_on) as max_played_on 
from track t
left outer join tracks_played tp
on tp.track_id = t.track_id and tp.artist_id=t.artist_id and tp.album_id= t.album_id
group by t.artist_id,t.album_id,t.track_id;",1.0,ss13871,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2447,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select a.artist_id,a.artist_name, count(al.album_id) as num_albums
from artist a left join album al
on a.artist_id=al.artist_id
group by a.artist_id,a.artist_name;",1.0,ss13871,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2448,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(played_on) as date_played,a.artist_id,a.artist_name, count(distinct tp.user_id) as users,
sum(t.time) as total_time, count(tp.track_id) as total_tracks
from tracks_played tp
left join track t 
on tp.track_id = t.track_id and tp.artist_id=t.artist_id and tp.album_id= t.album_id
left join artist a on tp.artist_id=a.artist_id
group by date(played_on),a.artist_id,a.artist_name
order by date(played_on);",1.0,ss13871,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2449,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(t.track_id) as tracks_played, sum(tr.time) as total_time
from 
users u left join tracks_played t on u.user_id=t.user_id
left join track tr 
on tr.track_id = t.track_id and tr.artist_id=t.artist_id and tr.album_id= t.album_id
group by u.user_id
;",1.0,ss13871,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2450,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id,album_id,count(track_id) as numberOfTracks, sum(time) as totalLength
from track
group by artist_id,album_id
having totalLength > 60;",1.0,ss13871,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2451,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id,album_id,count(track_id) as numberOfTracks, sum(time) as totalLength
from track
group by artist_id,album_id;",1.0,ss13871,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2452,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_id) as cnt_albums from album
group by artist_id;",1.0,ss13871,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2453,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time
from track;",1.0,ss13871,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2454,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(distinct artist_id,album_id,track_id,track_name) as numberOfTracks from track;",1.0,ss13871,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2455,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(artist_id) as numberOfArtists from artist;,1.0,ss13871,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2456,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select u.first_name, u.last_name
from users u left outer join tracks_played tp on u.user_id=tp.user_id
where tp.user_id is NULL;",1.0,ss13871,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2457,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id, u.first_name, u.last_name, a.album_name, t.track_name, tp.played_on
from tracks_played tp INNER JOIN users u on u.user_id=tp.user_id
inner join track t on t.artist_id=tp.artist_id and t.album_id=tp.album_id and t.track_id=tp.track_id
inner join album a on a.artist_id=t.artist_id and a.album_id=t.album_id
order by u.user_id;",1.0,ss13871,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2458,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select t.track_id, t.track_name, t.artist_id, t.album_id, t.time 
from track t inner join artist a ON t.artist_id=a.artist_id
where a.artist_name=""The Stone Roses""
order by t.time;",1.0,ss13871,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2459,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name, a.artist_name, a1.album_name 
from track t inner join album a1 on t.artist_id=a1.artist_id and t.album_id=a1.album_id
inner join artist a on a.artist_id=a1.artist_id;",1.0,ss13871,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2460,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select t.track_id, t.track_name, t.artist_id, t.album_id, t.time
from track t inner join album a on a.album_id=t.album_id and a.artist_id=t.artist_id
where a.album_name=""Second Coming"";",1.0,ss13871,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2461,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select a1.artist_id, a1.artist_name, a.artist_id, a.album_id, a.album_name
from album a INNER JOIN artist a1 on a.artist_id=a1.artist_id
where a1.artist_name=""New Order"";",1.0,ss13871,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2472,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from track
where lower(track_name) like '%love%';",1.0,ss13871,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2473,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from track where artist_id in (1,3,5);


select * from track
where artist_id=1 or artist_id=3 or artist_id=5;",1.0,ss13871,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2474,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,select * from album where album_name between 'F' and 'S';,1.0,ss13871,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2475,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track 
where track_name < 'M';",1.0,ss13871,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2476,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * from track
where artist_id=3 and album_id=2;",1.0,ss13871,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2477,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,select * from album where artist_id=4;,1.0,ss13871,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2478,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,select * from artist where artist_name='The Rolling Stones';,1.0,ss13871,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2479,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,select * from artist where artist_id=5;,1.0,ss13871,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2480,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select track_id,track_name, artist_id, album_id, time 
from track
order by time 
limit 10;",1.0,ss13871,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2481,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title 
from album;",1.0,ss13871,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2482,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name 
from artist 
order by artist_name;",1.0,ss13871,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2483,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,ss13871,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2484,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,ss13871,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2485,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,select * from artist;,1.0,ss13871,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2521,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, TotalPrice, TotalDiscount,
  CASE 
    WHEN TotalPrice - TotalDiscount <= 1000 THEN 'Low'
    WHEN TotalPrice - TotalDiscount <= 5000 THEN 'Medium'
    ELSE 'High' 
    End 
FROM (
  SELECT O.orderDate, C.CustomerID, C.CompanyName, SUM(OD.Quantity*OD.UnitPrice) AS TotalPrice, SUM(OD.Quantity*OD.UnitPrice*OD.Discount) AS TotalDiscount
FROM Customers C
INNER JOIN Orders O
ON C.CustomerID = O.CustomerID
INNER JOIN OrderDetails OD
ON O.OrderID = OD.OrderID
WHERE YEAR(O.OrderDate) = 2016
GROUP BY O.orderDate, C.CustomerID, C.CompanyName
ORDER BY C.CustomerID;
) T;",5.0,efa230,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2523,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, COUNT(*) AS NumProducts, SUM(OD.Quantity) AS TotalUnits, SUM(OD.Quantity*OD.UnitPrice) AS TotalPrice
FROM Orders O
INNER JOIN OrderDetails OD
ON O.OrderID = OD.OrderID
GROUP BY O.CustomerID
HAVING TotalPrice > 10000
ORDER BY TotalPrice DESC;
",8.0,efa230,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
2524,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS AverageFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AverageFreight DESC
LIMIT 3;",7.5,efa230,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2525,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(*) AS NumOrders
FROM Customers C
INNER JOIN Orders O
ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",8.0,efa230,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2526,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate)
FROM Orders;",7.5,efa230,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
2527,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
INNER JOIN Suppliers S
ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",7.5,efa230,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2528,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,efa230,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2529,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative'
AND Country = 'USA';",5.0,efa230,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2530,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT s.ShipperID, s.CompanyName, COUNT(*) AS NumOrders, COUNT(DISTINCT o.ShippedDate) AS NumDays
FROM Shippers S
INNER JOIN Orders o
ON o.CustomerID = c.CustomerID
INNER JOIN Customers C
ON c.CompanyName = s.CompanyName
GROUP BY s.ShipperID, s.CompanyName;
",3.0,efa230,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
2568,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select customerID where = low, customer total_order_p
from Suppliers S
left join Shippers H on S.companyname = H.companyname
left join Products P on S.supplierid = P.supplierid
left join OrderDetails O on P.productid = O.productid
left join Orders R on O.orderid = R.orderid;",5.0,kjl9881,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
2570,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"Select D.orderID, O.customerId, count(quantity), sum(quantity), quantity*unitprice as total_order_price
from OrderDetails D
inner join Orders O on D.orderID = O.orderId
group by D.orderID, total_order_price
having total_order_price > 10000
order by total_order_price desc;",7.0,kjl9881,"Select D.orderID, O.customerId, count(quantity), sum(quantity), quantity*unitprice as total_order_price
from OrderDetails D
inner join Orders O on D.orderID = O.orderId
group by D.orderID, total_order_price
having total_order_price &gt; 10000
order by total_order_price desc;


SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was Select D.orderID, O.customerId, count(quantity), sum(quantity), quantity*unitprice as total_order_price
from OrderDetails D
inner join Orders O on D.orderID = O.orderId
group by D.orderID, total_order_price
having total_order_price &gt; 10000
order by total_order_price desc;


SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
2571,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select shipcountry, avg(freight)
from Orders
group by shipcountry
order by avg(freight) desc
limit 3;",7.5,kjl9881,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2572,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.customerid, count(orderID)
from Customers C
inner join Orders O on C.customerid = O.customerid
group by C.customerid;",8.0,kjl9881,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID"
2573,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"select orderdate
from Orders
where orderdate is not null
order by orderdate
limit 1;",7.5,kjl9881,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
2574,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select productid, productname, companyname
from Products P
inner join Suppliers S on P.supplierID = S.supplierid
order by productid asc;",7.5,kjl9881,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2575,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select productID, productname
from Products
where productname like '%queso%'",5.0,kjl9881,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2576,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;
select firstname, lastname, hiredate
from Employees;",2.5,kjl9881,"SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' ","SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,"The feedback from the TA was SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' "
2577,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"select shipperid, S.companyname, count(O.orderID)
from Suppliers S
left join Shippers H on S.companyname = H.companyname
left join Products P on S.supplierid = P.supplierid
left join OrderDetails O on P.productid = O.productid
left join Orders R on O.orderid = R.orderid
group by shipperID, S.companyname;",2.0,kjl9881,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
2588,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"DROP TABLE IF EXISTS temp;
CREATE TEMPORARY TABLE temp as
(
SELECT C.CustomerID, 
	      C. CompanyName, 
              O.OrderID, 
              OD.Quantity, 
              OD.UnitPrice,
              OD.Quantity * OD.UnitPrice AS Total_Price,  
              OD.UnitPrice * OD.Quantity * OD.Discount AS Total_discount, 
              YEAR(O.OrderDate) AS Year_of_purchase
FROM Customers C 
JOIN Orders O 
ON C.CustomerID = O.CustomerID
JOIN OrderDetails OD 
ON O.OrderID = OD.OrderID
);

SELECT CustomerID, 
	      CompanyName, 
              SUM(Total_Price) AS Total_Price, 
              SUM(total_discount) AS Total_discount, 
              SUM(Total_Price) - SUM(total_discount) AS Total_amount_spent,
CASE WHEN SUM(Total_Price) - SUM(total_discount) >=0 AND SUM(Total_Price) - SUM(total_discount) < 1000 THEN 'LOW'
	 WHEN SUM(Total_Price) - SUM(total_discount) >= 1000 AND SUM(Total_Price) - SUM(total_discount) < 5000 THEN 'MEDIUM'
     ELSE 'HIGH'
END AS Group1
F",10.0,pb2581,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2589,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"DROP TABLE IF EXISTS temp;
CREATE TEMPORARY TABLE temp as
(
SELECT C.CustomerID, 
	      C. CompanyName, 
              O.OrderID, 
              OD.Quantity, 
              OD.UnitPrice,
              OD.Quantity * OD.UnitPrice AS Total_Price,  
              OD.UnitPrice * OD.Quantity * OD.Discount AS Total_discount, 
              YEAR(O.OrderDate) AS Year_of_purchase
FROM Customers C 
LEFT JOIN Orders O 
ON C.CustomerID = O.CustomerID
LEFT JOIN OrderDetails OD 
ON O.OrderID = OD.OrderID
);

SELECT CustomerID, 
	      CompanyName, 
              SUM(Total_Price) AS Total_Price, 
              SUM(total_discount) AS Total_discount
FROM temp WHERE Year_of_purchase = 2016 OR Year_of_purchase = NULL
GROUP BY 1,2
ORDER BY 1;",10.0,pb2581,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2590,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"DROP TABLE IF EXISTS unit_calculation;
CREATE TEMPORARY TABLE unit_calculation as
(
SELECT C.CustomerID, 
	      O.OrderID, 
              OD.Quantity AS Unit_Order_Quantity, 
              OD.UnitPrice AS Unit_Order_Price, 
              OD.Quantity * OD.UnitPrice AS Unit_Quantity_Price
FROM Customers C 
JOIN Orders O 
ON C.CustomerID = O.CustomerID
JOIN OrderDetails OD 
ON O.OrderID = OD.OrderID
);

SELECT CustomerID, 
	      OrderId, 
              SUM(Unit_Order_Quantity) AS Total_Quantity, 
              SUM(Unit_Order_Price) AS Price_Total, 
              SUM(Unit_Quantity_Price) AS Total_Price
FROM unit_calculation
GROUP BY 1,2
HAVING Total_Price > 10000 
ORDER BY Total_Price DESC;",7.5,pb2581,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2591,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, ROUND(AVG(Freight), 2) AS average_freight_charges
FROM Orders 
GROUP BY 1 
ORDER BY 2 DESC
LIMIT 3;",7.5,pb2581,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2592,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(*) AS number_of_orders 
FROM Orders O 
RIGHT JOIN Customers C  
ON C.CustomerID = O.CustomerID 
GROUP BY 1;",7.5,pb2581,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2593,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductId, P.ProductName, S.CompanyName 
FROM Products P 
JOIN Suppliers S 
ON P.SupplierID = S.SupplierID 
ORDER BY 1;",5.0,pb2581,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2594,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductId, ProductName 
FROM Products 
WHERE ProductName LIKE '%queso%';",5.0,pb2581,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2595,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, 
              LastName, 
              HireDate 
FROM Employees 
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,pb2581,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2596,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"USE flights;
SELECT 
		DISTINCT TP.origin, 
		TP.dest AS destination, 
                A1.state_name AS state
FROM m_ticket_prices TP
JOIN m_airports A1 
ON TP.origin = A1.airport
JOIN m_airports A2 
ON TP.dest = A2.airport
WHERE A1.state = A2.state;",7.5,pb2581,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2597,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT A.state_name, 
	      COUNT(origin) AS num_of_origin_airports, 
	      COUNT(carrier) as num_of_carriers,
	      SUM(passengers) AS sum_of_passengers,
	      ROUND(AVG(fare_per_mile),3) AS average_fare_per_mile
FROM m_ticket_prices TP JOIN m_airports  A ON TP.origin = A.airport
GROUP BY 1;",7.5,pb2581,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2598,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT carrier, 
	      COUNT(*) AS num_of_routes, 
              COUNT(origin) as num_of_airports_flight_leaves_from, 
              ROUND(AVG(fare_per_mile),3) AS average_fare_per_mile
FROM m_ticket_prices 
GROUP BY 1
HAVING SUM(passengers) > 20000;",9.0,pb2581,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2609,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin,
              dest AS destination, 
              MIN(fare) AS cheapest_fare, 
              MAX(fare) AS most_expensive_fare, 
              AVG(fare) as average_fare, 
              COUNT(carrier) as number_of_carrier,
              SUM(passengers) as sum_of_passengers
FROM m_ticket_prices
GROUP BY 1,2
having number_of_carrier >= 3 AND sum_of_passengers > 10000;",7.5,pb2581,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2610,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT P.origin, 
       P.total_passengers,
       DENSE_RANK() OVER (ORDER BY P.total_passengers DESC) AS national_rank,
       DENSE_RANK() OVER (PARTITION BY A.state ORDER BY P.total_passengers DESC) AS state_rank
FROM passengers_per_airport AS P
JOIN m_airports AS A ON P.origin = A.airport;",4.0,pb2581,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2611,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"USE flights;
CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",1.0,pb2581,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2612,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT S.first_date, 
       S.signups_as_of - I.inactive_as_of AS total_active_users
FROM SignUpsAsOf S
LEFT JOIN InactiveAsOf I ON S.first_date = I.last_date;",4.0,pb2581,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2613,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT last_date, SUM(inactive) OVER (ORDER BY last_date) AS inactive_as_of
FROM InactiveOn;",2.0,pb2581,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2614,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsAsOf AS
SELECT first_date, SUM(signups) OVER (ORDER BY first_date) AS signups_as_of
FROM SignUpsOn;",2.0,pb2581,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2615,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT Date(LastUpdate) AS last_date, COUNT(*) AS Inactive
FROM Profiles
GROUP BY Date(LastUpdate)
ORDER BY Date(LastUpdate);",1.0,pb2581,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2616,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"USE facebook;
CREATE TEMPORARY TABLE SignUpsOn AS
SELECT Date(MemberSince) AS first_date, COUNT(*) AS SignUps
FROM Profiles
GROUP BY Date(MemberSince)
ORDER BY Date(MemberSince);",1.0,pb2581,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2617,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"# Ambiguity - Using tables used previously

# Creating eligible male names table

DROP TABLE IF EXISTS eligible_male_names;
CREATE TEMPORARY TABLE eligible_male_names AS
(
	SELECT first_name, COUNT(*) as cnt_male
        FROM actors  
        WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND gender = 'M'
        GROUP BY first_name
);

# Creating eligible female names table

DROP TABLE IF EXISTS eligible_female_names;
CREATE TEMPORARY TABLE eligible_female_names AS
(
	SELECT first_name, COUNT(*) as cnt_female
        FROM actors  
        WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND gender = 'F'
        GROUP BY first_name
);

#Calculating Ambiguity score and solution 

SELECT   EM.first_name, 
		EM.cnt_male AS male_freq, 
		EF.cnt_female AS female_freq,
		ABS(log(cnt_male/cnt_female)) AS amb_score
FROM eligible_names E 
JOIN
	eligible_male_names EM ON E.first_name = EM.first_name
JOIN 
	eligible_female_names EF on ",2.0,pb2581,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2618,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"# Creating eligible female names table to be used ahead

DROP TABLE IF EXISTS eligible_female_names;

CREATE TEMPORARY TABLE eligible_female_names AS
(
    SELECT first_name, COUNT(*) as cnt_female
    FROM actors  
    WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND gender = 'F'
    GROUP BY first_name
);

# Creating Female only eligible names table for solution

DROP TABLE IF EXISTS eligible_female_only;

CREATE TEMPORARY TABLE eligible_female_only AS
(
	SELECT EF.first_name, EF.cnt_female AS female_freq
        FROM eligible_female_names EF
        LEFT JOIN (	
				SELECT first_name 
				FROM actors where gender='M' 
                                GROUP BY 1
			  ) temp
	ON EF.first_name = temp.first_name
        WHERE temp.first_name IS NULL
        ORDER BY female_freq DESC
);

SELECT * FROM eligible_female_only;
",1.0,pb2581,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2619,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"# Creating eligible male names table to be used ahead

DROP TABLE IF EXISTS eligible_male_names;

CREATE TEMPORARY TABLE eligible_male_names AS
(
    SELECT first_name, COUNT(*) as cnt_male
    FROM actors  
    WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND gender = 'M'
    GROUP BY first_name
);

# Creating Male only eligible names table for solution

DROP TABLE IF EXISTS eligible_male_only;

CREATE TEMPORARY TABLE eligible_male_only AS
(
    SELECT EM.first_name, EM.cnt_male AS male_freq
    FROM eligible_male_names EM
    LEFT JOIN (	
				SELECT first_name 
				FROM actors where gender='F' 
                                GROUP BY 1
			  ) temp
    ON EM.first_name = temp.first_name
    WHERE temp.first_name IS NULL
    ORDER BY male_freq DESC
);

SELECT * FROM eligible_male_only;",1.0,pb2581,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2620,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;

# Creating eligible names table

DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
(
    SELECT first_name, COUNT(*) as cnt
    FROM actors
    WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
    GROUP BY 1
    HAVING cnt >= 50
);

SELECT * FROM eligible_names;",1.0,pb2581,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2621,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.artist_id, t.album_id, t.track_id, t.track_name, MIN(tp.played_on) AS min_played_on, MAX(played_on) AS max_played_on
FROM track t 
LEFT OUTER JOIN tracks_played tp ON t.artist_id = tp.artist_id AND t.album_id = tp.album_id AND t.track_id = tp.track_id
GROUP BY 1,2,3;",1.0,pb2581,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2622,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_id, a.artist_name, COUNT(al.album_name) AS num_albums
FROM artist a
JOIN album al ON a.artist_id = al.artist_id
GROUP BY 1;",1.0,pb2581,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2623,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(tp.played_on) AS date_played, a.artist_id, a.artist_name, COUNT(distinct user_id), SUM(t.time), COUNT(t.track_id)
FROM tracks_played tp 
JOIN track t ON tp.artist_id = t.artist_id AND tp.album_id = t.album_id AND tp.track_id = t.track_id
JOIN artist a ON tp.artist_id = a.artist_id AND t.artist_id = a.artist_id
GROUP BY 1,2;",1.0,pb2581,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2624,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, COUNT(t.track_id) AS tracks_played, SUM(t.time) AS total_time 
FROM users u 
LEFT JOIN tracks_played tp ON u.user_id = tp.user_id 
LEFT JOIN track t ON tp.track_id = t.track_id AND tp.artist_id = t.artist_id AND tp.album_id = t.album_id
GROUP BY u.user_id
ORDER BY u.user_id;",1.0,pb2581,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2625,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT a.album_id AS Album_ID, a.artist_id AS Artist_ID 
FROM track t INNER JOIN album a ON t.album_id = a.album_id AND t.artist_id = a.artist_id
GROUP BY a.album_id, a.artist_id
HAVING SUM(t.time) > 60;",1.0,pb2581,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2626,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT a.album_id AS Album_ID, a.artist_id AS Artist_ID, COUNT(t.track_id) as Count_tracks, SUM(t.time) AS Total_length 
FROM track t INNER JOIN album a ON t.album_id = a.album_id AND t.artist_id = a.artist_id
GROUP BY a.album_id, a.artist_id;",1.0,pb2581,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2627,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_name) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,pb2581,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2628,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, ROUND(STDDEV(time),6) AS std_time 
FROM track;",1.0,pb2581,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2629,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_name) AS track_count 
FROM track;",1.0,pb2581,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2630,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS cnt 
FROM artist;",1.0,pb2581,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2631,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name from users U 
LEFT JOIN tracks_played TP
ON U.user_id = TP.user_id 
WHERE TP.played_on IS NULL;",1.0,pb2581,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2632,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, AL.album_name, T.track_name, TP.played_on 
FROM tracks_played TP 
INNER JOIN users U ON TP.user_id = U.user_id 
INNER JOIN album AL ON TP.album_id = AL.album_id AND TP.artist_id = AL.artist_id 
INNER JOIN track T ON TP.track_id = T.track_id AND TP.artist_id = T.artist_id AND TP.album_id = T.album_id;",1.0,pb2581,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2633,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.* 
FROM track T INNER JOIN artist A ON T.artist_id = A.artist_id
WHERE A.artist_name = ""The Stone Roses""
ORDER BY time;",1.0,pb2581,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2634,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A.artist_name, AL.album_name
FROM track T INNER JOIN album AL ON T.artist_id = AL.artist_id AND T.album_id = AL.album_id 
INNER JOIN artist A ON A.artist_id = AL.artist_id;",1.0,pb2581,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2635,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.* FROM track T
INNER JOIN album AL ON T.artist_id = AL.artist_id AND T.album_id = AL.album_id 
WHERE AL.album_name = ""Second Coming"";",1.0,pb2581,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2636,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT * FROM album AL
INNER JOIN artist A ON AL.artist_id = A.artist_id
WHERE A.artist_name = ""New Order"";",1.0,pb2581,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2637,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT * FROM track WHERE track_name LIKE ""%Love%"";",1.0,pb2581,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2638,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Using OR Boolean condition - 
SELECT * FROM track WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

Using IN operation - 
SELECT * FROM track WHERE artist_id IN (1,3,5);",1.0,pb2581,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2639,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM album WHERE album_name > ""E"" AND album_name < ""S"" AND album_name NOT LIKE ""E%"";",1.0,pb2581,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2640,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * FROM track WHERE track_name BETWEEN ""A"" AND ""M"";",1.0,pb2581,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2641,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,SELECT * FROM track WHERE artist_id = 3 AND album_id = 2;,1.0,pb2581,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2642,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,SELECT * FROM album WHERE artist_id = 4;,1.0,pb2581,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2643,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist WHERE artist_name = ""The Rolling Stones"";",1.0,pb2581,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2644,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,SELECT * FROM artist WHERE artist_id = 5;,1.0,pb2581,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2645,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,SELECT * FROM track ORDER BY time LIMIT 10;,1.0,pb2581,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2646,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_id, album_name AS album_title FROM album;
",1.0,pb2581,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2647,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,SELECT artist_name FROM artist;,1.0,pb2581,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2648,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT * FROM tracks;
",1.0,pb2581,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2649,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT * FROM album;
",1.0,pb2581,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2650,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"Note - Executed  command before executing all the following queries.
SELECT * FROM artists;",1.0,pb2581,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2657,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE customer_price AS
SELECT C.CustomerID, 
C.CompanyName, SUM(OD.UnitPrice * OD.Quantity) AS total_price,  SUM(OD.UnitPrice * OD.Quantity * OD.Discount) AS discount FROM Customers AS C
LEFT OUTER JOIN Orders AS O
ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
LEFT OUTER JOIN OrderDetails AS OD
ON O.OrderID = OD.OrderID
GROUP BY C.CustomerID;

CREATE TEMPORARY TABLE customer_price2 AS
SELECT *, (total_price - discount) as price
FROM customer_price;

SELECT CustomerID, CompanyName, total_price AS Total_Spent, discount AS total_discount, price as total_after_discount,
CASE
	WHEN price > 0 AND price < 1000 THEN ""Low""
    WHEN price > 1000 AND price < 5000 THEN ""Medium""
    WHEN price > 5000 THEN ""High""
    ELSE ""HIGH""
END AS MyGroup
FROM customer_price2;
",8.0,ek3575,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2658,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT C.CustomerID, 
C.CompanyName, SUM(OD.UnitPrice * OD.Quantity) AS total_price,  SUM(OD.UnitPrice * OD.Quantity * OD.Discount) AS discount FROM Customers AS C
LEFT OUTER JOIN Orders AS O
ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
LEFT OUTER JOIN OrderDetails AS OD
ON O.OrderID = OD.OrderID
GROUP BY C.CustomerID;",10.0,ek3575,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2659,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, COUNT(*) AS no_of_products, SUM(OD.Quantity) AS total_units, SUM(OD.UnitPrice * OD.Quantity) AS order_price FROM Orders AS O
INNER JOIN OrderDetails AS OD
ON O.OrderID = OD.OrderID
GROUP BY O.OrderID
HAVING order_price > 10000
ORDER BY order_price DESC;",7.5,ek3575,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2660,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT shipCountry, AVG(Freight) AS avg_freight FROM Orders
GROUP BY shipCountry
ORDER BY avg_freight DESC
LIMIT 3;",7.5,ek3575,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2661,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.CustomerID) AS order_count FROM Customers AS C
LEFT JOIN Orders AS O
ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",7.5,ek3575,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2662,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName FROM Products AS P
INNER JOIN Suppliers AS S
ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",5.0,ek3575,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2663,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID , ProductName FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,ek3575,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2664,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate FROM Employees
WHERE Title IN(""Sales Representative"") AND Country IN (""USA"");",5.0,ek3575,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2665,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"CREATE TEMPORARY TABLE pair_table AS
SELECT mt.origin, mt.dest FROM m_ticket_prices AS mt
GROUP BY mt.origin, mt.dest;

CREATE TEMPORARY TABLE pair_table2 AS
SELECT PT.*, MA.state AS origin_state FROM pair_table as PT 
INNER JOIN m_airports AS MA
ON PT.origin = MA.airport;

CREATE TEMPORARY TABLE pair_table4 AS
SELECT PT.*, MA.state AS dest_state FROM pair_table2 as PT 
INNER JOIN m_airports AS MA
ON PT.dest = MA.airport;

CREATE TEMPORARY TABLE pair_table AS
SELECT mt.origin, mt.dest FROM m_ticket_prices AS mt
GROUP BY mt.origin, mt.dest;

CREATE TEMPORARY TABLE pair_table2 AS
SELECT PT.*, MA.state AS origin_state FROM pair_table as PT 
INNER JOIN m_airports AS MA
ON PT.origin = MA.airport;

CREATE TEMPORARY TABLE pair_table4 AS
SELECT PT.*, MA.state AS dest_state FROM pair_table2 as PT 
INNER JOIN m_airports AS MA
ON PT.dest = MA.airport;

SELECT * FROM pair_table4
WHERE origin_state = dest_state;",7.5,ek3575,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2666,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT MA.state, COUNT(*) AS no_of_origin_airport, 
	COUNT(DISTINCT carrier) AS total_carrier,
    SUM(passengers) AS total_passengers,
    AVG(fare_per_mile) as avg_fare_per_mile FROM m_ticket_prices AS MT
INNER JOIN m_airports AS MA
ON MT.origin = MA.airport
GROUP BY MA.state;",7.5,ek3575,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2667,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT COUNT(*) AS total_routes, COUNT(DISTINCT origin) AS uniq_origin, AVG(fare_per_mile) AS avg_fare_per_mile, SUM(passengers) AS total_passengers FROM m_ticket_prices
GROUP BY carrier
HAVING total_passengers > 20000;",10.0,ek3575,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2678,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT MIN(fare) AS cheapest_fare, MAX(fare) AS exp_fare, AVG(fare) AS avg_fare, SUM(passengers) AS total_passengers, COUNT(*) AS no_of_carriers 
FROM m_ticket_prices
GROUP BY origin, dest
HAVING no_of_carriers >= 3 AND total_passengers > 10000;",7.5,ek3575,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2679,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT S.airport, P.total_passengers,
	RANK() OVER(PARTITION BY S.state ORDER BY P.total_passengers DESC) AS state_rank,
	RANK() OVER(ORDER BY P.total_passengers DESC) AS national_rank
FROM m_airports AS S 
INNER JOIN passengers_per_airport AS P 
ON S.airport = P.origin;",4.0,ek3575,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2680,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"
CREATE TEMPORARY TABLE passengers_per_airport AS 
	SELECT origin, SUM(passengers) AS total_passengers FROM m_ticket_prices
	GROUP BY origin;",1.0,ek3575,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2681,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT S.date_of_signup AS curren_date, S.total_signups - I.total_inactive AS active_users
FROM SingUpsAsOf AS S 
INNER JOIN InactiveAsOf AS I 
ON S.date_of_signup = I.date_of_inactive;",4.0,ek3575,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2682,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE InactiveAsOf AS 
	SELECT *, SUM(total_inactive) OVER(ORDER BY date_of_inactive) AS cumulative_sum 
    FROM InactiveOn;",2.0,ek3575,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2683,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE SingUpsAsOf AS 
	SELECT *, SUM(total_signups) OVER(ORDER BY date_of_signup) AS cumulative_sum 
    FROM SignUpsOn;",2.0,ek3575,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2684,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS 
	SELECT DATE(LastUpdate) as date_of_inactive, COUNT(*) AS total_inactive 
	FROM Profiles
    WHERE LastUpdate IS NOT NULL
	GROUP BY DATE(LastUpdate);",1.0,ek3575,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2685,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsOn AS
	SELECT DATE(MemberSince) as date_of_signup, COUNT(*) AS total_signups 
	FROM Profiles
	GROUP BY DATE(MemberSince);",1.0,ek3575,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2686,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT M.first_name AS common_name, M.name_count AS male_count, F.name_count AS female_count, ABS(LOG(M.name_count / F.name_count)) AS rank_number
FROM eligible_names AS E
INNER JOIN male_names AS M
ON E.first_name = M.first_name
INNER JOIN female_names AS F
ON F.first_name = M.first_name
ORDER BY rank_number;",2.0,ek3575,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2687,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT * FROM eligible_names WHERE first_name IN (SELECT first_name FROM female_names) AND first_name NOT IN (SELECT first_name FROM male_names)
ORDER BY name_count DESC;


# Creating female_only temp table
CREATE TEMPORARY TABLE female_only AS
	SELECT * FROM eligible_names WHERE first_name IN (SELECT first_name FROM female_names) AND first_name NOT IN (SELECT first_name FROM male_names)
	ORDER BY name_count DESC;",1.0,ek3575,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2688,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
	SELECT gender, first_name, COUNT(*) AS name_count FROM actors
	GROUP BY first_name, gender
	HAVING gender IN (""M"")
	ORDER BY first_name;

CREATE TEMPORARY TABLE female_names AS
	SELECT gender, first_name, COUNT(*) AS name_count FROM actors
	GROUP BY first_name, gender
	HAVING gender IN (""F"")
	ORDER BY first_name;

SELECT * FROM eligible_names WHERE first_name IN (SELECT first_name FROM male_names) AND first_name NOT IN (SELECT first_name FROM female_names)
ORDER BY name_count DESC;

# Creating male_only temp table
CREATE TEMPORARY TABLE male_only AS
	SELECT * FROM eligible_names WHERE first_name IN (SELECT first_name FROM male_names) AND first_name NOT IN (SELECT first_name FROM female_names)
	ORDER BY name_count DESC;",1.0,ek3575,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2689,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name, COUNT(*) AS name_count FROM actors WHERE id NOT IN (SELECT id FROM actors WHERE first_name LIKE ""%.%"" OR first_name LIKE ""%(%"" OR first_name LIKE ""%)%"")
	GROUP BY first_name
	HAVING name_count >= 50
	ORDER BY first_name;",1.0,ek3575,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2690,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on FROM track AS T
LEFT JOIN tracks_played AS TP
ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
GROUP BY T.artist_id, T.album_id, T.track_id;",1.0,ek3575,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2691,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name, COUNT(*) AS num_albums FROM artist AS A
INNER JOIN album AS AL
ON A.artist_id = AL.artist_id
GROUP BY A.artist_id;",1.0,ek3575,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2692,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT CAST(TP.played_on AS DATE) AS date_played, A.artist_id, A.artist_name , COUNT(DISTINCT TP.user_id) AS users, SUM(T.time) AS total_time, count(*) AS total_track
FROM tracks_played AS TP
INNER JOIN artist AS A
ON A.artist_id = TP.artist_ID
INNER JOIN track AS T
ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
GROUP BY date_played, A.artist_id
ORDER BY date_played;",1.0,ek3575,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2693,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, count(TP.user_id) AS tracks_played, SUM(time) AS total_time FROM users AS U
LEFT JOIN tracks_played AS TP
ON U.user_id = TP.user_id
LEFT JOIN track AS T
ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
GROUP BY U.user_id;",1.0,ek3575,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2694,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM track 
GROUP BY artist_id, album_id
HAVING total_time > 60;",1.0,ek3575,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2695,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id, album_id, count(*) AS total_tracks, SUM(time) AS total_time
FROM track 
GROUP BY artist_id, album_id;",1.0,ek3575,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2696,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, count(*) 
FROM album
GROUP BY artist_id;",1.0,ek3575,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2697,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time), STDDEV(time) FROM track;",1.0,ek3575,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2698,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,SELECT COUNT(track_id) FROM track;,1.0,ek3575,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2699,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,SELECT COUNT(artist_id) FROM artist;,1.0,ek3575,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2700,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name FROM users as U
LEFT JOIN tracks_played AS TP
ON U.user_id = TP.user_id
WHERE TP.user_id IS NULL;",1.0,ek3575,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2701,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.first_name, U.last_name, TP.user_id, AL.album_name, T.track_name, TP.played_on FROM tracks_played as TP
INNER JOIN users AS U
ON U.user_id = TP.user_id
INNER JOIN track AS T
ON T.track_id = TP.track_id AND T.artist_id = TP.artist_id AND T.album_id = TP.album_id
INNER JOIN album as AL
ON AL.artist_id = TP.artist_id AND AL.album_id = TP.album_id;",1.0,ek3575,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2702,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, A.artist_id, T.album_id, T.time FROM track AS T
INNER JOIN artist AS A
ON T.artist_id = A.artist_id
WHERE artist_name = ""The Stone Roses""
ORDER BY time;
",1.0,ek3575,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2703,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, AL.album_name, A.artist_name
FROM track AS T
INNER JOIN album AS AL
ON AL.artist_id = T.artist_id AND AL.album_id = T.album_id
INNER JOIN artist AS A
ON AL.artist_id = A.artist_id;",1.0,ek3575,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2704,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT * FROM album as A
INNER JOIN track as T
ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE album_name = ""Second Coming"";",1.0,ek3575,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2705,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT AL.album_name
FROM artist as A 
INNER JOIN album as AL 
ON A.artist_id = AL.artist_id
WHERE A.artist_name = ""New Order"";",1.0,ek3575,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2729,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT * from track WHERE track_name LIKE ""%love%"";
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2730,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT * FROM track WHERE artist_id=1 OR artist_id=3 or artist_id=5;
SELECT * FROM track WHERE artist_id IN (1, 3, 5);",1.0,ek3575,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2731,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM album where album_name >= ""F"" AND album_name < ""S"";
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2732,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * FROM track WHERE track_name < ""M"";
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2733,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * FROM track WHERE artist_id=3 AND album_id=2;
",1.0,ek3575,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2734,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * FROM album WHERE artist_id=4;
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2735,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist WHERE artist_name in (""The Rolling Stones"");
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2736,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM artist WHERE artist_id=5;
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2743,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT * FROM track ORDER BY time LIMIT 10;
",1.0,ek3575,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2744,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_name as album_title, artist_id FROM album;
",1.0,ek3575,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2745,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name from artist ORDER BY artist_name;
",1.0,ek3575,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2746,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT * FROM tracks;
",1.0,ek3575,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2747,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT * FROM album;
",1.0,ek3575,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2748,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"SELECT * FROM artist;
",1.0,ek3575,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2761,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"create temporary table Calculated_priced as(
 select OD.OrderID,OD.ProductID,count(OD.ProductID)*OD.UnitPrice*OD.Quantity as Total_Price,
 (count(OD.ProductID)*OD.UnitPrice*OD.Quantity*OD.Discount) as Total_Discount,
 count(OD.ProductID)*OD.UnitPrice*OD.Quantity - (count(OD.ProductID)*OD.UnitPrice*OD.Quantity*OD.Discount) as spent 
 from OrderDetails OD 
 group by OD.OrderID,OD.ProductID,OD.UnitPrice,OD.Quantity,OD.Discount
);
select O.CustomerID,sum(CP.Total_Price),sum(Total_Discount),sum(spent),YEAR(O.OrderDate),
CASE
    WHEN sum(spent)<1000 THEN 'LOW'
    WHEN sum(spent)<5000 THEN 'MEDIUM'
    ELSE 'HIGH'
end as Category
from Calculated_priced CP
left outer join Orders O on CP.OrderID=O.OrderID
where YEAR(O.OrderDate)=2016 
group by O.CustomerID,YEAR(O.OrderDate);",10.0,hp2307,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2762,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"create temporary table Calculated_price as(
 select OD.OrderID,OD.ProductID,count(OD.ProductID)*OD.UnitPrice*OD.Quantity as Total_Price,
 (count(OD.ProductID)*OD.UnitPrice*OD.Quantity*OD.Discount) as Total_Discount
 from OrderDetails OD 
 group by OD.OrderID,OD.ProductID,OD.UnitPrice,OD.Quantity,OD.Discount
);
select O.CustomerID,sum(CP.Total_Price),sum(Total_Discount),YEAR(O.OrderDate)
from Calculated_price CP
left outer join Orders O on CP.OrderID=O.OrderID
where YEAR(O.OrderDate)=2016 
group by O.CustomerID,YEAR(O.OrderDate);",10.0,hp2307,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2763,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"create temporary table Calculated_p as(
 select OD.OrderID,OD.ProductID,count(OD.ProductID)*OD.UnitPrice*OD.Quantity as Total
 from OrderDetails OD 
 group by OD.OrderID,OD.ProductID,OD.UnitPrice,OD.Quantity
);
select Calculated_p.OrderID,O.CustomerID,sum(Total)
from Calculated_p
left join Orders O on Calculated_p.OrderID=O.OrderID
group by Calculated_p.OrderID
having sum(Total)>10000
order by sum(Total) desc;",7.5,hp2307,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2764,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry,avg(Freight)
from Orders
group by ShipCountry
order by avg(Freight) desc
limit 3;",7.5,hp2307,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2765,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.CustomerID,C.ContactName,count(*) as Number_of_Orders
from Orders O
left join Customers C on O.CustomerID=C.CustomerID
group by O.CustomerID,C.ContactName;",7.5,hp2307,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2766,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select P.ProductID,P.ProductName,S.CompanyName
from Products P
left join Suppliers S on P.SupplierID=S.SupplierID;",5.0,hp2307,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2767,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductId,ProductName
from Products
where ProductName like ""%queso%"";",5.0,hp2307,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2768,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName,LastName,HireDate
from Employees
where Title=""Sales Representative"" and Country=""USA"";",5.0,hp2307,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2769,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT DISTINCT ma.airport AS origin, ma2.airport AS dest, ma.state AS state
FROM flights.m_ticket_prices tp
JOIN m_airports ma ON tp.origin = ma.airport
JOIN m_airports ma2 ON tp.dest = ma2.airport AND ma.state = ma2.state;",7.5,hp2307,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2770,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT a.state,
       COUNT(DISTINCT tp.origin) AS num_origin_airports,
       COUNT(DISTINCT tp.carrier) AS num_carriers,
       SUM(tp.passengers) AS total_passengers,
       AVG(tp.fare / tp.distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices tp
JOIN m_airports a ON tp.origin = a.airport
GROUP BY a.state;",7.5,hp2307,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2771,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT carrier,
       COUNT(DISTINCT CONCAT(origin, '-', dest)) AS num_routes,
       COUNT(DISTINCT origin) AS num_airports,
       AVG(fare / distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers) > 20000;",10.0,hp2307,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2782,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT 
    origin, 
    dest, 
    MIN(fare) AS cheapest_fare, 
    MAX(fare) AS most_expensive_fare, 
    AVG(fare) AS average_fare, 
    COUNT(DISTINCT carrier) AS num_carriers, 
    SUM(passengers) AS total_passengers
FROM 
    m_ticket_prices
GROUP BY 
    origin, dest
HAVING 
    COUNT(DISTINCT carrier) >= 3 
    AND SUM(passengers) > 10000;",7.5,hp2307,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2783,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT P.origin,M.state,P.pp_airport,
                    RANK() OVER (ORDER BY P.pp_airport DESC) AS National_rank,
                    RANK() OVER (PARTITION BY M.state
                    ORDER BY P.pp_airport DESC
                    ) AS State_rank
FROM passengers_per_airport P 
LEFT JOIN m_airports M ON M.airport=P.origin;",4.0,hp2307,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2784,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"create temporary table passengers_per_airport as (
select origin,sum(passengers) as pp_airport
from m_ticket_prices
group by origin);

select *
from passengers_per_airport;",1.0,hp2307,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2785,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"create temporary table  SingUpsAsOf as (
SELECT 
    MemberSince, 
    sum(c) over 
    (order by MemberSince 
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) as SingUpsAsOf
FROM SignUpsOn);

create temporary table  InactiveAsOf as (
SELECT 
    LastUpdate, 
    sum(c) over 
    (order by LastUpdate 
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) as InactiveAsOf
FROM InactiveOn);

select S.MemberSince, IFNULL(S.SingUpsAsOf,0) - IFNULL(I.InactiveAsOf,0) as Total_active_users
from SingUpsAsOf S left join InactiveAsOf I on S.MemberSince=I.LastUpdate
order by S.MemberSince;",4.0,hp2307,"sum(c) happens to be the error here. Not sure how this ran on your workbench without declaring the row title.
<quillbot-extension-portal></quillbot-extension-portal>","WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,"The feedback from the TA was sum(c) happens to be the error here. Not sure how this ran on your workbench without declaring the row title.
<quillbot-extension-portal></quillbot-extension-portal>"
2786,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"SELECT 
    LastUpdate, 
    sum(c) over 
    (order by LastUpdate 
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) as Running_Total_Users
FROM InactiveOn;",2.0,hp2307,"sum(c) happens to be the error here. Not sure how this ran on your workbench without declaring the row title.
<quillbot-extension-portal></quillbot-extension-portal>","&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,"The feedback from the TA was sum(c) happens to be the error here. Not sure how this ran on your workbench without declaring the row title.
<quillbot-extension-portal></quillbot-extension-portal>"
2787,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"SELECT 
    MemberSince, 
    sum(c) over 
    (order by MemberSince 
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) as Running_Total_Users
FROM SignUpsOn;",2.0,hp2307,"sum(c) happens to be the error here. Not sure how this ran on your workbench without declaring the row title.
<quillbot-extension-portal></quillbot-extension-portal>","&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,"The feedback from the TA was sum(c) happens to be the error here. Not sure how this ran on your workbench without declaring the row title.
<quillbot-extension-portal></quillbot-extension-portal>"
2788,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"create temporary table InactiveOn as (
select LastUpdate,count(*)
from Profiles
group by LastUpdate);

select *
from InactiveOn;",1.0,hp2307,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2789,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"create temporary table SignUpsOn as (
select MemberSince,count(*)
from Profiles
group by MemberSince);",1.0,hp2307,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2790,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT 
    mn.first_name,
    ABS(LOG(mn.male_count / fn.female_count))
FROM
    eligible_names en
        JOIN
    male_names mn ON en.first_name = mn.first_name
        JOIN
    female_names fn ON mn.first_name = fn.first_name
order by ABS(LOG(mn.male_count / fn.female_count));",2.0,hp2307,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2791,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT 
    en.first_name, en.c AS Total
FROM
    eligible_names en
        LEFT JOIN
    female_names fn ON en.first_name = fn.first_name
WHERE
    fn.first_name NOT IN (SELECT 
            *
        FROM
            male_names);",1.0,hp2307,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2792,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table male_names as (
				select first_name
				from actors 
				where gender='M'
				group by first_name);

create temporary table female_names as (
				select first_name
				from actors 
				where gender='F'
				group by first_name);

SELECT 
    en.first_name, en.c AS Total
FROM
    eligible_names en
        LEFT JOIN
    male_names mn ON en.first_name = mn.first_name
WHERE
    mn.first_name NOT IN (SELECT 
            *
        FROM
            female_names);",1.0,hp2307,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2793,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names (
select first_name,count(*) as c
from actors
where   first_name not in  (select first_name 
                            from actors 
							where first_name like ""%(%)%"" or first_name like ""%.%"")
group by first_name
having count(first_name)>=50);
SELECT 
    *
FROM
    eligible_names;",1.0,hp2307,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2794,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select TP.artist_id,TP.album_id,TP.track_id,track_name,
       min(played_on) as min_played_on, 
       max(played_on) as max_played_on
from tracks_played TP
left join track T on TP.track_id=T.track_id and TP.album_id=T.album_id and TP.artist_id=T.artist_id
group by TP.artist_id,TP.album_id,TP.track_id,track_name;",1.0,hp2307,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2795,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select Ar.artist_id,Ar.artist_name,count(*) as num_albums
from album A 
left join artist Ar on A.artist_id=Ar.artist_id
group by Ar.artist_id,Ar.artist_name;",1.0,hp2307,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2796,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select DATE(TP.played_on) as date_played,Ar.artist_id,Ar.artist_name,
      count(distinct(TP.user_id)) as Users ,sum(T.time) as Total_time,
      count(TP.user_id) as total_tracks
from tracks_played TP
left join track T on TP.track_id=T.track_id and TP.album_id=T.album_id and TP.artist_id=T.artist_id
left join album A on A.album_id=TP.album_id and A.artist_id=TP.artist_id
left join artist Ar on Ar.artist_id=TP.artist_id
group by DATE(TP.played_on),Ar.artist_id,Ar.artist_name;",1.0,hp2307,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2797,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select users.user_id,count(TP.track_id) as tracks_played,sum(T.time) as total_time
from users 
left join tracks_played TP on users.user_id=TP.user_id
left join track T on TP.track_id=T.track_id and TP.album_id=T.album_id and TP.artist_id=T.artist_id
group by users.user_id;",1.0,hp2307,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2798,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id,sum(time) as total_length
from track
group by album_id,artist_id
having sum(time)>60;",1.0,hp2307,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2799,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id,artist_id,count(*) as No_of_Tracks,sum(time) as total_length
from track
group by album_id,artist_id;",1.0,hp2307,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2800,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id,count(*) as cnt_albums
from album
group by artist_id;",1.0,hp2307,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2801,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time),stddev(time)
from track;",1.0,hp2307,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2802,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(*)
from track;",1.0,hp2307,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2803,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(*)
from artist;",1.0,hp2307,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2804,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name,U.last_name 
from users U
LEFT JOIN tracks_played TP on U.user_id=TP.user_id
WHERE TP.user_id IS NULL; ",1.0,hp2307,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2805,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.user_id,U.first_name,U.last_name,A.album_name,T.track_name,TP.played_on
from tracks_played TP
join  users U on TP.user_id=U.user_id
join track T on T.track_id=TP.track_id
join album A on A.album_id=T.album_id
where TP.artist_id=T.artist_id and TP.album_id=T.album_id and A.artist_id=TP.artist_id 
order by U.user_id;",1.0,hp2307,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2806,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.track_id,T.track_name,A.artist_id,T.album_id,T.time
from artist A join track T on A.artist_id=T.artist_id
where artist_name=""The Stone Roses""
order by T.time;
",1.0,hp2307,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2807,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name,A.artist_name,Al.album_name
from track T
join artist A on A.artist_id=T.artist_id
join album Al on T.album_id=Al.album_id
where A.artist_id=Al.artist_id;",1.0,hp2307,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2808,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select T.track_id,T.track_name,A.artist_id,A.album_id,time
from track T  
join album A on T.album_id=A.album_id
where A.album_name=""Second Coming"" and T.artist_id=5;",1.0,hp2307,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2809,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist as Ar 
join album as Al on Ar.artist_id=Al.artist_id
where Ar.artist_name=""New Order"";",1.0,hp2307,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2810,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name like '%love%';",1.0,hp2307,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2811,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Using OR :-

select *
from track
where artist_id=1 or artist_id=3 or artist_id=5;

Using IN :-

select *
from track
where artist_id in (1,3,5);",1.0,hp2307,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2812,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
from album
where album_name not like 'E%' and album_name>'E' and album_name<'S';",1.0,hp2307,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2813,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name<'M';",1.0,hp2307,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2814,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from track
where artist_id=3 and album_id=2;",1.0,hp2307,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2815,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id=4;",1.0,hp2307,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2816,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name=""The Rolling Stones"";",1.0,hp2307,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2817,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select *
from artist
where artist_id=5;",1.0,hp2307,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2818,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select *
from track
order by time
limit 10;",1.0,hp2307,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2819,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id,album_name as album_title
from album;",1.0,hp2307,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2820,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question," select artist_name 
 from artist
 order by artist_name;",1.0,hp2307,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2821,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,hp2307,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2822,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,hp2307,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2823,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,select * from artist;,1.0,hp2307,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2842,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"with ca as (
select c.CustomerID, c.CompanyName
,sum(od.Quantity * od.UnitPrice) as total_order_price
,sum(od.Quantity * od.UnitPrice * od.Discount) as total_discount
from Customers c left join Orders o on c.CustomerID = o.CustomerID and year(o.OrderDate) = 2016
left join OrderDetails od on o.OrderID = od.OrderID
group by c.CustomerID)
select *,
case
when total_after_discount > 0 and total_after_discount < 1000 then 'Low'
when total_after_discount >= 1000 and total_after_discount < 5000 then 'Medium'
when total_after_discount >= 5000 then 'High'
end as customer_group
from (select * , total_order_price - total_discount as total_after_discount from ca) x;",10.0,sv2230,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2843,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"select c.CustomerID, c.CompanyName
,sum(od.Quantity * od.UnitPrice) as total_order_price
,sum(od.Quantity * od.UnitPrice * od.Discount) as total_discount
from Customers c left join Orders o on c.CustomerID = o.CustomerID and year(o.OrderDate) = 2016
left join OrderDetails od on o.OrderID = od.OrderID
group by c.CustomerID
order by c.CustomerID;",10.0,sv2230,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2844,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select o.OrderID, o.CustomerID
,count(*) as no_of_products, sum(od.Quantity) as total_units
,sum(od.Quantity * od.UnitPrice) as total_order_price
from Orders o join OrderDetails od on o.OrderID = od.OrderID
group by o.OrderID
having total_order_price > 10000
order by total_order_price desc;",7.5,sv2230,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2845,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, round(avg(Freight),2) as average
from Orders
group by ShipCountry
order by average desc
limit 3;",7.5,sv2230,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2846,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select c.CustomerID, count(*) as cnt
from Customers c left join Orders o on o.CustomerID = c.CustomerID
group by c.CustomerID;",7.5,sv2230,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2847,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select p.ProductID, p.ProductName, s.CompanyName
from Products p join Suppliers s on p.SupplierID = s.SupplierID
order by p.ProductID;",5.0,sv2230,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2848,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
from Products
where ProductName like '%queso%';",5.0,sv2230,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2849,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate
from Employees
where Country = 'USA' and Title = 'Sales Representative';",5.0,sv2230,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2850,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"select *
from m_ticket_prices mp join m_airports ma on mp.origin = ma.airport;",2.0,sv2230,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2851,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"select ma.state
,count(distinct mp.origin) as no_of_origin_aiports_in_state
,count(mp.carrier) as no_of_carrier
,sum(mp.passengers) as total_passengers
,avg(fare_per_mile) as avg_fare_per_mile
from m_ticket_prices mp join m_airports ma on mp.origin = ma.airport
group by ma.state;",7.0,sv2230,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2852,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"select carrier
,count(*) as no_of_routes
, count(distinct origin) as no_of_airports
,avg(fare_per_mile) as avg_fare_per_mile
from m_ticket_prices
group by carrier
having sum(passengers) > 20000;",10.0,sv2230,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2863,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select origin,dest
, min(fare) as cheapest_fare
, max(fare) as max_fare
, avg(fare) as avg_fare
, count(carrier) as no_of_carrier
, sum(passengers) as total_passengers
from m_ticket_prices
group by origin, dest
having no_of_carrier >= 3 and total_passengers > 10000;",7.5,sv2230,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2864,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select * , rank() over w_n as national_rank, rank() over w_s as state_rank
from (select * from passengers_per_airport ppa join m_airports a on ppa.origin = a.airport) x
window w_n as (order by x.total_passengers desc),
w_s as (partition by x.state order by x.total_passengers desc)
order by x.origin;",4.0,sv2230,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2865,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"create temporary table passengers_per_airport as
select origin, sum(passengers) as total_passengers
from m_ticket_prices
group by origin
order by origin;",1.0,sv2230,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2866,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"select *, x.sign_rolling_sum - x.inactive_rolling_sum as total_active
from (select * 
from SignUpsAsOf s 
join InactiveAsOf i on s.sign_date = i.inactive_date 
order by s.sign_date) x
order by x.sign_date;",4.0,sv2230,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2867,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"create temporary table InactiveAsOf as 
select *, sum(i_cnt) over w as inactive_rolling_sum
from InactiveOn
window w as (order by inactive_date);",2.0,sv2230,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2868,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"create temporary table SignUpsAsOf as
select *, sum(s_cnt) over w as sign_rolling_sum
from SignUpsOn
window w as (order by sign_date);",2.0,sv2230,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2869,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"create temporary table InactiveOn as
select date(LastUpdate) as inactive_date, count(*) as i_cnt
from Profiles
group by date(LastUpdate)
order by date(LastUpdate);",1.0,sv2230,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2870,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"create temporary table SignUpsOn as
select date(MemberSince) as sign_date, count(*) as s_cnt
from Profiles
group by date(MemberSince)
order by date(MemberSince);",1.0,sv2230,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2871,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"create temporary table male_count as
select first_name, count(*) as cnt
from male_names
where first_name in (select first_name from eligible_names)
group by first_name;

create temporary table female_count as
select first_name, count(*) as cnt
from female_names
where first_name in (select first_name from eligible_names)
group by first_name;

create temporary table common_names as
select distinct *
from male_names
where first_name in (select distinct * from female_names) and first_name in (select first_name from eligible_names);

select *, log(X.male_freq/X.female_freq) 
from (
select cn.first_name,
case when true then (select mc.cnt from male_count mc where mc.first_name=cn.first_name) end as male_freq,
case when true then (select fc.cnt from female_count fc where fc.first_name=cn.first_name) end as female_freq
from common_names cn ) X
order by abs(log(X.male_freq/X.female_freq));",2.0,sv2230,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2872,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select *
from eligible_names
where first_name in (select * from female_only)
order by cnt desc;",1.0,sv2230,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2873,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table female_names as
select first_name
from actors
where gender = 'F';

create temporary table male_names as
select first_name
from actors
where gender = 'M';

create temporary table female_only as
select *
from female_names
where first_name not in (select * from male_names);

create temporary table male_only as
select *
from male_names
where first_name not in (select * from female_names);

select *
from eligible_names
where first_name in (select * from male_only)
order by cnt desc;",1.0,sv2230,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2874,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as
select first_name, count(*) as cnt
from actors
where first_name not in ( select first_name from actors where first_name like '%.%' or first_name like '%(%' or first_name like '%)%')
group by first_name
having count(*) >= 50;",1.0,sv2230,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2875,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select tr.artist_id, tr.album_id, tr.track_id, tr.track_name, min(tp.played_on), max(tp.played_on) from track tr left join tracks_played tp on tp.artist_id = tr.artist_id and tp.album_id = tr.album_id and tp.track_id = tr.track_id group by tr.artist_id, tr.album_id, tr.track_id;",1.0,sv2230,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2876,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select al.artist_id, ar.artist_name, count(*) as num_albums from album al join artist ar on al.artist_id = ar.artist_id group by al.artist_id;",1.0,sv2230,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2877,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(tp.played_on), tp.artist_id, ar.artist_name, count(distinct tp.user_id), sum(tr.time), count(*) from tracks_played tp join track tr on tp.artist_id = tr.artist_id and tp.album_id = tr.album_id and tp.track_id = tr.track_id join artist ar on tp.artist_id = ar.artist_id group by date(tp.played_on), tp.artist_id order by date(tp.played_on);",1.0,sv2230,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2878,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select usr.user_id, count(tr.track_id), sum(time) from users usr left join tracks_played tp on usr.user_id = tp.user_id left join track tr on tp.artist_id = tr.artist_id and tp.album_id = tr.album_id and tp.track_id = tr.track_id group by usr.user_id;",1.0,sv2230,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2879,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id, sum(time) from track group by artist_id, album_id having sum(time) > 60;",1.0,sv2230,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2880,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(*), sum(time) from track group by artist_id, album_id;",1.0,sv2230,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2881,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id,count(*) from album group by artist_id;",1.0,sv2230,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2882,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time) from track;",1.0,sv2230,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2883,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) from track;,1.0,sv2230,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2884,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(*) from artist;,1.0,sv2230,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2885,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select usr.first_name, usr.last_name from users usr left join tracks_played tp on usr.user_id = tp.user_id where tp.track_id is null;
",1.0,sv2230,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2886,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select usr.user_id, usr.first_name, usr.last_name, al.album_name, tr.track_name, tp.played_on from users usr inner join tracks_played tp on usr.user_id = tp.user_id inner join track tr on tp.artist_id = tr.artist_id and tp.album_id = tr.album_id and tp.track_id = tr.track_id inner join album al on tp.artist_id = al.artist_id and tp.album_id = al.album_id order by usr.user_id, tp.played_on;
",1.0,sv2230,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2887,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select tr.* from artist ar inner join album al on ar.artist_id = al.artist_id inner join track tr on ar.artist_id = tr.artist_id where ar.artist_name = ""The Stone Roses"" order by tr.time;
",1.0,sv2230,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2888,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select tr.track_name, al.album_name, ar.artist_name from album al inner join track tr on al.artist_id = tr.artist_id and al.album_id = tr.album_id inner join artist ar on al.artist_id = ar.artist_id;
",1.0,sv2230,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2889,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select tr.* from album al inner join track tr on al.artist_id = tr.artist_id and al.album_id = tr.album_id where al.album_name = ""Second Coming"";
",1.0,sv2230,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2890,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select * from artist ar inner join album al on ar.artist_id = al.artist_id where ar.artist_name = ""New Order"";
",1.0,sv2230,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2891,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from track where track_name like ""%Love%"";",1.0,sv2230,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2892,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from track where artist_id = 1 or artist_id = 3 or artist_id = 5;
select * from track where artist_id in (1,3,5);",1.0,sv2230,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2893,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from album where album_name >= ""F"" and album_name < ""S"";",1.0,sv2230,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2894,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track where track_name < ""M"";",1.0,sv2230,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2895,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from track where artist_id = 3 and album_id = 2;,1.0,sv2230,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2896,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album where artist_id = 4;
",1.0,sv2230,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2897,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist where artist_name = ""The Rolling Stones"";
",1.0,sv2230,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2898,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * from artist where artist_id = 5;
",1.0,sv2230,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2899,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select * from track order by time limit 10;
",1.0,sv2230,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2900,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title from album;
",1.0,sv2230,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2901,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name from artist order by artist_name;
",1.0,sv2230,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2902,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,sv2230,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2903,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,sv2230,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2904,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,select * from artist;,1.0,sv2230,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2910,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"use music;
select * from artist;",1.0,js11592,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
2911,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select CustomerID, CompanyName, total_price as total_spent,
       total_price - total_discount as total_after_discount,
       Case when total_price - total_discount >= 0 and total_price - total_discount < 1000 then 'Low'
            when total_price - total_discount >= 1000 and total_price - total_discount <= 5000 then 'Medium'
            when total_price - total_discount >= 0 then 'High'
        end as groupName
       from
(select o.CustomerID, c.CompanyName,
       count(distinct ProductID) as number_of_products,
       sum(Quantity) as total_quantity,
       sum(Quantity * UnitPrice) as total_price,
       sum(Quantity * UnitPrice * Discount) as total_discount
       from Customers as c
left join Orders o on c.CustomerID = o.CustomerID and YEAR(o.OrderDate) = 2016
left join OrderDetails OD on o.OrderID = OD.OrderID
group by o.CustomerID, c.CompanyName
order by CustomerID ) as t;",10.0,js11592,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2912,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"select o.CustomerID, c.CompanyName,
       count(distinct ProductID) as number_of_products,
       sum(Quantity) as total_quantity,
       sum(Quantity * UnitPrice) as total_price,
       sum(Quantity * UnitPrice * Discount) as total_discount
       from Customers as c
left join Orders o on c.CustomerID = o.CustomerID and YEAR(o.OrderDate) = 2016
left join OrderDetails OD on o.OrderID = OD.OrderID
group by o.CustomerID, c.CompanyName
order by CustomerID;",10.0,js11592,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2913,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select o.CustomerID,o.OrderID,
       count(distinct ProductID) as number_of_products,
       sum(Quantity) as total_quantity,
       sum(Quantity * UnitPrice) as total_price
       from Orders o
inner join OrderDetails OD on o.OrderID = OD.OrderID
group by o.CustomerID, o.OrderID
having total_price > 10000;",7.5,js11592,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2914,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, avg(Freight) as avg_freight
from Orders
group by ShipCountry
order by avg_freight desc
limit 3;",7.5,js11592,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2915,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select c.CustomerID, c.CompanyName, c.ContactName, count(o.OrderID) as number_of_orders
from Customers as c
left join Orders as o on c.CustomerID = o.CustomerID
group by c.CustomerID, c.CompanyName, c.ContactName;",7.5,js11592,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2916,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select ProductID, ProductName, CompanyName
from Products as p
inner join Suppliers S on p.SupplierID = S.SupplierID
order by ProductID;",5.0,js11592,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2917,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName from Products
where ProductName like '%queso%';",5.0,js11592,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2918,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName,HireDate from Employees
where Title = 'Sales Representative'
and Country = 'USA' or Country = 'US' or Country = 'United States'
or country = 'United States of America'",5.0,js11592,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2919,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"select * from (
select p.origin, a1.state_name as orig_state, p.dest, a2.state_name as dest_state from m_ticket_prices as p
inner join airports a1 on p.origin = a1.airport
inner join airports a2 on p.dest = a2.airport) as t where orig_state = dest_state
and origin <> dest",7.5,js11592,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2920,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"select state_name,
       count(p.origin) as number_of_origin_airports,
       count(carrier) as number_carriers,
       sum(passengers) as total_passengers,
       avg(fare_per_mile) as avg_fare_per_mile
       from airports as a
inner join m_ticket_prices as p on a.airport = p.origin
group by state_name;
",7.5,js11592,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2921,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"select carrier, unique_routes, number_of_originating_airports, avg_fare_per_mile
from (select carrier,
             count(distinct  origin, dest) as unique_routes,
             count(distinct  origin ) as number_of_originating_airports,
             avg(fare_per_mile) as avg_fare_per_mile,
             sum(passengers) as total_passengers
      from m_ticket_prices
      group by carrier) as t where total_passengers >= 20000;",10.0,js11592,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
2932,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select * from (select origin, dest,
       min(fare) as cheapest_fate,
       max(fare) as most_expensive_fare,
       avg(fare) as avg_fate,
       count(carrier) as number_of_carriers,
       sum(passengers) as total_passengers
from m_ticket_prices
group by origin, dest) as t where number_of_carriers >=3 and total_passengers >= 10000;",7.5,js11592,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
2933,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select origin,
       state_name,
       number_of_departing_passengers,
       RANK() over (order by number_of_departing_passengers desc) as national_rank,
       RANK() over (partition by state order by number_of_departing_passengers desc) as state_rank
from passengers_per_airport as p
inner join m_airports as m on p.origin = m.airport",4.0,js11592,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
2934,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"DROP TEMPORARY  TABLE IF EXISTS passengers_per_airport;
CREATE TEMPORARY TABLE passengers_per_airport
SELECT distinct origin,
       sum(passengers) over (partition by origin)
from m_ticket_prices;",1.0,js11592,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
2935,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT S.date_of_signup AS current_date, 
             (S.sign_ups_on_date - I.last_updates_on_date) AS active_users
FROM SignUpsOn AS S 
INNER JOIN InactiveOn AS I 
ON S.MemberSince = I.LastUpdate;",4.0,js11592,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
2936,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"select LastUpdate,
       sum(last_updates_on_date) over (order by LastUpdate)
from InactiveOn;",2.0,js11592,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
2937,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"select MemberSince,
       sum(sign_ups_on_date) over (order by MemberSince)
from SignUpsOn;",2.0,js11592,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
2938,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"Drop temporary table if exists InactiveOn;
CREATE TEMPORARY TABLE InactiveOn
select distinct LastUpdate,
                count(ProfileID) over (partition by LastUpdate) as last_updates_on_date
from Profiles;",1.0,js11592,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
2939,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"Drop temporary table if exists SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOn
select distinct MemberSince,
                count(ProfileID) over (partition by MemberSince) as sign_ups_on_date
from Profiles;",1.0,js11592,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
2940,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"drop TEMPORARY table if exists eligible_names;
CREATE TEMPORARY TABLE eligible_names(
	id int(11),
    first_name varchar(100),
    last_name varchar(100),
    gender char(1)
);

INSERT INTO eligible_names
select *
from actors
where first_name not like '%.%' and first_name not like '%(%)%'
and first_name in
(select first_name as frequency from actors
group by first_name
having count(first_name) >= 50);

drop temporary TABLE if exists eligible_names_male_actors_frequency;
CREATE TEMPORARY TABLE eligible_names_male_actors_frequency
select first_name,count(*) as m_frequency
from eligible_names
where gender = 'M'
group by first_name;

drop temporary TABLE if exists eligible_names_female_actors_frequency;
CREATE TEMPORARY TABLE eligible_names_female_actors_frequency
select first_name,count(*) as f_frequency
from eligible_names
where gender = 'F'
group by first_name;

select * from eligible_names_female_actors_frequency where first_name = 'Dany';

select enma",2.0,js11592,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
2941,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_name select distinct first_name from actors where gender = 'M';

CREATE TEMPORARY TABLE eligible_names_female_actors(
	id int(11),
    first_name varchar(100),
    last_name varchar(100),
    gender char(1)
);

INSERT INTO eligible_names_female_actors
select *
from actors
where first_name not like '%.%' and first_name not like '%(%)%'
and first_name in
(select first_name as frequency from actors
where gender = 'F'
group by first_name
having count(first_name) >= 50) and gender = 'F'
and first_name not in (select * from male_name);

select first_name,count(*) as frequency
from eligible_names_female_actors
group by first_name;
",1.0,js11592,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
2942,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names_male_actors(
	id int(11),
    first_name varchar(100),
    last_name varchar(100),
    gender char(1)
);

INSERT INTO eligible_names_male_actors
select *
from actors
where first_name not like '%.%' and first_name not like '%(%)%'
and first_name in
(select first_name as frequency from actors
group by first_name
having count(first_name) >= 50) and gender = 'M';

",1.0,js11592,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
2943,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names(
	id int(11),
    first_name varchar(100),
    last_name varchar(100),
    gender char(1)
);

INSERT INTO eligible_names
select * 
from actors
where first_name not like '%.%' or first_name not like '%(%)%'
and first_name in 
(select first_name as frequency from actors
group by first_name
having count(first_name) >= 50);

select * from eligible_names;",0.8,js11592,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
2944,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select 	t.artist_id, t.album_id, t.track_id,
		t.track_name, min(played_on), max(played_on)
from track as t 
left join tracks_played as tp on 
tp.album_id = t.album_id and tp.artist_id = t.artist_id and tp.track_id = t.track_id
group by t.artist_id, t.album_id, t.track_id;",1.0,js11592,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
2945,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select at.artist_id, at.artist_name, count(album_id) as num_albums 
from album as a 
inner join artist as at on a.artist_id = at.artist_id
group by at.artist_id;",1.0,js11592,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
2946,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select 	DATE(played_on), 
		a.artist_id, 
		a.artist_name, 
        sum(time) as total_playback_time_on_date,
        count(distinct user_id) as users,
        count(*) as total_tracks
from tracks_played as tp
inner join artist as a on tp.artist_id = a.artist_id
inner join track as t on tp.album_id = t.album_id and tp.artist_id = t.artist_id and tp.track_id = t.track_id
group by DATE(played_on), a.artist_id;",1.0,js11592,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
2947,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select user_id, count(*), sum(time)
from tracks_played tp
inner join track as t on tp.album_id = t.album_id and tp.artist_id = t.artist_id and tp.track_id = t.track_id
group by tp.user_id;",0.8,js11592,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
2948,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select a.artist_id, a.album_id  
from album as a 
inner join track as t on a.album_id = t.album_id and t.artist_id = a.artist_id
group by a.artist_id, a.album_id
having sum(time) > 60;",1.0,js11592,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
2949,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select a.artist_id, a.album_id, 
	   count(track_id), sum(time)  
from album as a 
inner join track as t on a.album_id = t.album_id and t.artist_id = a.artist_id
group by a.artist_id, a.album_id;",1.0,js11592,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
2950,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_id) from album 
group by artist_id;",1.0,js11592,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
2951,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time) from track;",1.0,js11592,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
2952,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,SELECT count(*) from track;,1.0,js11592,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
2953,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,SELECT count(*) from artist;,1.0,js11592,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
2954,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select  distinct first_name, u.last_name
        from users u 
left join  tracks_played as tp on u.user_id = tp.user_id
where played_on is null;",1.0,js11592,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
2955,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select  tp.user_id, u.first_name, u.last_name,
	    ab.album_name, t.track_name, tp.played_on 
           from tracks_played as tp
inner join track as t on t.track_id = tp.track_id and tp.album_id = t.album_id and tp.artist_id = t.artist_id
inner join album ab on tp.artist_id = ab.artist_id and tp.album_id = ab.album_id 
inner join users u on u.user_id = tp.user_id;",1.0,js11592,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
2956,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select t.* from artist a 
inner join album ab on a.artist_id = ab.artist_id
inner join track as t on ab.album_id = t.album_id and a.artist_id = t.artist_id
where a.artist_name = 'The Stone Roses'
order by time asc;",1.0,js11592,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
2957,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name, a.artist_name, ab.album_name from artist a 
inner join album ab on a.artist_id = ab.artist_id
inner join track as t on ab.album_id = t.album_id and a.artist_id = t.artist_id;",1.0,js11592,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
2958,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select t.* from track t 
inner join album as a on a.album_id = t.album_id and a.artist_id = t.artist_id
where a.album_name = 'Second Coming';",1.0,js11592,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
2959,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select a.*, ab.album_name from artist a 
inner join album ab on a.artist_id = ab.artist_id
where a.artist_name = 'New Order';",1.0,js11592,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
2960,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"The schema has 5 entities : 

1.  Artist - contains names of artists who can create albums or tracks. One artist can have multiple albums (One to many with albums).
2. Album - Contains albums released by artists. An album should have at most 1 artist. We do not allow albums without an artist.
3. Track - contains tracks part of an album. An album can have multiple tracks but a track can only be part of one album.
4. Users - Contains list of users who listen to various tracks in albums created by artists. A user can listen to many songs.
5. tracks_played - contains historical data of songs played by various users. A song can be played by a user multiple times but each playback can be mapped to only 1 user.

FOREIGN KEYS
In Album : artist_id
In Track :  album_id, artist_id
In tracks_played : user_id, album_id, artist_id, track_id",1.0,js11592,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
2966,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"use music;
select * from track
where track_name like '%Love%';",1.0,js11592,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
2967,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"use music;
select * from track
where artist_id = 1 
or artist_id = 3
or artist_id = 5;

OR

select * from track
where artist_id in (1,3,5);",1.0,js11592,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
2968,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"use music;
select * from track 
where (upper(left(track_name,1)) > 'E' 
or lower(left(track_name,1)) > 'e') 
and (upper(left(track_name,1)) < 'S' 
or lower(left(track_name,1)) < 'S');",1.0,js11592,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
2969,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"use music;
select * from track 
where upper(left(track_name,1)) < 'M' 
or lower(left(track_name,1)) < 'm';",1.0,js11592,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
2970,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"use music;
select * from track 
where artist_id = 3 and album_id = 2;",1.0,js11592,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
2971,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"use music;
select * from album where artist_id = 4;

OR

select * from album where artist_id = (select artist_id from artist where artist_name = 'The Rolling Stones');",1.0,js11592,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
2972,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"use music;
select * from artist where artist_name = 'The Rolling Stones';",1.0,js11592,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
2973,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;
select * from artist where artist_id = 5;",1.0,js11592,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
2974,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"use music;
select * from track order by time limit 10
",1.0,js11592,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
2975,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"use music;
select artist_id, album_name as album_title
from album;",1.0,js11592,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
2976,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"use music;
select artist_name from artist
order by artist_name;",1.0,js11592,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
2977,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"use music;
select * from track;",1.0,js11592,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
2978,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"use music;
select * from album;",1.0,js11592,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
2980,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"use northwind;

SELECT t.CustomerID, t.CompanyName, t.total_price, t.total_discount, t.total_price - t.total_discount AS total_after_discount,
    CASE 
        WHEN t.total_price - t.total_discount BETWEEN 0 AND 1000 THEN 'Low'
        WHEN t.total_price - t.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'
        ELSE 'High' 
    END AS customer_group
FROM 
    (SELECT c.CustomerID, c.CompanyName, SUM(od.Quantity * od.UnitPrice) AS total_price, SUM(od.Quantity * od.UnitPrice * od.Discount) AS total_discount FROM  Customers c 
LEFT OUTER JOIN Orders o ON c.CustomerID = o.CustomerID AND YEAR(o.OrderDate) = 2016 LEFT OUTER JOIN OrderDetails od ON o.OrderID = od.OrderID 
GROUP BY c.CustomerID, c.CompanyName 
    ) AS t
ORDER BY t.CustomerID;",8.0,hv2085,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
2981,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"use northwind;

SELECT c.CustomerID, c.CompanyName, SUM(od.Quantity * od.UnitPrice) AS tot_pri, SUM(od.Quantity * od.UnitPrice * od.Discount) AS tot_dis FROM Customers c LEFT OUTER JOIN Orders o ON c.CustomerID = o.CustomerID AND YEAR(o.OrderDate) = 2016 LEFT OUTER JOIN OrderDetails od ON o.OrderID = od.OrderID 
GROUP BY c.CustomerID, c.CompanyName 
ORDER BY c.CustomerID;",10.0,hv2085,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
2982,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"use northwind;

SELECT o.CustomerID, COUNT(DISTINCT od.ProductID) AS No_prod, SUM(od.Quantity) AS Tot_uni, SUM(od.Quantity * od.UnitPrice) AS Tot_Pri
FROM Orders o INNER JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY o.CustomerID, o.OrderID
HAVING SUM(od.Quantity * od.UnitPrice) > 10000
ORDER BY Tot_Pri DESC;",7.5,hv2085,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
2983,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"use northwind;
SELECT ShipCountry, Round(avg(Freight), 2) FROM Orders GROUP BY ShipCountry ORDER BY avg(Freight) desc LIMIT 3;",7.5,hv2085,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
2984,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, C.ContactName, count(*) as no_orders from Orders O left join Customers C on O.CustomerID=C.CustomerID group by O.CustomerID, C.ContactName;",7.5,hv2085,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
2985,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"use northwind;
SELECT P.ProductID, P.ProductName, S.CompanyName FROM Suppliers S RIGHT JOIN Products P ON P.SupplierID = S.SupplierID;",5.0,hv2085,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
2986,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"use northwind;
SELECT productid, productname FROM Products WHERE ProductName LIKE ""%queso%"";",5.0,hv2085,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
2987,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind; 
SELECT FirstName,LastName,HireDate from Employees WHERE Country=""USA"" AND Title=""Sales Representative"";",5.0,hv2085,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
2988,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"use flights;
SELECT DISTINCT m1.airport, m2.airport, m1.state FROM flights.m_ticket_prices tp, m_airports m1, m_airports m2 WHERE tp.origin = m1.airport AND tp.dest = m2.airport AND m1.state = m2.state;",7.5,hv2085,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
2989,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"Use flights;
CREATE TEMPORARY TABLE prices_by_airports AS (SELECT origin, COUNT(DISTINCT carrier) AS num_carriers, SUM(passengers) AS total_passengers, AVG(fare / distance) AS avg_fare_per_mile
FROM flights.m_ticket_prices
GROUP BY origin
);

SELECT m_airports.state, COUNT(DISTINCT prices_by_airports.origin) AS num_origin_airports, SUM(prices_by_airports.num_carriers) AS num_carriers, SUM(prices_by_airports.total_passengers) AS total_passengers, AVG(prices_by_airports.avg_fare_per_mile) AS avg_fare_per_mile
FROM flights.m_airports JOIN prices_by_airports ON m_airports.airport = prices_by_airports.origin
GROUP BY m_airports.state;",7.5,hv2085,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
2990,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"Use flights;
SELECT carrier, COUNT(DISTINCT CONCAT(origin,'to', dest)) AS num_routes, COUNT(DISTINCT origin) AS num_airports, AVG(fare_per_mile) AS avg_fare_per_mile
FROM flights.m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers) > 20000;",10.0,hv2085,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
3001,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"Use flights;
CREATE TEMPORARY TABLE temp_p AS ( SELECT origin, dest, carrier, passengers, fare FROM flights.m_ticket_prices );

SELECT tp.origin, tp.dest, MIN(tp.fare) AS cheapest_fare, MAX(tp.fare) AS most_expensive_fare, AVG(tp.fare) AS average_fare, COUNT(DISTINCT tp.carrier) AS num_carriers, SUM(tp.passengers) AS total_passengers
FROM temp_p AS tp
GROUP BY tp.origin, tp.dest
HAVING COUNT(DISTINCT tp.carrier) >= 3
AND SUM(tp.passengers) > 10000;",7.5,hv2085,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
3002,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT a.airport, a.state, p.total_passengers, 
RANK() OVER (ORDER BY total_passengers DESC) AS national_rank,
DENSE_RANK() OVER (PARTITION BY a.state ORDER BY p.total_passengers DESC) AS state_rank 

FROM m_airports a INNER JOIN passengers_per_airport p ON a.airport = p.origin;",4.0,hv2085,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
3003,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"use flights;
CREATE TEMPORARY TABLE passengers_per_airport AS
Select origin, SUM(passengers) 
from m_ticket_prices 
group by origin 
order by origin;

select * from passengers_per_airport;",1.0,hv2085,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3004,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsAsOf AS
SELECT SignupDate, SUM(NumSignups) OVER(ORDER BY SignupDate) AS SignUpsAsOf
FROM SignUpsOn 
ORDER BY SignupDate;


CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT InactiveDate, SUM(NumInactive) OVER (ORDER BY InactiveDate) AS InactiveAsOf FROM InactiveOn
ORDER BY InactiveDate;


SELECT s.SignupDate, s.SignUpsAsOf - COALESCE(i.InactiveAsOf, 0) AS TotalActiveUsers
FROM SignUpsAsOf s
LEFT JOIN InactiveAsOf i
ON s.SignupDate = i.InactiveDate
ORDER BY s.SignupDate;

",4.0,hv2085,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
3005,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"SELECT InactiveDate, SUM(NumInactive) OVER (ORDER BY InactiveDate) AS InactiveAsOf FROM InactiveOn
ORDER BY InactiveDate;",2.0,hv2085,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
3006,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"SELECT SignupDate, SUM(NumSignups) OVER(ORDER BY SignupDate) AS SignUpsAsOf
FROM SignUpsOn 
ORDER BY SignupDate;",2.0,hv2085,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
3007,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT DATE(LastUpdate) AS InactiveDate, COUNT(*) AS NumInactive
FROM Profiles
WHERE DATEDIFF(NOW(), LastUpdate) > 30
GROUP BY InactiveDate;

select * from InactiveOn;",1.0,hv2085,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
3008,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"use facebook;
CREATE TEMPORARY TABLE SignUpsOn AS
SELECT DATE(MemberSince) AS SignupDate, COUNT(*) AS NumSignups
FROM Profiles
GROUP BY SignupDate;

select * from SignUpsOn;",1.0,hv2085,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
3009,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) as frequency
FROM actors where gender = 'M' and first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

CREATE TEMPORARY TABLE female_names AS SELECT first_name, COUNT(*) as frequency FROM actors where gender = 'F' and first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

SELECT m.first_name, m.frequency as male_frequency, f.frequency as female_frequency
FROM male_names m INNER JOIN female_names f ON m.first_name = f.first_name
ORDER BY ABS(LOG(m.frequency/f.frequency)) ASC;",2.0,hv2085,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3010,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) as frequency
FROM actors where gender = 'M' and first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

CREATE TEMPORARY TABLE female_names AS SELECT first_name, COUNT(*) as frequency FROM actors where gender = 'F' and first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

select f.first_name, f.frequency from female_names f Left Join male_names m on m.first_name = f.first_name WHERE m.first_name IS NULL
GROUP BY f.first_name,f.frequency ORDER BY f.frequency DESC;
",1.0,hv2085,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3011,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) as frequency
FROM actors where gender = 'M' and first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

CREATE TEMPORARY TABLE female_names AS SELECT first_name, COUNT(*) as frequency FROM actors where gender = 'F' and first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

select m.first_name, m.frequency from male_names m Left Join female_names f on m.first_name = f.first_name WHERE f.first_name IS NULL
GROUP BY m.first_name,m.frequency ORDER BY m.frequency DESC;
",1.0,hv2085,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3012,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"use imdb;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name
FROM actors
WHERE first_name NOT LIKE '%.%'
  AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING COUNT(*) >= 50;

select * from eligible_names;",0.9,hv2085,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3013,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select tp.artist_id,tp.album_id,tp.track_id,track_name, min(played_on) as min_played_on, max(played_on) as max_played_on
from tracks_played tp 
LEFT JOIN track t on tp.artist_id=t.artist_id and tp.track_id=t.track_id and tp.album_id=t.album_id
group by tp.track_id,track_name, tp.artist_id,tp.album_id;
",1.0,hv2085,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3014,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"use music;
SELECT artist.artist_id, artist_name, COUNT(album_id) AS num_albums
FROM artist 
JOIN album ON artist.artist_id = album.artist_id
GROUP BY artist.artist_id;",1.0,hv2085,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3015,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"use music;
SELECT DATE(tp.played_on) AS date_played, a.artist_id, a.artist_name,
       COUNT(DISTINCT tp.user_id) AS num_users,
       SUM(t.time) AS total_time_listened,
       COUNT(tp.track_id) AS total_tracks_played_by_user
FROM tracks_played tp
JOIN track t ON tp.artist_id = t.artist_id AND
                tp.album_id = t.album_id AND
                tp.track_id = t.track_id
JOIN album al ON tp.artist_id = al.artist_id AND tp.album_id = al.album_id
JOIN artist a ON tp.artist_id = a.artist_id
JOIN users u ON tp.user_id = u.user_id
GROUP BY DATE(tp.played_on), a.artist_id, a.artist_name;",1.0,hv2085,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3016,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, SUM(tp.track_id IS NOT NULL) as tracks_played, SUM(t.time) AS total_time
FROM users u
LEFT JOIN tracks_played tp ON u.user_id = tp.user_id
LEFT JOIN track t ON tp.artist_id = t.artist_id AND tp.album_id = t.album_id AND tp.track_id = t.track_id
GROUP BY u.user_id;",1.0,hv2085,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3017,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id,artist_id, SUM(time)
FROM track 
GROUP BY album_id,artist_id
HAVING Sum(time)>60
Order by album_id;",1.0,hv2085,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3018,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id,artist_id, COUNT(track.track_id) AS num_tracks, SUM(time)
FROM track 
GROUP BY album_id,artist_id
Order by album_id;",1.0,hv2085,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
3019,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"use music;
SELECT artist_id, COUNT(*) as cnt_albums
FROM album
GROUP BY artist_id;",1.0,hv2085,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3020,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"use music;
select AVG(time) as avg_time, ROUND(STDDEV(time), 6) as std_time from track;",1.0,hv2085,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3021,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"use music;
select count(*) from track;
",1.0,hv2085,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3022,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;
select count(*) from artist;",1.0,hv2085,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3023,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select u.first_name, u.last_name from users u 
where u.user_id NOT IN(select tp.user_id from tracks_played tp);",1.0,hv2085,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3024,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id,u.first_name,u.last_name,a.album_name,t.track_name,tp.played_on
FROM tracks_played tp
JOIN track t on t.track_id=tp.track_id
JOIN album a on a.album_id=t.album_id
JOIN  users u on tp.user_id=u.user_id
WHERE tp.album_id=t.album_id and tp.artist_id=t.artist_id and a.artist_id=tp.artist_id 
ORDER BY u.user_id;",1.0,hv2085,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3025,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select t.track_id,t.track_name,t.artist_id,t.album_id,t.time from track t 
JOIN artist a ON t.artist_id=a.artist_id 
WHERE artist_name='The Stone Roses' 
ORDER BY t.time ASC;",1.0,hv2085,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3026,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name,b.artist_name,a.album_name 
from track t 
INNER JOIN album a ON t.album_id= a.album_id 
INNER JOIN artist b ON t.artist_id=b.artist_id
where t.artist_id=b.artist_id AND t.album_id=a.album_id AND a.artist_id=b.artist_id;",1.0,hv2085,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3027,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select * from track t 
INNER JOIN album a ON a.album_id=t.album_id AND a.artist_id=t.artist_id 
WHERE a.album_name='Second Coming';",1.0,hv2085,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3028,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;
select * from album l 
INNER JOIN artist r ON l.artist_id=r.artist_id 
where artist_name='New Order';
",1.0,hv2085,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3037,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"use music;
select track_name from track where track_name like '%love%';",1.0,hv2085,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3038,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"FIRST METHOD:
use music;
select track_name from track where artist_id=1 OR artist_id=3 OR artist_id=5;


SECOND METHOD:
use music;
select track_name from track where artist_id in(1,3,5); ",1.0,hv2085,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3039,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"use music;
select album_name from album where album_name > 'E%' and album_name<'S%';",1.0,hv2085,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
3040,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"use music;
select track_name from track where track_name < 'M%' ; ",1.0,hv2085,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3041,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"use music;
select track_name from track where artist_id=3 and album_id=2;",1.0,hv2085,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3042,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"use music;
select album_name from album where artist_id in (select artist_id from artist where artist_name='The Rolling Stones');",1.0,hv2085,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3043,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"use music;
select * from artist where artist_name='The Rolling Stones';",1.0,hv2085,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3044,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;
select * from artist where artist_id=5;",1.0,hv2085,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3045,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"use music;
SELECT * FROM track ORDER BY time ASC LIMIT 10;",1.0,hv2085,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3046,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"use music;
select artist_id, album_name AS album_title from album;",1.0,hv2085,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3047,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"use music;
SELECT artist_name FROM artist ORDER BY artist_name ASC;",1.0,hv2085,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3048,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"use music;
select * from track;",1.0,hv2085,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3049,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"use music;
select * from album;",1.0,hv2085,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3050,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"Showing all artists:
use music;
select * from artists;

1- Show all the albums:
select * from album;

2- Show all tracks:
select * from track;

3- SELECT artist_name FROM artist ORDER BY artist_name ASC;

4- select artist_id, album_name AS album_title from album;

5- SELECT * FROM track ORDER BY time ASC LIMIT 10;",1.0,hv2085,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3053,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,655","Using the results from step 3, identify the primary key for each table above.",Long Answer Question,"In the above question, we retrieved the attributes and values from the table using DESCRIBE [table_name];
If we wanna know what is the primary ket in each table. We can use the below SQL commands:

use music;
SELECT column_name
FROM information_schema.columns
WHERE table_name = 'album' AND column_key = 'PRI';

SELECT column_name
FROM information_schema.columns
WHERE table_name = 'artist' AND column_key = 'PRI';

SELECT column_name
FROM information_schema.columns
WHERE table_name = 'track' AND column_key = 'PRI';

SELECT column_name
FROM information_schema.columns
WHERE table_name = 'tracks_played' AND column_key = 'PRI';

SELECT column_name
FROM information_schema.columns
WHERE table_name = 'users' AND column_key = 'PRI';
",1.0,hv2085,,"
artist -&gt; artist_id
album -&gt; artist_id, album_id
track -&gt; artist_id, album_id, track_id
users -&gt; user_id
tracks_played -&gt; user_id, artist_id, album_id, track_id, played_on

(Note: No partial credit if you do not identify the key correctly, i.e., listing all the attributes that are part of the key)",True,music,1.0,
3054,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,654","Using the DESCRIBE command, show the attributes of each table. Show the commands used to retrieve the information from each table.",Long Answer Question,"use music;
DESCRIBE album;
select * from album;

DESCRIBE artist;
select * from artist;

DESCRIBE track;
select * from track;

DESCRIBE tracks_played;
select * from tracks_played;

DESCRIBE users;
select * from users;",1.0,hv2085,,"DESCRIBE artist;
DESCRIBE album;
DESCRIBE track;
DESCRIBE tracks_played;
DESCRIBE users;",True,music,1.0,
3057,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE O2 as
(
SELECT C.CustomerID, C. CompanyName, O.OrderID, OD.Quantity, OD.UnitPrice, OD.Quantity * OD.UnitPrice AS Total_Price,  OD.UnitPrice * OD.Quantity * OD.Discount as total_discount, YEAR(O.OrderDate) as YEAR1
FROM Customers C join Orders O ON C.CustomerID = O.CustomerID
JOIN OrderDetails OD ON O.OrderID = OD.OrderID
);


SELECT CustomerID, CompanyName, SUM(Total_Price) AS Total_Price, SUM(total_discount) as Total_discount, SUM(Total_Price) - SUM(total_discount) as Total_amt_Spent,
CASE WHEN SUM(Total_Price) - SUM(total_discount) >=0 and SUM(Total_Price) - SUM(total_discount) < 1000 THEn 'LOW'
	WHEN SUM(Total_Price) - SUM(total_discount) >= 1000 and SUM(Total_Price) - SUM(total_discount) < 5000 THEN 'MEDIUM'
    ELSE 'HIGH'
    END AS Group1
FROM O2 where Year1 = 2016
GROUP BY CustomerID, CompanyName;",10.0,api2062,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
3058,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"CREATE TEMPORARY TABLE O2 as
(
SELECT C.CustomerID, C. CompanyName, O.OrderID, OD.Quantity, OD.UnitPrice, OD.Quantity * OD.UnitPrice AS Total_Price,  OD.UnitPrice * OD.Quantity * OD.Discount as total_discount, YEAR(O.OrderDate) as YEAR1
FROM Customers C join Orders O ON C.CustomerID = O.CustomerID
JOIN OrderDetails OD ON O.OrderID = OD.OrderID
);

SELECT CustomerID, CompanyName, SUM(Total_Price) AS Total_Price, SUM(total_discount) as Total_discount
FROM O2 where Year1 = 2016
GROUP BY CustomerID, CompanyName
order by CustomerID;",10.0,api2062,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
3059,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"CREATE TEMPORARY TABLE O1 as
(
SELECT C.CustomerID, O.OrderID, OD.Quantity, OD.UnitPrice, OD.Quantity * OD.UnitPrice AS Total_Price
FROM Customers C join Orders O ON C.CustomerID = O.CustomerID
JOIN OrderDetails OD ON O.OrderID = OD.OrderID
);

SELECT CustomerID, OrderId, SUM(Quantity) AS Total_Quantity, SUM(UnitPrice) AS Unit_Price_Total, SUM(Total_Price) AS Total_Price
FROM O1
GROUP BY CustomerID,OrderId
HAVING Total_Price > 10000 
ORDER BY Total_Price DESC;
",7.5,api2062,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3060,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, ROUND(AVG(Freight), 2) as avg_freight from Orders group by ShipCountry order by avg_freight desc limit 3;
",7.5,api2062,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3061,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select c.CustomerID, COUNT(*) as num_order from Orders o right join Customers c  on c.CustomerID = o.CustomerID group by c.CustomerID; ",7.5,api2062,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3062,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select p.ProductId, p.ProductName, s.CompanyName from Products p join Suppliers s on p.SupplierID = s.SupplierID order by p.ProductID;",5.0,api2062,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3063,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductId, ProductName from Products where ProductName like '%queso%';",5.0,api2062,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3064,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate from Employees where Title = 'Sales Representative' and Country = 'USA';",5.0,api2062,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3065,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT DISTINCT a1.airport AS origin, a2.airport AS dest, a1.state AS state
FROM flights.m_ticket_prices tp
JOIN m_airports a1 ON tp.origin = a1.airport
JOIN m_airports a2 ON tp.dest = a2.airport
WHERE a1.state = a2.state;",7.5,api2062,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
3066,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT A.state_name, 
		COUNT(origin) AS num_origin, 
		COUNT(carrier) as num_carrier,
        SUM(passengers) AS sum_pass,
        AVG(fare_per_mile) AS avg_fare
FROM m_ticket_prices T JOIN m_airports  A ON T.origin = A.airport
GROUP BY A.state_name;",7.5,api2062,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
3067,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"select carrier, COUNT(*) AS num_routes, COUNT(origin) as num_of_origin, AVG(fare_per_mile)
FROM m_ticket_prices 
GROUP BY carrier
HAVING SUM(passengers) > 20000;",10.0,api2062,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
3078,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin,dest, 
		MIN(fare) AS cheapest_fare, 
		MAX(fare) AS most_expensive, 
		AVG(fare) as average_fare, 
        COUNT(carrier) as num_carrier,
        SUM(passengers) as sum_pass
FROM m_ticket_prices
GROUP BY origin,dest
having num_carrier >= 3 AND sum_pass > 10000;",7.5,api2062,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
3079,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select p.origin, 
DENSE_RANK() over(order by totalPassengers desc) as national_rank,
DENSE_RANK() over(partition by m.state order by totalPassengers desc) as state_rank,
totalPassengers
from m_airports m join passengers_per_airport p on p.origin = m.airport order by national_rank;
",4.0,api2062,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
3080,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"create TEMPORARY TABLE passengers_per_airport as
select origin, SUM(passengers) as totalPassengers from m_ticket_prices group by origin;
",1.0,api2062,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3081,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT s.signUpDate, 
       s.totalSignUpsTillToday - i.totalInactiveTillToday as totalActiveUsers
FROM SingUpsAsOf s
LEFT JOIN InactiveAsOf i ON s.signUpDate = i.InactiveDate;",2.0,api2062,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
3082,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"create TEMPORARY TABLE InactiveAsOf as
select InactiveDate, SUM(totalInactiveOn) over(order by InactiveDate) as totalInactiveTillToday from InactiveOn;",2.0,api2062,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
3083,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"create TEMPORARY TABLE SingUpsAsOf as
select signUpDate, SUM(totalSignUps) over(order by signUpDate) as totalSignUpsTillToday from SignUpsOn;",2.0,api2062,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
3084,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"create TEMPORARY TABLE InactiveOn as
select Date(LastUpdate) as InactiveDate, COUNT(*) as totalInactiveOn from Profiles group by InactiveDate order by InactiveDate;",1.0,api2062,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
3085,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"create TEMPORARY TABLE SignUpsOn as 
select Date(MemberSince) as signUpDate, COUNT(*) as totalSignUps from Profiles group by signUpDate order by signUpDate;",1.0,api2062,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
3086,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
select first_name, count(*) as frequency from actors where first_name not like '%(%)%' and first_name not like '%.%' and gender = 'M' group by first_name;

CREATE TEMPORARY TABLE female_names AS
select first_name, count(*) as frequency from actors where first_name not like '%(%)%' and first_name not like '%.%' and gender = 'F' group by first_name;

select m.first_name, m.frequency as male_freq, f.frequency as female_freq,
ABS(log(m.frequency/f.frequency)) as ambiguity
from eligible_names e join
male_names m on e.first_name = m.first_name
join female_names f on e.first_name = f.first_name
order by ambiguity;",2.0,api2062,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3087,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select t1.first_name, frequency from
eligible_names as t1
left join (select first_name from actors where gender = 'M' group by first_name) t2
on t1.first_name = t2.first_name where t2.first_name is null order by frequency desc;
",1.0,api2062,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3088,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"select t1.first_name, frequency from
eligible_names as t1
left join (select first_name from actors where gender = 'F' group by first_name) t2
on t1.first_name = t2.first_name where t2.first_name is null order by frequency desc;",1.0,api2062,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3089,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
select first_name, count(*) as frequency from actors where first_name not like '%(%)%' and first_name not like '%.%' group by first_name having frequency >= 50;
",1.0,api2062,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3090,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.artist_id, t.album_id, t.track_id, t.track_name, MIN(tp.played_on) as min_played_on, MAX(tp.played_on) as max_played_on from tracks_played tp right join track t on tp.track_id = t.track_id and tp.artist_id = t.artist_id and tp.album_id = t.album_id group by t.artist_id, t.album_id, t.track_id;",1.0,api2062,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3091,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select ar.artist_id, ar.artist_name, COUNT(*) as num_albums from album al join artist ar on al.artist_id = ar.artist_id group by al.artist_id;",1.0,api2062,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3092,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select DATE(tp.played_on) as date_played, ar.artist_id, ar.artist_name, COUNT(distinct tp.user_id), SUM(t.time) as total_time, COUNT(t.track_id) as total_tracks from artist ar join track t on ar.artist_id = t.artist_id join tracks_played tp on tp.track_id = t.track_id and tp.artist_id = t.artist_id and tp.album_id = t.album_id group by date_played, ar.artist_id order by date_played;",1.0,api2062,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3093,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(tp.track_id) as tracks_played, SUM(t.time) as total_time from users u left join tracks_played tp on u.user_id = tp.user_id left join track t on tp.track_id = t.track_id and tp.artist_id = t.artist_id and tp.album_id = t.album_id group by u.user_id;",1.0,api2062,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3094,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select a.artist_id, a.album_id from album a join track t on a.artist_id = t.artist_id and a.album_id = t.album_id group by a.artist_id, a.album_id having SUM(t.time) > 60;",0.9,api2062,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3095,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT al.album_id, al.artist_id, COUNT(t.track_id) as cnt_tracks, SUM(t.time) AS tot_length 
FROM album al join track t on al.album_id = t.album_id AND al.artist_id = t.artist_id
GROUP BY al.album_id, al.artist_id;",1.0,api2062,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
3096,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) as cnt_albums from album group by artist_id;",1.0,api2062,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3097,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select AVG(time) as avg_time, ROUND(STDDEV(time), 6) as std_time from track;",1.0,api2062,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3098,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) from track;,1.0,api2062,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3099,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(*) from artist;,1.0,api2062,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3100,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select u.first_name, u.last_name from users u left join tracks_played tp on u.user_id = tp.user_id where tp.track_id is null; ",1.0,api2062,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3101,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id, u.first_name, u.last_name, a.album_name, t.track_name, tp.played_on from track t inner join tracks_played tp on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id inner join album a on a.artist_id = t.artist_id and a.album_id = t.album_id inner join users u on tp.user_id = u.user_id;",1.0,api2062,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3102,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select t.track_id, t.track_name, a.artist_id, t.album_id, t.time from track t inner join artist a on t.artist_id = a.artist_id where a.artist_name = 'The Stone Roses' order by t.time;",1.0,api2062,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3103,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name, ar.artist_name, al.album_name from track t inner join album al on t.artist_id = al.artist_id and t.album_id = al.album_id inner join artist ar on ar.artist_id = al.artist_id;",1.0,api2062,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3104,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select t.track_id, t.track_name, a.artist_id, a.album_id, t.time from track t inner join album a on a.artist_id = t.artist_id and a.album_id = t.album_id where a.album_name = 'Second Coming';",1.0,api2062,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3105,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,select * from artist a1 inner join album a2 on a1.artist_id = a2.artist_id where a1.artist_name = 'New Order';,1.0,api2062,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3112,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,select * from music.track where track_name like '%Love%';,1.0,api2062,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3113,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from music.track where artist_id = 1 or artist_id = 3 or artist_id = 5;

select * from music.track where artist_id in (1, 3, 5);",1.0,api2062,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3114,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,select * from music.album where album_name >= 'F' and album_name < 'S';,1.0,api2062,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
3115,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,select * from music.track where track_name >= 'A' and track_name < 'M';,1.0,api2062,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3116,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from music.track where artist_id = 3 and album_id = 2;,1.0,api2062,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3117,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,select * from music.album where artist_id = 4;,1.0,api2062,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3118,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,select * from music.artist where artist_name = 'The Rolling Stones';,1.0,api2062,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3119,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,select * from music.artist where artist_id = 5; ,1.0,api2062,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3120,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,select * from music.track order by time LIMIT 10;,1.0,api2062,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3121,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title from music.album;",1.0,api2062,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3122,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,select artist_name from music.artist order by artist_name;,1.0,api2062,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3123,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from music.track;,1.0,api2062,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3124,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,select * from music.album;,1.0,api2062,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3125,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,select * from music.artist;,1.0,api2062,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3172,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, TotalPrice, TotalDiscount, TotalPrice - TotalDiscount AS Total_After_Discount,
CASE 
	WHEN TotalPrice - TotalDiscount > 5000 THEN 'High'
	WHEN TotalPrice - TotalDiscount > 1000 THEN 'Medium'
	ELSE 'Low'
END AS 'Group'
FROM temp_total
ORDER BY CustomerID;",10.0,sk9245,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
3173,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"CREATE TEMPORARY TABLE temp_total AS 
SELECT o.CustomerID, c.CompanyName, SUM(od.Quantity * od.UnitPrice) AS TotalPrice, SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscount 
FROM Orders o JOIN Customers c ON o.CustomerID = c.CustomerID 
JOIN OrderDetails od ON o.OrderID = od.OrderID 
WHERE YEAR(o.OrderDate) = 2016 
GROUP BY o.CustomerID;

SELECT * FROM temp_total;",10.0,sk9245,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
3174,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT o.CustomerID, COUNT(od.ProductID) AS num_products, SUM(od.Quantity) AS total_units, SUM(od.Quantity * od.UnitPrice) AS total_price
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY o.OrderID, o.CustomerID
HAVING total_price > 10000
ORDER BY total_price DESC;",7.5,sk9245,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3175,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS average_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY average_freight DESC
LIMIT 3;
",7.5,sk9245,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3176,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT c.CustomerID, COUNT(o.OrderID) AS order_count
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID;",7.5,sk9245,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3177,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT p.ProductID, p.ProductName, s.CompanyName
FROM Products p
JOIN Suppliers s ON p.SupplierID = s.SupplierID
ORDER BY p.ProductID;",5.0,sk9245,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3178,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,sk9245,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3179,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,sk9245,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3180,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT DISTINCT a1.airport AS origin, a2.airport AS dest, a1.state AS state 
FROM m_ticket_prices tp 
JOIN m_airports a1 ON tp.origin = a1.airport
JOIN m_airports a2 ON tp.dest = a2.airport
WHERE a1.state = a2.state;",7.5,sk9245,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
3181,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT a.state_name, COUNT(tp.origin) AS num_of_origin, COUNT(tp.carrier) as num_of_carrier, SUM(tp.passengers) AS total_passengers, 
	AVG(tp.fare_per_mile) AS average_fare
FROM m_ticket_prices tp 
JOIN m_airports a ON tp.origin = a.airport
GROUP BY a.state_name;",6.5,sk9245,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
3182,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT carrier, COUNT(*) AS num_of_routes, COUNT(origin) as num_of_origin, AVG(fare_per_mile) as average_fare
FROM m_ticket_prices 
GROUP BY carrier
HAVING SUM(passengers) > 20000;",9.5,sk9245,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
3193,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin, dest, MIN(fare) AS cheapest_fare, MAX(fare) AS most_expensive, AVG(fare) as average_fare, COUNT(carrier) as total_carrier,
        SUM(passengers) as total_passengers
FROM m_ticket_prices
GROUP BY origin, dest
HAVING total_carrier >= 3 AND total_passengers > 10000;",7.5,sk9245,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
3194,"Databases for Business Analytics, Spring'23","251,685",Module 4 Practice: Flights Database Questions,"294,355",4,"5,117,076","For each origin airport, calculate the average fare across all destinations, the average fare per mile, and the average distance from the other airports.",Long Answer Question,"SELECT origin,
  AVG(fare) AS avg_fare,
  AVG(fare / distance) AS avg_fare_per_mile,
  AVG(distance) AS avg_distance
FROM m_ticket_prices
GROUP BY origin
ORDER BY origin;",1.0,sk9245,,"SELECT origin
&#160; &#160; &#160; &#160; , AVG(fare) AS fare
&#160; &#160; &#160; &#160; , AVG(fare_per_mile) AS fare_per_mile
&#160; &#160; &#160; &#160; , AVG(distance) AS distance
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3195,"Databases for Business Analytics, Spring'23","251,685",Module 4 Practice: Flights Database Questions,"294,355",4,"5,117,074","For each origin airport, list the number of carriers that have flights departing from that airport and the total number of destinations served by the origin airport.",Long Answer Question,"SELECT origin, COUNT(DISTINCT carrier) AS num_carriers,
  COUNT(DISTINCT dest) AS num_destinations
FROM  m_ticket_prices
GROUP BY origin
ORDER BY origin;",1.0,sk9245,,"SELECT origin
&#160; &#160; &#160; &#160; , COUNT(DISTINCT dest) AS destinations
&#160; &#160; &#160; &#160; , COUNT(DISTINCT carrier) AS carriers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3196,"Databases for Business Analytics, Spring'23","251,685",Module 4 Practice: Flights Database Questions,"294,355",4,"5,117,073","For each origin-dest pair, list the number of carriers, the max fare, min fare, the difference between the highest and the lowest fare offered by the various carriers, and the ratio of the minimum to the maximum fare. Limit the results only to origin-dest pairs with at least 3 carriers.",Long Answer Question,"SELECT origin, dest, COUNT(DISTINCT carrier) AS num_carriers,
  MAX(fare) AS max_fare, MIN(fare) AS min_fare,
  (MAX(fare) - MIN(fare)) AS fare_difference,
  MIN(fare) / MAX(fare) AS fare_ratio
FROM m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(DISTINCT carrier) >= 3
ORDER BY origin, dest;",1.0,sk9245,"Fare_ratio should be max_fare/min_fare
<quillbot-extension-portal></quillbot-extension-portal>","SELECT origin, dest
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , MIN(fare) AS min_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , MAX(fare) - MIN(fare) AS fare_diff
&#160; &#160; , MAX(fare) / MIN(fare) AS fare_ratio
FROM m_ticket_prices
GROUP BY origin, dest
HAVING carriers &gt;= 3;",True,flights,1.0,"The feedback from the TA was Fare_ratio should be max_fare/min_fare
<quillbot-extension-portal></quillbot-extension-portal>"
3197,"Databases for Business Analytics, Spring'23","251,685",Module 4 Practice: Flights Database Questions,"294,355",4,"5,117,072",Which origin-dest pair has the highest number of passengers?,Long Answer Question,"SELECT origin, dest, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin, dest
ORDER BY total_passengers DESC
LIMIT 1;",1.0,sk9245,,"SELECT origin, dest
&#160; &#160; , SUM(passengers) AS passengers
FROM m_ticket_prices
GROUP BY origin, dest
ORDER BY passengers DESC
LIMIT 1;",True,flights,1.0,
3198,"Databases for Business Analytics, Spring'23","251,685",Module 4 Practice: Flights Database Questions,"294,355",4,"5,117,071","For each origin-dest pair, calculate the number of carriers, the average fare across carriers, the total number of passengers, and the distance between origin and destination. However, when calculating the average fare, weight each fare according to the number of passengers.",Long Answer Question,"SELECT origin, dest, COUNT(DISTINCT carrier) AS num_carriers,
  SUM(fare * passengers) / SUM(passengers) AS weighted_avg_fare,
  SUM(passengers) AS total_passengers, distance
FROM m_ticket_prices
GROUP BY origin, dest, distance
ORDER BY origin, dest;",0.9,sk9245,,"SELECT origin, dest
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , SUM(fare*passengers)/SUM(passengers) AS weighted_fare
&#160; &#160; , SUM(passengers) AS passengers
&#160; &#160; , AVG(distance) AS distance
FROM m_ticket_prices
GROUP BY origin, dest",True,flights,0.9,
3199,"Databases for Business Analytics, Spring'23","251,685",Module 4 Practice: Flights Database Questions,"294,355",4,"5,117,070","For each origin-dest pair, calculate the number of carriers, the average fare across carriers, the total number of passengers, and the distance between origin and destination.",Long Answer Question,"SELECT origin, dest, COUNT(DISTINCT carrier) AS num_carriers,
  AVG(fare) AS avg_fare, SUM(passengers) AS total_passengers, distance
FROM m_ticket_prices
GROUP BY origin, dest, distance
ORDER BY origin, dest;",0.9,sk9245,,"SELECT origin, dest
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , SUM(passengers) AS passengers
&#160; &#160; , AVG(distance) AS distance
FROM m_ticket_prices
GROUP BY origin, dest",True,flights,0.9,
3200,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT 
  ppa.origin, 
  ppa.total_passengers, 
  RANK() OVER (ORDER BY ppa.total_passengers DESC) AS national_rank, 
  RANK() OVER (PARTITION BY ma.state ORDER BY ppa.total_passengers DESC) AS state_rank
FROM passengers_per_airport ppa
JOIN m_airports ma ON ppa.origin = ma.airport
ORDER BY national_rank, state_rank;",4.0,sk9245,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
3201,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",1.0,sk9245,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3202,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT SingUpsAsOf.SignUpsDate, 
       SingUpsAsOf.signups_as_of - COALESCE(InactiveAsOf.inactive_as_of, 0) AS total_active_users
FROM SingUpsAsOf
LEFT JOIN InactiveAsOf ON SingUpsAsOf.SignUpsDate = InactiveAsOf.InactiveDate;

#SELECT SingUpsAsOf.SignUpsDate, 
#       SingUpsAsOf.signups_as_of - InactiveAsOf.inactive_as_of AS total_active_users
#FROM SingUpsAsOf
#LEFT JOIN InactiveAsOf ON SingUpsAsOf.SignUpsDate = InactiveAsOf.InactiveDate;
",4.0,sk9245,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
3203,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT InactiveDate, SUM(inactive) OVER (ORDER BY InactiveDate) AS inactive_as_of
FROM InactiveOn;
",2.0,sk9245,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
3204,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE SingUpsAsOf AS
SELECT SignUpsDate, SUM(signups) OVER (ORDER BY SignUpsDate) AS signups_as_of
FROM SignUpsOn;
",2.0,sk9245,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
3205,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT Date(LastUpdate) AS InactiveDate, COUNT(*) AS Inactive
FROM Profiles
GROUP BY Date(LastUpdate)
ORDER BY Date(LastUpdate);",1.0,sk9245,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
3206,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsOn AS
SELECT Date(MemberSince) AS SignUpsDate, COUNT(*) AS SignUps
FROM Profiles
GROUP BY Date(MemberSince)
ORDER BY Date(MemberSince);",1.0,sk9245,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
3209,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT  e.first_name, m.male_count, f.female_count, ABS(log(male_count/female_count)) AS ambiguous
FROM eligible_names e
JOIN male_names m ON e.first_name = m.first_name
JOIN female_names f on e.first_name = f.first_name
ORDER BY ambiguous;
",1.9,sk9245,"Missing columns: ratio and log of ratios.&nbsp;
From the answer key, you should have this
M.cnt/F.cnt AS ratio
LOG10(M.cnt/F.cnt) AS log_odds
<quillbot-extension-portal></quillbot-extension-portal>","SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,"The feedback from the TA was Missing columns: ratio and log of ratios.&nbsp;
From the answer key, you should have this
M.cnt/F.cnt AS ratio
LOG10(M.cnt/F.cnt) AS log_odds
<quillbot-extension-portal></quillbot-extension-portal>"
3210,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT f.first_name, f.female_count 
FROM female_names f
LEFT JOIN (	SELECT first_name FROM actors where gender='M' GROUP BY 1) temp
ON f.first_name = temp.first_name
WHERE temp.first_name IS NULL
ORDER BY female_count  DESC;",1.0,sk9245,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3211,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"# only males in eligible_names
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) as male_count
FROM actors  
WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND gender = 'M'
GROUP BY first_name;

# only females in eligible_names
CREATE TEMPORARY TABLE female_names AS
SELECT first_name, COUNT(*) as female_count
FROM actors  
WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND gender = 'F'
GROUP BY first_name;

SELECT m.first_name, m.male_count 
FROM male_names m
LEFT JOIN (	SELECT first_name FROM actors where gender='F' GROUP BY 1) temp
ON m.first_name = temp.first_name
WHERE temp.first_name IS NULL
ORDER BY male_count  DESC;",1.0,sk9245,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3212,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) as name_count
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY 1
HAVING name_count >= 50
ORDER BY name_count DESC;",1.0,sk9245,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3213,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.artist_id, t.album_id,t.track_id, t.track_name, MIN(tp.played_on) AS min_played_on , MAX(tp.played_on) AS max_played_on
FROM track AS t
LEFT JOIN tracks_played AS tp ON t.track_id = tp.track_id AND t.artist_id = tp.artist_id AND t.album_id = tp.album_id
GROUP BY t.artist_id, t.album_id,t.track_id;",1.0,sk9245,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3214,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_id, a.artist_name, COUNT(al.album_id) AS num_albums
FROM artist a
LEFT JOIN album al ON a.artist_id = al.artist_id
GROUP BY a.artist_id;",1.0,sk9245,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3215,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(tp.played_on) AS date_played, a.artist_id, a.artist_name, COUNT(distinct user_id), SUM(t.time), COUNT(t.track_id)
FROM tracks_played tp 
JOIN track t ON tp.artist_id = t.artist_id AND tp.album_id = t.album_id AND tp.track_id = t.track_id
JOIN artist a ON tp.artist_id = a.artist_id AND t.artist_id = a.artist_id
GROUP BY 1,2;
",1.0,sk9245,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3216,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, COUNT( tp.track_id) AS total_tracks_played, SUM(t.time) AS total_listen_time
FROM users u
LEFT JOIN tracks_played tp ON u.user_id = tp.user_id
LEFT JOIN track t ON tp.track_id = t.track_id AND tp.album_id = t.album_id AND tp.artist_id = t.artist_id
GROUP BY u.user_id;",1.0,sk9245,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3217,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT a.album_id
FROM album AS a
JOIN track AS t ON a.album_id = t.album_id AND a.artist_id = t.artist_id
GROUP BY t.album_id, t.artist_id
HAVING SUM(t.time) > 60;
",1.0,sk9245,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3218,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT a.album_id, a.artist_id, COUNT(t.track_id), SUM(t.time) 
FROM album AS a
JOIN track AS t ON a.album_id = t.album_id AND a.artist_id = t.artist_id
GROUP BY a.album_id, a.artist_id;",1.0,sk9245,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
3219,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_name)
FROM album
GROUP BY artist_id;",1.0,sk9245,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3220,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time), STDDEV(time)
FROM track;",1.0,sk9245,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3221,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_name)
FROM track;",1.0,sk9245,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3222,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_name)
FROM artist;",1.0,sk9245,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3223,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT u.first_name, u.last_name
FROM users AS u
LEFT JOIN tracks_played AS tp ON u.user_id = tp.user_id
WHERE tp.user_id IS NULL;",1.0,sk9245,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3224,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT u.user_id, u.first_name, u.last_name, a.album_name, t.track_name, tp.played_on
FROM tracks_played tp
JOIN track t ON tp.track_id = t.track_id AND tp.album_id = t.album_id AND tp.artist_id = t.artist_id
JOIN album a ON t.album_id = a.album_id AND t.artist_id = a.artist_id 
JOIN users u ON tp.user_id = u.user_id;",1.0,sk9245,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3225,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT t.track_id, t.track_name, t.artist_id, a.album_name, t.time
FROM track t
JOIN album a ON t.album_id = a.album_id AND t.artist_id = a.artist_id
JOIN artist ar ON a.artist_id = ar.artist_id
WHERE ar.artist_name = 'The Stone Roses'
ORDER BY t.time ASC;

",1.0,sk9245,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3226,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT t.track_name, a.album_name AS album_title, ar.artist_name
FROM track t
JOIN album a ON t.album_id = a.album_id AND t.artist_id = a.artist_id
JOIN artist ar ON a.artist_id = ar.artist_id;

",1.0,sk9245,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3227,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT t.* 
FROM track AS t 
JOIN album AS a ON t.album_id = a.album_id AND t.artist_id = a.artist_id 
WHERE a.album_name = 'Second Coming';",1.0,sk9245,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3228,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist  AS ar
INNER JOIN album AS a ON a.artist_id = ar.artist_id
WHERE ar.artist_name = 'New Order';
",1.0,sk9245,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3229,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"# SELECT * FROM track WHERE track_name LIKE '%love%';
# I checked with both Love and love and both have the same output.
# SELECT * FROM track WHERE track_name LIKE '%Love%' OR track_name LIKE '%love%'; => have the # same output

SELECT * FROM track WHERE track_name LIKE '%Love%';
",1.0,sk9245,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3230,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR => SELECT * FROM track WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;
IN => SELECT * FROM track WHERE artist_id IN (1, 3, 5);
# Both queries will produce the same result.
",1.0,sk9245,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3231,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM album WHERE album_name BETWEEN 'F' AND 'S';
# SELECT * FROM album WHERE album_name BETWEEN 'F' AND 'S' ORDER BY album_name;",1.0,sk9245,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
3232,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * FROM track WHERE track_name < 'M';
",1.0,sk9245,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3233,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,SELECT * FROM track WHERE artist_id = 3 AND album_id = 2;,1.0,sk9245,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3234,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT album_name FROM album WHERE artist_id = 4;
# SELECT * FROM album WHERE artist_id = 4;",1.0,sk9245,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3235,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,SELECT * FROM artist WHERE artist_name = 'The Rolling Stones';,1.0,sk9245,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3236,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,SELECT * FROM artist WHERE artist_id = 5;,1.0,sk9245,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3237,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_id, track_name, artist_id, album_id, time FROM track ORDER BY time LIMIT 10;",1.0,sk9245,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3238,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title FROM album;
",1.0,sk9245,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3239,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,SELECT artist_name FROM artist ORDER BY artist_name ASC;,1.0,sk9245,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3240,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT * FROM track;
",1.0,sk9245,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3241,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT * FROM album;
",1.0,sk9245,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3242,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"SELECT * FROM artist;
",1.0,sk9245,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3255,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select CustomerID, CompanyName, total_price, total_discount,
       CASE 
         WHEN total_after_discount BETWEEN 0 AND 1000 THEN 'Low'
         WHEN total_after_discount BETWEEN 1000 AND 5000 THEN 'Medium'
         ELSE 'High'
       END AS CustomerGroup
from (
select 
	C.CustomerID,
    C.CompanyName,
    Sum(OD.Quantity*OD.UnitPrice) AS total_price,
    Sum(OD.Quantity*OD.UnitPrice*OD.Discount) AS total_discount,
    SUM(OD.Quantity*OD.UnitPrice * (1 - OD.Discount)) AS total_after_discount
from Customers C
	left join Orders O on O.CustomerID = C.CustomerID
	left join OrderDetails OD on O.OrderID = OD.OrderID
where YEAR(O.OrderDate) = 2016
group by C.CustomerID, C.CompanyName
) AS subquery
order by CustomerID;",10.0,irj2008,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
3256,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"Select 
	C.CustomerID,
    C.CompanyName,
    Sum(OD.Quantity*OD.UnitPrice) AS total_price,
    Sum(OD.Quantity*OD.UnitPrice*OD.Discount) AS total_discount
from Customers C
	left join Orders O on O.CustomerID = C.CustomerID
	left join OrderDetails OD on O.OrderID = OD.OrderID
where YEAR(O.OrderDate) = 2016
Group by C.CustomerID, C.CompanyName
Order by C.CustomerID;",10.0,irj2008,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
3257,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"Select 
	ORD.CustomerID,
    O.OrderID, 
    Count(Distinct(O.ProductID)) AS num_products,
    Sum(O.Quantity) AS total_units,
    Sum(O.Quantity*O.UnitPrice) AS total_price 
from OrderDetails O
	inner join Orders ORD ON ORD.OrderID = O.OrderID
Group by O.OrderID
Having  Sum(Quantity*UnitPrice) > 10000
Order by total_price desc;",7.5,irj2008,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3258,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"Select ShipCountry, Avg(Freight) as highest_avg_charges
from Orders
group by ShipCountry
Order by highest_avg_charges desc
limit 3;",7.5,irj2008,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3259,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select C.CustomerID, Count(O.OrderID)
from Customers C
	left join Orders O on O.CustomerID = C.CustomerID
group by C.CustomerID;",7.5,irj2008,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3260,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"Select P.ProductID, P.ProductName, S.CompanyName
from Products P
	left join Suppliers S on S.SupplierID = P.SupplierID
order by P.ProductID;",5.0,irj2008,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3261,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"Select
	ProductID, ProductName
from Products
where ProductName like ""%queso%"";",5.0,irj2008,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3262,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"Select
	FirstName, LastName, HireDate, Country
from Employees
where Title = ""Sales Representative"" and Country = ""USA"";",5.0,irj2008,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3263,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"Select distinct TP.origin, TP.dest, A.state
from m_ticket_prices TP
	inner join m_airports A ON TP.origin = A.airport
	inner join m_airports B ON TP.dest = B.airport
where A.state = B.state;",7.5,irj2008,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
3264,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"Select 
	A.state,
    Count(distinct TP.origin) as cnt_airports,
    Count(distinct TP.carrier) as cnt_carriers,
	Sum(TP.passengers) as total_passengers,
    Avg(TP.fare_per_mile) as avg_fare_per_mile
from m_ticket_prices TP
	inner join m_airports A on A.airport = TP.origin
group by A.state;",7.5,irj2008,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
3275,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"select origin, dest, 
       MIN(fare) as cheapest_fare, 
       MAX(fare) as most_expensive_fare, 
       AVG(fare) as average_fare, 
       COUNT(DISTINCT carrier) as carriers, 
       SUM(passengers) as total_passengers
from m_ticket_prices
group by origin, dest
having total_passengers >= 10000 and count(carrier) >= 3;",7.5,irj2008,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
3276,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"Select P.Origin,
	Rank () over (Order by cnt desc) as National_rank,
    Rank () over (Partition by A.state_name Order by cnt desc) AS State_rank
from passengers_per_airport P
	inner join m_airports A on A.airport = P.origin;",4.0,irj2008,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
3277,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"Create temporary table passengers_per_airport as
Select origin, count(Passengers) as cnt
from m_ticket_prices
group by origin;",1.0,irj2008,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3278,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"Select DATE(S.MemberSince),
	Sum(S.cnt_members) Over (order by S.MemberSince ASC) as total_singups,
    Ifnull(Sum(I.cnt_inactive) Over (order by I.LastUpdate ASC),0) as total_inactive,
	Sum(S.cnt_members) Over (order by S.MemberSince ASC)-Sum(I.cnt_inactive) Over (order by I.LastUpdate ASC) as total_active
from SignUpsOn S
	left join InactiveOn I on I.LastUpdate = S.MemberSince;",4.0,irj2008,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
3279,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"Select 
	LastUpdate,
    cnt_inactive,
	Sum(cnt_inactive) Over (order by LastUpdate ASC) as InactiveAsOf
from InactiveOn;",2.0,irj2008,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
3280,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"Select 
	MemberSince,
       cnt_members,
       Sum(cnt_members) Over (order by MemberSince ASC) as SignUpsAsOf
from SignUpsOn;",2.0,irj2008,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
3281,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"Create temporary table InactiveOn as 
select
	LastUpdate, Count(ProfileID) as cnt_inactive
from Profiles
group by LastUpdate
order by LastUpdate asc;",1.0,irj2008,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
3282,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"Create temporary table SignUpsOn as
select
	MemberSince, COUNT(ProfileID) AS cnt_members
from Profiles
group by MemberSince;",1.0,irj2008,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
3283,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"Select E.first_name, E.cnt, abs(log(M.male_freq/F.female_freq)) as ambiguity_score
from eligible_names E
inner join female_names F on F.first_name = E.first_name
inner join male_names M on M.first_name = E.first_name
order by ambiguity_score asc;",2.0,irj2008,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3284,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Select *
from eligible_names
where first_name NOT IN (Select first_name from male_names);",1.0,irj2008,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3285,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
Select A.first_name, count(first_name) AS male_freq
from actors A
where A.gender = ""M""
group by A.first_name;

CREATE TEMPORARY TABLE female_names AS
Select A.first_name, count(first_name) AS female_freq
from actors A
where A.gender = ""F""
group by A.first_name;

Select *
from eligible_names
where first_name NOT IN (Select first_name from female_names);",1.0,irj2008,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3286,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
Select A.first_name, Count(A.first_name) as cnt
from actors A
where A.first_name NOT IN 
	(Select first_name from actors where first_name like ""%.%""  OR first_name like ""%(%"" OR first_name like ""%)%"")
Group by A.first_name
Having Count(A.first_name) > 49
order by Count(A.first_name) desc;",1.0,irj2008,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3287,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"Select T.track_name, min(TP.played_on) AS first_play, max(TP.played_on) AS last_play
from track T
left outer join tracks_played TP on T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id 
group by T.artist_id, T.album_id, T.track_name;",1.0,irj2008,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3288,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"Select ART.artist_name, count(distinct(T.album_id)) AS num_albums
from artist ART
	left join track T on T.artist_id = ART.artist_id
    group by ART.artist_name;",1.0,irj2008,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3289,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"Select DATE(TP.played_on) AS date_played, TP.artist_id, ART.artist_name, Count(TP.user_id) As users_listened, Sum(T.time) AS total_time
from tracks_played TP
	left join track T on T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id
    left join artist ART on ART.artist_id = TP.artist_id
    group by DATE(TP.played_on), TP.artist_id
    order by DATE(TP.played_on) ASC;",1.0,irj2008,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3290,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"Select U.user_id, count(TP.track_id), sum(T.time)
from users U
	left join tracks_played TP on TP.user_id = U.user_id
    left join track T on T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id
    group by U.user_id
    order by U.user_id ASC;",1.0,irj2008,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3291,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"Select AL.album_id
from album AL
	inner join track T on T.artist_id = AL.artist_id AND T.album_id = AL.album_id
    group by AL.album_id, AL.artist_id
    Having sum(T.time) > 60;",1.0,irj2008,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3292,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"Select AL.album_id, count(track_id), sum(T.time)
from album AL
	inner join track T on T.artist_id = AL.artist_id AND T.album_id = AL.album_id
    group by AL.album_id, AL.artist_id;",1.0,irj2008,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
3293,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"Select A.artist_id, Count(AL.album_id)
from artist A
	Inner join album AL on AL.artist_id = A.artist_id
    group by A.artist_id;",1.0,irj2008,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3294,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"Select 
	round(avg(time),6)
	,round(Stddev(time),6)
from track;",1.0,irj2008,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3295,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"Select count(track_id)
from track;",1.0,irj2008,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3296,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"Select Count(artist_id)
from artist;",1.0,irj2008,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3297,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",2,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
	from users U
    left join tracks_played TP on U.user_id = TP.user_id
    where TP.played_on IS NULL;",1.0,irj2008,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3298,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",2,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.first_name, U.last_name, U.user_id, AL.album_name, T.track_name, TP.played_on
	from tracks_played TP
    inner join users U on U.user_id = TP.user_id
    inner join album AL on AL.album_id = TP.album_id AND AL.artist_id = TP.artist_id
    inner join track T on T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id;",1.0,irj2008,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3299,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",2,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
	from track T
    inner join artist ART on T.artist_id = ART.artist_id
    where ART.artist_name = ""The Stone Roses""
    order by T.time ASC;",1.0,irj2008,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3300,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",2,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, AL.album_name, ART.artist_name
	from track T
    inner join album AL on T.album_id = AL.album_id AND AL.artist_id = T.artist_id
    inner join artist ART on T.artist_id = ART.artist_id;",1.0,irj2008,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3301,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",2,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
	from track T
    Inner join album AL On T.album_id = AL.album_id AND AL.artist_id = T.artist_id
    where AL.album_name = 'Second Coming';",1.0,irj2008,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3302,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",2,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
	from album AL
	Inner join artist AR on AL.artist_id = AR.artist_id
    where AR.artist_name = 'New Order';",1.0,irj2008,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3303,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
	from users U
	left join tracks_played TP on U.user_id = TP.user_id
	where TP.played_on IS NULL;",1.0,irj2008,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3304,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.first_name, U.last_name, U.user_id, AL.album_name, ART.artist_name, TP.played_on
	from tracks_played TP
	inner join users U on U.user_id = TP.user_id
	inner join album AL on AL.album_id = TP.album_id AND AL.artist_id = TP.artist_id
	inner join artist ART on ART.artist_id = TP.artist_id;",1.0,irj2008,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3305,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
	from track T
	inner join artist ART on T.artist_id = ART.artist_id
	where ART.artist_name = ""The Stone Roses""
	order by T.time ASC;",1.0,irj2008,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3306,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, AL.album_name, ART.artist_name
	from track T
	inner join album AL on T.album_id = AL.album_id AND AL.artist_id = T.artist_id
	inner join artist ART on T.artist_id = ART.artist_id;",1.0,irj2008,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3307,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
	from track T
	Inner join album AL On T.album_id = AL.album_id AND AL.artist_id = T.artist_id
	where AL.album_name = 'Second Coming';",1.0,irj2008,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3308,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
	from album AL
	Inner join artist AR on AL.artist_id = AR.artist_id
	where AR.artist_name = 'New Order';",1.0,irj2008,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3309,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,select * from track where track_name like '%love%';,1.0,irj2008,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3310,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from track where artist_id in (1,3,5);

select * from track where artist_id = 1 or artist_id = 3 or artist_id = 5;",1.0,irj2008,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3311,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,select * from album where album_name > 'M' and album_name < 'S' order by album_name;,0.5,irj2008,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
3312,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,select * from track where track_name < 'M' order by track_name;,1.0,irj2008,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3313,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from track where artist_id = 3 AND album_id = 2;,1.0,irj2008,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3314,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,select * from album where artist_id = 4;,1.0,irj2008,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3315,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist where artist_name = ""The Rolling Stones"";",1.0,irj2008,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3316,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,select * from artist where artist_id = 5;,1.0,irj2008,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3317,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,select track_name from track order by time limit 10;,1.0,irj2008,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3318,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_name as album_title, artist_id from album;",1.0,irj2008,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3319,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,select artist_name from artist order by artist_name;,1.0,irj2008,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3320,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"select * from track;
",1.0,irj2008,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3321,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,Select * from album,1.0,irj2008,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3322,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,select * from artist;,1.0,irj2008,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3341,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT  O.CustomerID, C.CompanyName, ROUND(sum(quantity*unitPrice),2) AS TotalPayment, ROUND(sum(quantity*unitPrice*(1-Discount)),2) AS TotalPaymentPost, year(OrderDate) AS YearOrdered
FROM Orders O
LEFT JOIN OrderDetails D ON O.OrderID=D.OrderID
LEFT JOIN Customers C ON O.CustomerID=C.CustomerID
CASE WHEN TotalPaymentsPost <1000 THEN ""LOW""
CASE WHEN TotalPaymentsPost >1000 AND <5000 THEN ""Medium""
CASE WHEN TotalPaymentsPost >5000 THEN ""High""
GROUP BY O.CustomerID, C.CompanyName, YearOrdered
Having YearOrdered = '2016'
ORDER BY CustomerID, TotalPayment DESC;",3.0,tjb9819,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
3343,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT CustomerID, Count(ProductID) AS totalProducts, Sum(Quantity) AS totalUnits, ROUND(sum(quantity*unitPrice),2) AS TotalPayment
FROM Orders O
LEFT JOIN OrderDetails D ON O.OrderID=D.OrderID
GROUP BY CustomerID
HAVING totalPayment >10000
ORDER BY totalPayment DESC;",8.0,tjb9819,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
3344,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT  ShipCountry, avg(Freight) AS averageFreight
FROM  Orders
GROUP BY ShipCountry
ORDER BY averageFreight DESC
Limit 3; ",7.5,tjb9819,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3345,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, C.ContactName, Count(OrderID) AS TotalOrders
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID=O.CustomerID
GROUP BY CustomerID
ORDER BY TotalOrders DESC;",10.0,tjb9819,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3346,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT min(OrderDate)
FROM Orders;",7.5,tjb9819,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3347,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT ProductID, ProductName, CompanyName
FROM Products P
LEFT JOIN Suppliers S ON P.SupplierID=S.SupplierID
ORDER BY ProductID;",7.5,tjb9819,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3348,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,tjb9819,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3349,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = ""Sales Representative"" AND COUNTRY = ""USA"";",5.0,tjb9819,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3350,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT  S.ShipperID, S.CompanyName, Count(*) AS TotalOrders, Count(DISTINCT ShippedDate) AS NumDays 
FROM  Orders O
LEFT JOIN Shippers S ON S.ShipperID=O.ShipVia
GROUP BY ShipperID; ",7.5,tjb9819,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
3375,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"
SELECT filtered_names.first_name, male_freq.frequency AS male_frequency, female_freq.frequency AS female_frequency,
       ABS(LOG(male_freq.frequency / female_freq.frequency)) AS ambiguity_score
FROM (
    SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name
    FROM actors
    WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
) AS filtered_names
INNER JOIN (
    SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name, COUNT(*) AS frequency
    FROM actors
    WHERE gender = 'M'
    GROUP BY first_name
) AS male_freq ON filtered_names.first_name = male_freq.first_name
INNER JOIN (
    SELECT SUBSTRING_INDEX(first_name, ' ',  AS first_name, COUNT(*) AS frequency
    FROM actors
    WHERE gender = 'F'
    GROUP BY first_name
) AS female_freq ON filtered_names.first_name = female_freq.first_name
ORDER BY ambiguity_score ASC;


SELECT * 
FROM eligible_names;

Mick
James
Dennis
Thomas
Eddie
Eric
Frank
Jesse
Joseph
Josh
George
Eric
Fra",1.6,xs2262,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3376,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"
CREATE TEMPORARY TABLE female_only as
SELECT filtered_names.first_name, COUNT(*) AS frequency
FROM (
    SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name
    FROM actors
    WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
) AS filtered_names
LEFT JOIN actors ON filtered_names.first_name = SUBSTRING_INDEX(actors.first_name, ' ', 1)
    AND actors.gender = 'M'
WHERE actors.first_name IS NULL 
GROUP BY filtered_names.first_name;





",0.8,xs2262,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3377,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT a.first_name, COUNT(*) AS frequency
FROM (
    SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name
    FROM actors
    WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' 
      AND gender = 'M' 
    GROUP BY first_name
    HAVING COUNT(*) >= 50 
) AS a
LEFT JOIN actors AS b ON a.first_name = SUBSTRING_INDEX(b.first_name, ' ', 1)
  AND b.gender = 'F' 
WHERE b.first_name IS NULL 
GROUP BY a.first_name;
Richard	2403
Mikhail	278
Adam	875
Guy	597
Philippe	781
Nino	162
Klaus	302
Ole	133
Roderick	52
Luiz	128
Julian	385
Simon	669
Lucio	90
Albert	650
Marcus	289
Bill	1521
Vyacheslav	101
Teddy	131
Don	978
Martin	1385
Myles	53
Jean-Pierre	414
BÃ©la	119
JoÃ£o	227
Viktor	345
GÃ©za	66
Emile	127
Didier	206
Rocky	92
Gaston	126
Abel	75
Gerardo	138
Armand	103
Ignacio	139
Abraham	90
Charlie	432
Dustin	100
Erick	62
Horst	194
Samuel	295
TomÃ¡s	257
Bruno	617
Ludwig	98
Dale	244
Doug	449
Herbert	406
Irving	87
Jake	239
Randall	95
T",0.8,xs2262,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3378,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) AS name_count
FROM (
    SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name
    FROM actors
    WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
) AS filtered_names
GROUP BY first_name
HAVING name_count >= 50;


select*
from eligible_names

Michael	4370
Antonio	1414
JosÃ©	2374
FÃ©lix	371
Francisco	641
VÃ­ctor	896
Luis	1087
Murray	120
NÃ©stor	94
Tony	1681
Frans	99
Dick	517
Jacob	289
Todd	462
Mac	74
Angel	390
Nick	802
Benjamin	466
The	578
AndrÃ©	975
Mick	136
James	2374
Marc	988
Ahmed	159
Dragan	80
Brett	269
Dominique	526
Andreas	443
Dennis	700
Kristian	104
Olaf	98
Per	278
Karl	608
Carl	693
Egon	77
Jesper	111
Lasse	107
Sebastian	384
Jan	1325
Thomas	1465
Dee	160
Lee	725
Kim	836
Steve	1647
Freddy	145
George	1970
Niels	131
Henri	377
Heikki	89
Jukka	62
Leif	114
Markus	197
Stacy	200
John	5005
Willie	206
Peter	3372
Adolf	78
Jim	1382
Raymond	5",1.0,xs2262,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3387,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.track_name, a.artist_id,l.album_id,min(p.played_on) as firstplayed , max( p.played_on)as lastplayed
from track as t
left join tracks_played as p on t.track_id=p.track_id
join album as l on t.album_id=l.album_id
join artist as a on t.artist_id=a.artist_id
group by t.track_id, a.artist_id,l.album_id
order by t.track_name;

1963	1	2	2022-12-01 03:34:40	2022-12-29 22:12:25
5 8 6	1	5	2022-12-01 02:03:17	2022-12-29 21:34:49
Age Of Consent	1	5	2022-12-01 01:45:05	2022-12-29 23:45:12
Age Of Consent [Spectrum Arena, Warrington 1/3/86]	1	4	2022-12-01 05:54:05	2022-12-29 17:23:55
Ain't Gonna Rain Anymore	2	1	2022-12-01 03:01:12	2022-12-29 23:16:55
All Day Long	1	7	2022-12-01 02:03:17	2022-12-29 21:34:49
All Day Long	1	1	2022-12-01 10:11:17	2022-12-29 23:22:07
All Down The Line	4	1	2022-12-01 00:54:02	2022-12-29 23:40:30
Amandla	3	1	2022-12-01 04:18:45	2022-12-29 17:26:09
Angel Dust	1	7	2022-12-01 04:16:12	2022-12-29 20:44:55
As It Is When It Was	1	7	2022-12-01 03:01:12	",1.0,xs2262,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3388,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select a.artist_name, count(distinct l.album_id) as num_albums
from artist as a
left join album as l on a.artist_id=l.artist_id
group by a.artist_id,a.artist_name

.artist_name   num_albums
New Order	7
Nick Cave & The Bad Seeds	1
Miles Davis	2
The Rolling Stones	1
The Stone Roses	1
Kylie Minogue	1",1.0,xs2262,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3389,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select a.artist_name,t.artist_id,p.played_on, count(distinct p.user_id) as num_users, sum(t.track_id)as num_tracks, sum(t.time) as totaltimeplayed
from track as t
join tracks_played as p on t.track_id=p.track_id
join artist as a on t.artist_id=a.artist_id
group by p.played_on,t.artist_id
order by p.played_on



.artist_name  artist_id p.played_on num_users num_tracks totaltumeplayed

New Order	1	2022-12-01 00:54:02	1	28	11.74
The Rolling Stones	4	2022-12-01 00:54:02	1	14	3.84
New Order	1	2022-12-01 01:45:05	1	0	37.00
Nick Cave & The Bad Seeds	2	2022-12-01 01:45:05	1	0	5.95
Miles Davis	3	2022-12-01 01:45:05	1	0	18.48
The Rolling Stones	4	2022-12-01 01:45:05	1	0	4.54
The Stone Roses	5	2022-12-01 01:45:05	1	0	11.37
Kylie Minogue	6	2022-12-01 01:45:05	1	0	3.46
New Order	1	2022-12-01 02:03:17	1	21	43.57
Nick Cave & The Bad Seeds	2	2022-12-01 02:03:17	1	3	2.78
Miles Davis	3	2022-12-01 02:03:17	1	3	12.80
The Rolling Stones	4	2022-12-01 02:03:17	1	3	3.57
The Stone Roses	",1.0,xs2262,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3390,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select p.user_id, count(distinct p.track_id) as totaltracksplayed, sum(t.time) as totaltimeplayed
from tracks_played as p
join track as t on p.track_id=t.track_id
group by p.user_id

user_id  otaltracksplayed  totaltimeplayed
1	17	9835.03
2	18	8649.11
3	17	10060.60
4	18	6944.81
5	16	7581.35
7	16	7366.32
8	17	7474.88
10	18	7968.62





",0.8,xs2262,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

"
3391,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select*
from album as b
join (
select album_id, sum(t.time) as totalalbumtime
from track as t
group by album_id
) t on b.album_id=t.album_id
where t.totalalbumtime>60

artist_id album_id album_name album_id totalalbumtime
1	1	Retro - John McCready FAN	1	379.63
1	2	Substance (Disc 2)	2	106.15
1	3	Retro - Miranda Sawyer POP	3	78.22
1	4	Retro - New Order / Bobby Gillespie LIVE	4	77.36
1	6	Substance 1987 (Disc 1)	6	74.27
2	1	Let Love In	1	379.63
3	1	Live Around The World	1	379.63
3	2	In A Silent Way	2	106.15
4	1	Exile On Main Street	1	379.63
5	1	Second Coming	1	379.63
6	1	Light Years	1	379.63",0.8,xs2262,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60"
3392,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select t.album_id, count(*) as num_of_tracks, sum(t.time) as totaltimeplayed
from track as t 
group by t.album_id
.album_id num_of_tracks totaltimeplayed
1	80	379.63
2	14	106.15
3	14	78.22
4	15	77.36
5	8	42.62
6	12	74.27
7	10	43.78
",0.8,xs2262,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
3393,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, sum(album_id)as count_album
from album
group by artist_id,album_id;


artist_idcount_album
1	7
2	1
3	2
4	1
5	1
6	1",1.0,xs2262,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3394,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time,stddev(time) as stddev_time
from track;


Avg_time      stddev_time
5.242026	2.163728432900637",1.0,xs2262,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3395,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(*)
from track;

	count(*)
	153",1.0,xs2262,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3396,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(*)
from artist;


	count(*)
	6",1.0,xs2262,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3404,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select first_name,last_name
from users
where user_id not in (
select distinct user_id
from tracks_played
);

first_name  last_name
Melissa	Mitchell
Seth	Fuente",1.0,xs2262,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3405,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"    select user_id,first_name,last_name,album_name,track_name,played_on
 from tracks_played as P
 inner join users as U on P.user_id=U.user_id
 inner join album as B on P.album_id= B.album_id and P.artist_id=B.artist_id
 inner join track as T on P.track_id=T.track_id;

1	Lynn	Schulman	Retro - John McCready FAN	Elegia	18/12/2022 03:58
1	Michael	Snead	Retro - John McCready FAN	Elegia	24/12/2022 23:11
1	Kevin	Wieland	Retro - John McCready FAN	Elegia	06/12/2022 15:10
1	Genevie	Williams	Substance (Disc 2)	Elegia	15/12/2022 10:27
1	Doug	Maples	Retro - Miranda Sawyer POP	Elegia	24/12/2022 13:04
1	Lynn	Schulman	Retro - New Order / Bobby Gillespie LIVE	Elegia	28/12/2022 07:32
1	Lynn	Schulman	Retro - New Order / Bobby Gillespie LIVE	Elegia	28/12/2022 21:06
1	Samuel	Rivera	Retro - New Order / Bobby Gillespie LIVE	Elegia	05/12/2022 18:54
1	Genevie	Williams	Retro - New Order / Bobby Gillespie LIVE	Elegia	22/12/2022 23:34
1	Doug	Maples	Retro - New Order / Bobby Gillespie LIVE	Elegia	2",1.0,xs2262,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3406,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"

select*
 from artist as A
  inner join track as T on A.artist_id=T.artist_id
  where artist_name=""The Stone Roses""
  order by time asc;

artist_id	album_id	track_id	track_name	time
5	1	4	Your Star Will Shine	2.99
5	1	5	Straight To The Man	3.26
5	1	7	Tightrope	4.45
5	1	2	Ten Storey Love Song	4.5
5	1	6	Begging You	4.94
5	1	10	How Do You Sleep	4.99
5	1	1	Driving South	5.17
5	1	8	Good Times	5.67
5	1	11	Love Spreads	5.79
5	1	12	Untitled	6.43
5	1	3	Daybreak	6.56
5	1	9	Tears	6.84
5	1	0	Breaking Into Heaven	11.37
",1.0,xs2262,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3407,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name, a.artist_name, b.album_name
from track as t
join album as b on t.album_id=b.album_id
join artist as a on b.artist_id=a.artist_id;

trackname  artistname albumname

Elegia	New Order	Retro - John McCready FAN
Elegia	Nick Cave & The Bad Seeds	Let Love In
Elegia	Miles Davis	Live Around The World
Elegia	The Rolling Stones	Exile On Main Street
Elegia	The Stone Roses	Second Coming
Elegia	Kylie Minogue	Light Years
In A Lonely Place	New Order	Retro - John McCready FAN
In A Lonely Place	Nick Cave & The Bad Seeds	Let Love In
In A Lonely Place	Miles Davis	Live Around The World
In A Lonely Place	The Rolling Stones	Exile On Main Street
In A Lonely Place	The Stone Roses	Second Coming
In A Lonely Place	Kylie Minogue	Light Years
Procession	New Order	Retro - John McCready FAN
Procession	Nick Cave & The Bad Seeds	Let Love In
Procession	Miles Davis	Live Around The World
Procession	The Rolling Stones	Exile On Main Street
Procession	The Stone Roses	Second Coming
",1.0,xs2262,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3408,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select track_name,t.track_id,t.artist_id,t.album_id,t.time
from track as t 
join album as b on t.album_id=b.album_id
where b.album_name =""Second Coming""
order by track_name;
track_name track_id artist_id album_id  time
Ain't Gonna Rain Anymore	7	2	1	3.77
All Day Long	9	1	1	5.18
All Down The Line	14	4	1	3.84
Amandla	5	3	1	5.87
Begging You	6	5	1	4.94
Bittersweet Goodbye	8	6	1	3.72
Breaking Into Heaven	0	5	1	11.37
Broken Promise	6	1	1	3.76
Butterfly	9	6	1	4.16
Casino Boogie	3	4	1	3.57
Cries And Whispers	8	1	1	3.42
Daybreak	3	5	1	6.56
Disco Down	3	6	1	3.96
Do You Love Me?	0	2	1	5.95
Do You Love Me? (Part Two)	9	2	1	6.23
Dreams Never End	7	1	1	3.20
Driving South	1	5	1	5.17
Elegia	0	1	1	4.93
Every Little Counts	13	1	1	4.47
Full Nelson	8	3	1	2.81
Good Times	8	5	1	5.67
Hannibal	10	3	1	7.37
Happy	9	4	1	3.08
How Do You Sleep	10	5	1	4.99
Human Nature	3	3	1	12.80
I Just Want To See His Face	12	4	1	2.90
I Let Love In	5	2	1	4.25
I'm So High	11	6	1	3.55
In A Lonely P",0.7,xs2262,"


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






"
3409,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"
select*
 from artist as A
  inner join album as B on A.artist_id=B.artist_id
  where artist_name =""New Order"";

1	New Order	1	1	Retro - John McCready FAN
1	New Order	1	2	Substance (Disc 2)
1	New Order	1	3	Retro - Miranda Sawyer POP
1	New Order	1	4	Retro - New Order / Bobby Gillespie LIVE
1	New Order	1	5	Power, Corruption & Lies
1	New Order	1	6	Substance 1987 (Disc 1)
1	New Order	1	7	Brotherhood",1.0,xs2262,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3418,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR Boolean Condition
select*
from track
where artist_id = 1 or artist_id = 3 or artist_id = 5;
Output:
1	1	0	Elegia
1	1	1	In A Lonely Place
1	1	2	Procession
1	1	3	Your Silent Face
1	1	4	Sunrise
1	1	5	Let's Go
1	1	6	Broken Promise
1	1	7	Dreams Never End
1	1	8	Cries And Whispers
1	1	9	All Day Long
1	1	10	Sooner Than You Think
1	1	11	Leave Me Alone
1	1	12	Lonesome Tonight
1	1	13	Every Little Counts
1	1	14	Run Wild
1	2	0	In A Lonely Place
1	2	1	Procession
1	2	2	Mesh
1	2	3	Hurt
1	2	4	The Beach
1	2	5	Confusion
1	2	6	Lonesome Tonight
1	2	7	Murder
1	2	8	Thieves Like Us
1	2	9	Kiss Of Death
1	2	10	Shame Of The Nation
1	2	11	1963
1	3	0	Fine Time
1	3	1	Temptation
1	3	2	True Faith
1	3	3	The Perfect Kiss
1	3	4	Ceremony
1	3	5	Regret
1	3	6	Crystal
1	3	7	Bizarre Love Triangle
1	3	8	Confusion
1	3	9	Round And Round
1	3	10	Blue Monday
1	3	11	Brutal
1	3	12	Slow Jam
1	3	13	Everyone Everywhere
1	4	0	Ceremony [Studio 54, Barcelona 7/7/84]
1	4	1	Procession [Polyte",1.0,xs2262,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3423,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select*
from artist
where artist_name = ""The Rolling Stones"";



4	The Rolling Stones",1.0,xs2262,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3424,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select*
from artist
where artist_id = 5;





5	The Stone Roses
	",1.0,xs2262,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3466,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, total_price, total_discount,
CASE WHEN (total_price - total_discount) IN (0, 1000) THEN 'Low'
CASE WHEN (total_price - total_discount) IN (1000, 5000) THEN 'Medium'
CASE WHEN (total_price - total_discount) > 5000 THEN 'High'
END AS 'spend_group'
FROM Customers
WHERE Customer_ID IN 2016_spend;",5.0,arf9441,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
3468,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, O.OrderID
, COUNT(D.ProductID) AS num_products
, SUM(D.Quantity) AS num_units
, SUM(D.UnitPrice * D.Quantity) AS total_order_price
FROM Orders O
JOIN OrderDetails D ON D.OrderID = O.OrderID
GROUP BY D.OrderID
HAVING total_order_price > 10000
ORDER BY total_order_price DESC;
",10.0,arf9441,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3469,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, AVG(Freight) AS avg_freight_charge
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight_charge DESC
LIMIT 3;",7.5,arf9441,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3470,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, C.CompanyName, COUNT(*) AS num_orders
FROM Customers C
LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID;",10.0,arf9441,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3471,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(OrderDate) as First_Order_Ever
FROM Orders;",7.5,arf9441,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3472,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY P.ProductID;",7.5,arf9441,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3473,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,arf9441,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3474,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate 
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,arf9441,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3475,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID
, S.CompanyName
, COUNT(*) AS num_orders
, COUNT( DATE(O.ShippedDate)) AS num_days
FROM Shippers S
JOIN Orders O ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;
",6.5,arf9441,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
3510,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT OrderID, CustomerID, COUNT(ProductID) AS num_products, Quantity, Quantity*UnitPrice AS total_order_price
FROM OrderDetails D
	JOIN Orders O ON O.CustomerID = C.CustomerID
    JOIN OrderDetails D ON D.OrderID = O.OrderID;
WHERE total_order_price >10000
ORDER BY total_order_price DESC;",5.0,cap9584,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
3511,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"CREATE TEMPORARY TABLE top_ship_cities AS
	SELECT ShipCity, ROUND(AVG(Freight),2) AS avg_freight
	FROM Orders
	GROUP BY ShipCity;

SELECT TOP (3)
FROM top_ship_cities
ORDER BY avg_freight DESC;

Note: I did not see Ship Country only Ship City, and instructions say to only use Orders table",7.0,cap9584,"LIMIT, not TOP
No need for a temporary table here, this is really an overkill","SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,"The feedback from the TA was LIMIT, not TOP
No need for a temporary table here, this is really an overkill"
3512,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT CustomerID, Quantity
FROM Customers C 
	JOIN Orders O ON O.CustomerID = C.CustomerID
    JOIN OrderDetails D ON D.OrderID = O.OrderID;",5.0,cap9584,"-2 pts for no left join
-3 pts for no aggregation
SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was -2 pts for no left join
-3 pts for no aggregation
SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
3513,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT *
FROM Orders;

SELECT MIN(OrderDate) AS first_order_ever_date
FROM Orders;",7.5,cap9584,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3514,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT *
FROM Suppliers;

SELECT ProductID, ProductName, CompanyName
FROM Products P 
	INNER JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY ProductID;",7.5,cap9584,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3515,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT *
FROM Products;

SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,cap9584,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3516,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;
SHOW tables;

SELECT *
FROM Employees;
SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,cap9584,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3540,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"USE northwind;

DROP TABLE IF EXISTS Low;    
CREATE TEMPORARY TABLE Low AS  

SELECT C.CustomerID, C.CompanyName, (D.UnitPrice * D.Quantity), (D.Quantity * D.UnitPrice * D.Discount)
FROM Customers AS C
     JOIN Orders AS O on O.CustomerID = C.CustomerID
     JOIN OrderDetails As D on D.OrderID = O.OrderID
    Where YEAR (O.OrderDate) = 2016 and (D.UnitPrice * D.Quantity) - (D.Quantity * D.UnitPrice * D.Discount) > 0 
    and (D.UnitPrice * D.Quantity) - (D.Quantity * D.UnitPrice * D.Discount) < 1000;

DROP TABLE IF EXISTS Medium;    
CREATE TEMPORARY TABLE Medium AS  

SELECT C.CustomerID, C.CompanyName, (D.UnitPrice * D.Quantity), (D.Quantity * D.UnitPrice * D.Discount)
FROM Customers AS C
     JOIN Orders AS O on O.CustomerID = C.CustomerID
     JOIN OrderDetails As D on D.OrderID = O.OrderID
    Where YEAR (O.OrderDate) = 2016 and (D.UnitPrice * D.Quantity) - (D.Quantity * D.UnitPrice * D.Discount) > 1000
    and (D.UnitPrice * D.Quantity) - (D.Quantity * D.Uni",8.0,sl9503,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
3542,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"USE northwind;

SELECT DISTINCT O.OrderID, O.CustomerID, D.Quantity, (O.OrderID*D.Quantity), (D.UnitPrice * D.Quantity) AS totalorderprice
FROM Orders AS O
    RIGHT JOIN OrderDetails AS D on O.OrderID = D.OrderID;",5.0,sl9503,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC ","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC "
3543,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"USE northwind;

SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;
",7.5,sl9503,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3544,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"USE northwind;

SELECT C.CustomerID, count(O.OrderID)
FROM Customers AS C
    LEFT JOIN Orders AS O on O.CustomerID = C.CustomerID
GROUP BY C.CustomerID;",10.0,sl9503,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3545,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"USE northwind;

SELECT Min(OrderDate)
FROM Orders;",7.5,sl9503,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3546,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"USE northwind;

SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products AS P
    INNER JOIN Suppliers AS S on P.SupplierID = S.SupplierID;",7.5,sl9503,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3547,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"USE northwind;

SELECT ProductID, ProductName
FROM Products
     WHERE ProductName = '%queso%';",5.0,sl9503,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3548,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;

SELECT FirstName, LastName, HireDate
FROM Employees
   WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,sl9503,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3549,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"USE northwind;

SELECT *
FROM Orders;

SELECT S.ShipperID, S.CompanyName, count(O.OrderID), AVG (DATE (O.ShippedDate) - DATE (O.OrderDate))
FROM Shippers AS S
    INNER JOIN Orders AS O on O.ShipVia = S.ShipperID
Group BY S.ShipperID;",6.0,sl9503,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
3560,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT C.CustomerID, C.CompanyName, SUM(OD.Quantity * OD.UnitPrice) AS TTL_Price, SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TTL_Disc
FROM Customers C
INNER JOIN Orders O ON C.CustomerID= O.CustomerID
INNER JOIN OrderDetails OD ON O.OrderID= OD.OrderID
WHERE YEAR(O.OrderDate)= 2016
GROUP BY C.CustomerID, C.CompanyName
ORDER BY C.CustomerID;",10.0,jj3446,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
3561,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select O.CustomerID, Count(OD.ProductID) as CNT_Products, 
Sum(OD.Quantity) as TTL_Units,
Sum(OD.UnitPrice * OD.Quantity) as TTL_Price
From Orders O
Inner Join OrderDetails OD on O.OrderID=OD.OrderID
GROUP BY O.CustomerID
Having Sum(OD.UnitPrice * OD.Quantity) > 9999
ORDER BY TTL_Price DESC;",5.0,jj3446,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3562,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select Orders.ShipCountry,
Avg(Freight) as Avg_Freight
From Orders 
Group by ShipCountry
Order by Avg_Freight desc
Limit 3;",7.5,jj3446,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3563,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"Select C.CustomerID, Count(O.OrderID)
From Customers C
Left Join Orders O on O.CustomerID= C.CustomerID
Group by C.CustomerID;",7.5,jj3446,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3564,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"Select Products.ProductID, Products.ProductName, Suppliers.CompanyName
From Products
Inner Join Suppliers ON Products.SupplierID = Suppliers.SupplierID
Order by Products.ProductID ASC;",5.0,jj3446,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3565,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
From Products
Where ProductName like '%queso%';",5.0,jj3446,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3566,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;

select FirstName, LastName, HireDate
From Employees
Where Title= 'Sales Representative' and Country= 'USA';",5.0,jj3446,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3586,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"# 7. Using the passengers_per_airport table from the previous question,
# calculate each airport's national rank and state rank in terms of departing passengers. 
# The m_airports table contains the state of each airport. 
# (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)


Select origin, state, ttl_passengers
, RANK() OVER (ORDER BY ttl_passengers DESC) as national_rank
, RANK() OVER (PARTITION BY State ORDER BY ttl_passengers DESC) as state_rank;",1.0,jj3446,"Incomplete solution
<quillbot-extension-portal></quillbot-extension-portal>","SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,"The feedback from the TA was Incomplete solution
<quillbot-extension-portal></quillbot-extension-portal>"
3587,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"# 6. Create the passengers_per_airport temporary table, which contains 
# the total number of passengers departing from each airport.  
# Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.
Use flights;

Create temporary table passengers_per_airport as 
select origin, 
Sum(passengers) as ttl_passengers
From m_ticket_prices
Group by origin;",1.0,jj3446,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
3588,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"# 5. Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. 
# We define total active users as the total signups up to that date, 
# minus the total users that have been inactive up to that date.

With SingUpsAsOf AS (
    SELECT MemberSince, 
		SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
    FROM SignUpsOn
),
InactiveAsOf AS (
    SELECT LastUpdate, 
		SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
    FROM InactiveOn 
)
SELECT MemberSince
        ,total_signups
        ,total_inactive
        ,total_signups-total_inactive AS total_active
FROM SingUpsAsOf S 
    JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate;",4.0,jj3446,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
3589,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"# 4. Using the InactiveOn table, calculate the total number of users who are inactive as of a given date 
# (again,  up to each date in the MemberSince. Use a SUM() function together with a window specification.

    SELECT LastUpdate, 
    SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
    FROM InactiveOn;",2.0,jj3446,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
3590,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question," # 3. SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. 
# (In other words, calculate the cumulative sum of users from the SignUpsOn table.) 
# Use a SUM() function together with a window specification.

 SELECT MemberSince, 
    SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
    FROM SignUpsOn;",2.0,jj3446,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
3591,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"# 2. Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day 
# (using the LastUpdate attribute)

Create temporary table InactiveOn;
Select LastUpdate, 
Count(*) as cnt
From Profiles
Where LastUpdate is not null
Group by LastUpdate;",1.0,jj3446,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
3592,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"# 1. Setup: Create a temporary table SignUpsOn, that shows the number of people that signed up on that day
#  (using the MemberSince attribute)
use facebook;

Create temporary table SignUpsOn;
Select MemberSince, 
Count(*) as cnt 
From Profiles 
Group by MemberSince;",1.0,jj3446,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
3593,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"Select 
	E.first_name,E.cnt,ABS(log(male_freq/female_freq)) as ambiguous_names 
From eligible_names E 
	Inner Join female_frequency F on F.first_name = E.first_name 
	Inner Join male_frequency M on M.first_name = E.first_name 
Order by ambiguous_names ASC;

-----------------------
Drop temporary table female_frequency;
Create temporary table female_frequency as 
	Select 
		first_name, 
        count(first_name) as female_freq 
	From actors  
    Where gender = 'F'
    Group by first_name;

Drop temporary table male_frequency;
Create temporary table male_frequency as 
	Select 
		first_name, 
        count(first_name) as male_freq 
	From actors  
    Where gender = 'M'
    Group by first_name;

Drop temporary table eligible_names;
create temporary table eligible_names as 
select first_name, count(*) as cnt
from actors
where first_name not like ""%.%"" and first_name not like ""%(%)%""
GROUP BY first_name
HAVING COUNT(cnt)>50
Order by cnt desc;
",2.0,jj3446,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3594,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question," select * 
from eligible_names
where first_name not in (select first_name from male_names); 

-------------------

CREATE TEMPORARY TABLE female_names AS
SELECT first_name, count(*) as female_cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'F' AND female_cnt > 50
ORDER BY female_cnt DESC;


    ",1.0,jj3446,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3595,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"select * 
from eligible_names
where first_name not in (select first_name from female_names);
---------------
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, count(*) as male_cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'M' AND male_cnt > 50
ORDER BY male_cnt DESC;

",1.0,jj3446,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3596,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as 
select first_name, count(*) as cnt, gender
from actors
where first_name not like ""%.%"" and first_name not like ""%(%)%""
GROUP BY first_name, gender
HAVING COUNT(cnt)>50
Order by cnt desc;",1.0,jj3446,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3597,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"# Show the name of each track and the first and last time it was played. 
# Include tracks that were not played at all. 
Select 
T.artist_id,
    T.album_id, 
    T.track_id,
    T.track_name,
    Min(P.played_on) as min_played_on,
    Max(P.played_on) as max_played_on 
From track T
	Left join tracks_played P on P.track_id = T.track_id and P.artist_id = T.artist_id and P.album_id = T.album_id
Group by T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,jj3446,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3598,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"# Show the name of the artist and the number of albums for each artist in the database. 
# Name the column that shows the number of albums as num_albums.
Select 
    A.artist_name, 
    Count(L.album_id) as num_albums
From album L
	Inner join artist A on A.artist_id = L.artist_id 
Group by A.artist_name;",1.0,jj3446,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3599,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"# For every date listed in the tracked_played table, show the artist's name, the artist id, 
# the number of users that listened to the artist, and the total amount of time users listened to the artist. 
# Assume that each track is played fully.
SELECT DATE(TP.played_on) AS date_played
	, R.artist_id
	, R.artist_name
	, COUNT(DISTINCT TP.user_id) AS users
	, SUM(T.time) AS total_time
	, COUNT(TP.artist_id) AS total_tracks
FROM tracks_played TP
	JOIN artist R ON TP.artist_id = R.artist_id
	JOIN track T ON TP.track_id = T.track_id AND TP.album_id = T.album_id AND TP.artist_id = T.artist_id
GROUP BY date_played, R.artist_id
ORDER BY date_played;",1.0,jj3446,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3600,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"# For every user, show the total tracks they played and the total amount of time they listened. 
# Assume that each track is played fully. List also the users that have not played any track
Select U.user_id, 
    Count(R.track_id) as tracks_played,
    Sum(R.time) as total_time
From users U
	Left join tracks_played T on T.user_id = U.user_id
    Left join track R on R.artist_id = T.artist_id and R.album_id = T.album_id and R.track_id = T.track_id
Group by U.user_id
Order by U.user_id ASC;",1.0,jj3446,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3601,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"# List the IDs of the albums, where the total album length (across all the album's tracks) is longer than 60 minutes.
Select  A.album_id,  A.artist_id,
sum(T.time) as length_album
From track T 
	Left Join album A on A.album_id = T.album_id and A.artist_id = T.artist_id 
Group by A.album_id, A.artist_id
Having length_album > 60;",1.0,jj3446,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3602,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"# For each album, count the number of tracks for that album and the total length of all the tracks in the album. 
# You only need to show the primary key of the album, not its name.
Select album_id, count(distinct track_id) as num_tracks, 
    sum(time) as length_tracks
From track
Group by album_id;",0.8,jj3446,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
3603,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"# For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.
select artist_id, count(*) as cnt_album
FROM album
GROUP BY artist_id;",1.0,jj3446,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3604,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"# Show the average and standard deviation of the track length
SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time
FROM track;",1.0,jj3446,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3605,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"# Count the number of tracks in the database
select count(*)
From track;",1.0,jj3446,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3606,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"# Count the number of artists in the database
use music
select count(*)
From artist;",1.0,jj3446,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3607,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"   # List the first and last names of the users that have not listened to any tracks.
select U.user_id, U.first_name, U.last_name
FROM users U
	LEFT Join tracks_played P ON P.user_id = U.user_id
    WHERE played_on is null;",1.0,jj3446,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3608,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"# The table tracks_played contains the tracks the users listened to and the time 
    # they listened to the songs. For every track listed in the tracks_played table, 
    # show the user's first and last name, the user id, the album name, 
    # the track name, and the date/time it was played.

Select U.user_id, U.first_name, U.last_name, L.album_name, T.track_name, P.played_on
FROM tracks_played P
	LEFT OUTER JOIN users U on U.user_id = P.user_id
	LEFT OUTER JOIN album L on L.album_id = P.album_id and L.artist_id = P.artist_id
	LEFT OUTER JOIN track T on T.track_id = P.track_id 
    AND T.album_id = P.album_id and T.artist_id = P.artist_id
    ORDER BY U.user_id, played_on ASC;",1.0,jj3446,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3609,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"# List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest
select T.track_id, T.track_name, A.artist_id, T.album_id, T.time
From track T
	INNER JOIN artist A on T.artist_id = A.artist_id
    Where A.artist_name = ""The Stone Roses"" 
    Order by time ASC;",1.0,jj3446,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3610,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"# List all the track names, the corresponding album name, and the corresponding artist name
SELECT T.track_name, L.album_name, A.artist_name
FROM track T 
	Inner Join album L on L.album_id = T.album_id AND L.artist_id = T.artist_id
       Inner Join artist A on A.artist_id = L.artist_id;
",1.0,jj3446,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3611,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"# List Tracks for the album Second Coming 
use music;
Select*
From track T
	Inner Join album L on L.album_id = T.album_id AND L.artist_id = T.artist_id 
    Where L.album_name = 'Second Coming';",1.0,jj3446,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3612,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"# Q.1 List all the album names by the band New Order
use music;
Select *
FROM album L
	INNER JOIN artist R ON L.artist_id = R.artist_ID
    WHERE R.artist_name = 'New Order';",1.0,jj3446,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3613,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"# Find all the tracks that include the word ""Love"" anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).
# Do you want to add all the track information or just track name? 

select *
FROM track
WHERE track_name LIKE '%Love%';",1.0,jj3446,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3614,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"# List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:  one using the OR Boolean condition and one using the IN operation.

select track_name
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

select track_name
FROM track
WHERE artist_id IN (""1"", ""3"", ""5"");",1.0,jj3446,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3615,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"# Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).
# exile was still showing up when putting > E - this is albums that start after the letter E album 
# WHERE album_name BETWEEN 'F' AND 'S' can be other  

select * 
FROM album
WHERE album_name BETWEEN 'F' AND 'R';",1.0,jj3446,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
3616,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question," # Find the tracks with names that are earlier alphabetically than (is less than) M. 
 # Note that inequality queries can be used with text and not only with numbers.

select * 
FROM track
WHERE track_name < 'M'; ",1.0,jj3446,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3617,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"# Find the tracks for the artist with id 3, from the artist's album with id 2.

SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,jj3446,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3618,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"# Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.

select * 
FROM album 
WHERE artist_id = 4;",1.0,jj3446,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3619,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"# Show the entry for the artist named The Rolling Stones

select *
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,jj3446,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3620,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"# Show the entry for the artist with id equal to 5
select artist_id, artist_name
FROM artist
WHERE artist_id = 5;",1.0,jj3446,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3621,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"# List the ten shortest tracks in terms of playing time.
use music;
select track_name, time
FROM track 
ORDER BY time ASC, track_name
LIMIT 10; 
",1.0,jj3446,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3622,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"# Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
use music;
select album_name AS album_title
FROM album;
",1.0,jj3446,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3623,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"# List all the names of the artists, without the artist ids, sorted alphabetically.
use music;
select artist_name
FROM artist 
ORDER BY artist_name ASC; 
",1.0,jj3446,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3624,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"# Show all tracks 
use music;
select track_id, track_name, artist_id, album_id, time
FROM track; ",1.0,jj3446,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3625,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"# Show all albums 
use music;
select album_id, album_name 
FROM album; ",1.0,jj3446,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3626,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"# Show all artist 
use music;
select artist_id, artist_name 
FROM artist; ",1.0,jj3446,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3633,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID, 
	COUNT(OD.ProductID) AS num_products, 
	SUM(OD.Quantity) AS total_units,
    num_products * total_units AS total_order_price
FROM Orders O
	JOIN OrderDetails OD on OD.OrderID = O.OrderID
GROUP BY O.CustomerID, OD.OrderID, num_products
HAVING total_order_price > 10000
ORDER BY total_order_price DESC;",7.5,nw2251,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3634,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC
LIMIT 3;",7.5,nw2251,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3635,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT O.CustomerID, COUNT(OD.OrderID), COUNT(O.OrderID)
FROM Orders O
	JOIN OrderDetails OD on OD.OrderID = O.OrderID
GROUP BY O.CustomerID;",7.5,nw2251,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3636,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	JOIN Suppliers S on S.SupplierID = P.SupplierID
ORDER BY ProductID ASC;",5.0,nw2251,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3637,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT *
FROM Products;
SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,nw2251,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3638,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;

Select * 
from Employees;

Select FirstName, LastName, HireDate
FROM Employees
WHERE Title LIKE '%Sales Representative%' AND Country LIKE '%USA%';",5.0,nw2251,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3639,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT T.origin, T.dest, A.state
FROM m_ticket_prices T
	JOIN m_airports A on A.airport = T.origin AND A.airport = T.dest
GROUP BY origin, dest;",2.0,nw2251,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
3655,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE Q4_males
SELECT first_name, gender, count(first_name) AS male_cnt
FROM actors
	WHERE gender = 'M'
    GROUP BY first_name
    ORDER BY male_cnt DESC;

CREATE TEMPORARY TABLE Q4_females
SELECT first_name, gender, count(first_name) AS female_cnt
FROM actors
	WHERE gender = 'F'
    GROUP BY first_name
    ORDER BY female_cnt DESC;
    
SELECT E.first_name, M.male_cnt, F.female_cnt, log(male_cnt / female_cnt) AS ambig_name
FROM eligible_names E
	JOIN Q4_males M ON M.first_name = E.first_name
    JOIN Q4_females F ON F.first_name = E.first_name
ORDER BY ABS(ambig_name);",2.0,nw2251,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3656,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, gender, COUNT(first_name) AS female_names
FROM actors
	WHERE first_name NOT IN (SELECT first_name FROM actors WHERE gender = 'M')
    AND first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name, gender;",1.0,nw2251,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3657,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, gender, COUNT(first_name) AS male_names
FROM actors
	WHERE first_name NOT IN (SELECT first_name FROM actors WHERE gender = 'F')
    AND first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name, gender;",1.0,nw2251,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3658,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
CREATE TEMPORARY TABLE eligible_names as
SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' AND
	first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING cnt >= 50
ORDER BY cnt DESC;
",1.0,nw2251,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3659,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"# Show name of each track and first and last time it was played
# Include tracks that were not played at all
Select T.artist_id, T.album_id, T.track_id, T.track_name, 
MIN(P.played_on) as min_played_on,
MAX(P.played_on) as max_played_on
From tracks_played P
	LEFT JOIN track T on T.artist_id = P.artist_id 
    and T.album_id = P.album_id 
    and T.track_id = P.track_id
Group by T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,nw2251,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3660,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"# Show name of artist and number of albums for each artist in database
# Name column that shows number of albums as num_albums
Select L.artist_id, A.artist_name, count(L.album_id) as num_albums
From album L
	JOIN artist A on A.artist_id = L.artist_id
group by L.artist_id;",1.0,nw2251,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3661,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"# For every date listed in the tracks_played table, show artist's name
# artist id, number of users that listened to artist 
# and total amount of time users listened to the artist
# Assume each track is played fully
SELECT DATE(P.played_on) AS date_played
	, A.artist_id
	, A.artist_name
	, COUNT(DISTINCT P.user_id) AS users
	, SUM(T.time) AS total_time
	, COUNT(P.artist_id) AS total_tracks
FROM tracks_played P
	JOIN artist A ON P.artist_id = A.artist_id
	JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played;",1.0,nw2251,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
3662,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"# For each user, show total tracks played and total amount of time listened
# Assume each track is played fully
# List also users that have not played any track
select U.user_id, 
	count(P.played_on) as count_tracksplayed, 
    sum(T.time) as total_time
From users U 
	JOIN tracks_played P on P.user_id = U.user_id
    JOIN track T on T.artist_id = P.artist_id and T.album_id = P.album_id and T.track_id = P.track_id
group by P.user_id
Order by P.user_id ASC;",1.0,nw2251,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3663,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"# List IDs of albums where total album length (across all tracks)
# is longer than 60 mins
select T.album_id, T.artist_id, sum(T.time) as sum_time
from track T
group by T.album_id, T.artist_id
having sum(T.time) > 60; ",1.0,nw2251,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3664,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"# For each album, count number of tracks for that album
# and total length of all tracks in album
# only show album_id (not name)
select T.artist_id, T.album_id, count(distinct track_id), sum(T.time) AS cnt_tracklength
from track T 
GROUP BY artist_id, album_id;",1.0,nw2251,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
3665,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"# For each artist, count number of albums in database
# only need to show artist ID (not name)
select L.artist_id, count(L.album_id) AS cnt_album
From album L
GROUP BY artist_id;",1.0,nw2251,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3666,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"# Count number of tracks in database
select count(T.time)
	, ROUND(AVG(T.time),2) AS avg_length
    , ROUND(STDDEV(T.time),2) AS std_length
from track T;",1.0,nw2251,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3667,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"# Count number of tracks in database
select count(*)
from track;",1.0,nw2251,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3668,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"# Count number of artists in database
use music;
select count(*)
from artist;",1.0,nw2251,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3669,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"Select U.user_id, U.first_name, U.last_name
from users U
	LEFT OUTER JOIN tracks_played P on P.user_id = U.user_id
    WHERE played_on IS NULL;",1.0,nw2251,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3670,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"Select U.user_id, U.first_name, U.last_name, L.album_name, T.track_name, P.played_on
from tracks_played P
	LEFT OUTER JOIN users U on U.user_id = P.user_id
	LEFT OUTER JOIN album L on L.album_id = P.album_id and L.artist_id = P.artist_id
	LEFT OUTER JOIN track T on T.track_id = P.track_id 
    AND T.album_id = P.album_id and T.artist_id = P.artist_id
    ORDER BY U.user_id, played_on ASC;",1.0,nw2251,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3671,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Select T.track_id, T.track_name, T.artist_id,  T.time
from track T
	LEFT OUTER JOIN artist A on A.artist_id = T.artist_id
    WHERE A.artist_name = 'The Stone Roses'
    ORDER BY T.time ASC;",1.0,nw2251,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3672,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"Select T.track_name, L.album_name, A.artist_name
from track T 
    LEFT OUTER JOIN album L on L.album_id = T.album_id
    LEFT OUTER JOIN artist A on A.artist_id = T.artist_id;",0.5,nw2251,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3673,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"Select *
From track T INNER JOIN album L on L.album_id = T.album_id AND L.artist_id = T.artist_id
Where album_name = 'Second Coming';",1.0,nw2251,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3674,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"USE music;
# List all the album names by the band New Order

Select *
From artist
where artist_name = 'New Order';

Select *
from album L
	INNER JOIN artist R ON L.artist_id = R.artist_id
Where R.artist_name = 'New Order';",1.0,nw2251,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3675,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"# find all tracks that include word 'love' in title
select track_name
from track
where track_name like '%love%';

#Other option to see full track entry
select *
from track
where track_name like '%love%';",1.0,nw2251,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3676,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"#list all tracks for artist ids 1,3, and 5 - OR Boolean condition
select track_name
from track
where artist_id = 1 OR artist_id = 3 OR artist_id = 5;

#list all tracks for artist ids 1,3, and 5 - IN operation
select track_name
from track
where artist_id IN ('1', '3', '5');",1.0,nw2251,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3677,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"# find all albums with a title that begins with character greater than E and less than S (not inclusive)
select *
from album
where album_name >= 'F' AND album_name < 'S';",1.0,nw2251,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
3678,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"# find the tracks with names earlier alphabetically than (less than) M
select *
from track
where track_name < 'M';",1.0,nw2251,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3679,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"# find tracks for artist with id 3, from the artist's album with id 2
select *
from track
where artist_id = 3 AND album_id = 2;",1.0,nw2251,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3680,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"# show all albums by The Rolling Stones using artist_id
select *
from album
where artist_id = 4;",1.0,nw2251,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3681,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"# show entry for artist named The Rolling Stones
select *
from artist
where artist_name = ""The Rolling Stones"";",1.0,nw2251,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3682,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"# show artist with id equal to 5
select *
from artist
where artist_id = 5;",1.0,nw2251,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3683,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"# list ten shortest tracks
# rank by time (ascending)
select *
from track
order by time ASC
limit 10;",1.0,nw2251,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3684,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"# show all album names and artist_id, not not album_id
select album_name, artist_id
from album;

# rename album_name to album_title
select album_name AS album_title
from album;",1.0,nw2251,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3685,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name ASC;",1.0,nw2251,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3686,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"# show tracks
select * 
from track;",1.0,nw2251,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3687,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"# show albums
select *
from album;",1.0,nw2251,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3688,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"use music;
show tables;
# show artists
select *
from artist;",1.0,nw2251,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3696,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT CustomerID, Quantity AS ""Number of Products"", Quantity * UnitPrice AS ""Total Units in the Order"", Quantity * UnitPrice AS ""Total Order Price""
FROM Orders O
JOIN OrderDetails D ON O.OrderID = D.OrderID
WHERE ""Total Order Price"" > 10000
ORDER BY ""Total Order Price"" DESC;


",5.0,db4626,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
3697,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,db4626,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3698,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(OrderID) AS ""Number of Orders""
FROM Customers C
JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;

",8.0,db4626,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
3699,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT OrderDate
FROM Orders
ORDER BY OrderDate ASC
LIMIT 1;",7.5,db4626,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3700,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT ProductID, ProductName, CompanyName
FROM Products P 
JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY ProductID ASC;",7.5,db4626,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3701,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,db4626,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3702,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = ""Sales Representative"" and Country = ""USA"";",5.0,db4626,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3703,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT ShipperID, CompanyName, COUNT(OrderID) AS ""Number of Orders"", COUNT(DISTINCT ShippedDate) AS ""Number of Distinct Days""
FROM Shippers S 
JOIN Orders O
GROUP BY ShipperID;",6.0,db4626,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
3714,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE SPEND_2016 AS
	SELECT C.CustomerID
	, C.ContactName
	, C.CompanyName
    , SUM(D.UnitPrice*D.Quantity) AS tot_price_orders
    , SUM(D.UnitPrice*D.Quantity*D.Discount) AS tot_discount_applied
    , SUM((D.UnitPrice*D.Quantity)-(D.UnitPrice*D.Quantity*D.Discount)) AS Tot_Spend_after_Discount
FROM Customers C
	LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
    LEFT JOIN OrderDetails D ON D.OrderID = O.OrderID
WHERE YEAR(O.OrderDate) = 2016
GROUP BY C.CustomerID, C.ContactName, C.CompanyName
ORDER BY C.CustomerID;


SELECT S.*,
	CASE S.Tot_Spend_after_Discount
		WHEN S.Tot_Spend_after_Discount < 1000 THEN 'LOW'
        WHEN S.Tot_Spend_after_Discount BETWEEN 1000 AND 5000 THEN 'Medium'
        WHEN S.Tot_Spend_after_Discount > 5000 THEN 'HIGH'
	ELSE 'Error'
    END AS Spend
FROM SPEND_2016 S;",7.0,jg7059,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
3716,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.OrderID 
	, O.CustomerID
	, COUNT(DISTINCT D.ProductID) AS num_products
    , SUM(D.Quantity) AS tot_units
    , SUM(D.UnitPrice*D.Quantity) AS tot_order_price
FROM Orders O
	JOIN OrderDetails D ON D.OrderID = O.OrderID
GROUP BY O.OrderID, O.CustomerID
HAVING tot_order_price > 10000
ORDER BY tot_order_price DESC;",10.0,jg7059,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3717,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry
	, AVG(Freight) AS Freight_Charge
FROM Orders
GROUP BY ShipCountry
ORDER BY Freight_Charge DESC
LIMIT 3;",7.5,jg7059,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3718,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID
	, C.ContactName
    , COUNT(O.OrderID) AS num_orders
FROM Customers C
	LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID, C.ContactName;",10.0,jg7059,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3719,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT OrderID, OrderDate
FROM Orders
ORDER BY OrderDate
LIMIT 1;",7.5,jg7059,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3720,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	LEFT JOIN Suppliers S ON S.SupplierID = P.SupplierID
ORDER BY ProductID;",7.5,jg7059,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3721,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%Queso%';",5.0,jg7059,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3722,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
From Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,jg7059,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3723,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID
	, S.CompanyName
    , COUNT(OrderID) AS cnt_orders
    , COUNT(Distinct ShippedDate) AS cnt_distinct_days
FROM Shippers S
	JOIN Orders O ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;



A JOIN was used here since the relationship of shipper to order is min 1 and max many, so each shipper has at least one order so a JOIN is acceptable. If the relationship was zero to many, a left join would be more appropriate to show all shippers and results shippers without orders/distinct days",7.5,jg7059,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
3804,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select c.CustomerID, c.CompanyName, od.UnitPrice*od.Quantity as Total_Price, od.UnitPrice*od.Quantity*od.Discount as Total_Discount
from Customers c
join Orders o on c.ID = o.CustomerID
join OrderDetails od on o.orderID = od.OrderID
where c.CustomerID in 
(
select c.CustomerID, c.CompanyName, od.UnitPrice*od.Quantity as Total_Price, od.UnitPrice*od.Quantity*od.Discount as Total_Discount
case
    when Total_Discount > 5000 then ""High Spender""
    when Total_Discount between 1000 and 5000 then ""Medium Spender""
    when Total_Discount between 0 and 1000 then ""Low Spender""
    else ""All right then, keep your money""
end
from OrderDetails od
)
group by c.CustomerID, c.CompanyName
order by c.CustomerID
limit Year(o.OrderDate) = 2016
;",5.0,bmg9675,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
3806,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select c.CustomerID, od.Quantity, sum(od.UnitPrice) as Total_Price # od.UnitPrice*od.Quantity as Total_Price
from Customers c
join Orders o on c.ID = o.CustomerID
join OrderDetails od on o.orderID = od.OrderID
group by c.CustomerID, od.Quantity
having Total_Price > 10000
order by Total_Price desc
;
",4.0,bmg9675,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
3807,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, avg(Freight)
from Orders
group by ShipCountry
order by avg(Freight) desc
limit 3;
",7.5,bmg9675,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3808,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select c.customerID, count(o.OrderID) as Order_Cnt
from Customers c
join orders o on c.ID = o.CustomerID
group by c.customerID
;
",7.0,bmg9675,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
3809,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"select min(OrderDate)
from orders
limit 1;",7.5,bmg9675,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3810,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select p.ProductID, p.ProductName, s.CompanyName
from Product p
join Supplier s
on p.SupplierID = s.SupplierID
order by p.ProductID
;
",7.5,bmg9675,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3811,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
from Products
where 1=1 
and ProductName like '%queso%'
;",5.0,bmg9675,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3812,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate
from Employees
where 1=1
and Title = 'Sales Representative'
and Country = 'United States'
;",4.5,bmg9675,"where 1=1 (???)
and Country = 'United States'

SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' ","SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,"The feedback from the TA was where 1=1 (???)
and Country = 'United States'

SELECT FirstName, LastName, HireDate
FROM Employees&nbsp;
WHERE Title = 'Sales Representative' AND Country = 'USA' "
3813,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"select sh.ShipperID, sh.CompanyName, count(o.*) as Order_Cnt 
from Shippers sh
join Customers c on sh.CompanyName = c.CompanyName
join Orders o on o.customerID = c.CustomerID
group by sh.ShipperID, sh.CompanyName
having distinct(o.ShippedDate)
;",3.0,bmg9675,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
3824,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"USE northwind;

CREATE TEMPORARY TABLE TotalAmtCust2016 AS
SELECT 
C.CustomerID
, C.CompanyName
, SUM(OD.Quantity*OD.UnitPrice) AS TotalOrderPrice
, SUM(OD.Quantity*OD.UnitPrice*OD.Discount) AS TotalDiscountApplied
FROM Customers C
LEFT OUTER JOIN Orders O ON C.CustomerID = O.CustomerID
INNER JOIN OrderDetails OD ON OD.OrderID = O.OrderID
AND O.OrderDate LIKE ""2016%""
	Group By O.CustomerID
    ORDER BY C.CustomerID ASC;
    
SELECT C.CustomerID
, SUM(OD.Quantity*OD.UnitPrice) AS TotalOrderPrice
, SUM(OD.Quantity*OD.UnitPrice*OD.Discount) AS TotalDiscountApplied
CASE
WHEN TotalOrderPrice-TotalDiscountApplied <1000 THEN ""Low""
WHEN TotalOrderPrice-TotalDiscountApplied >1000 AND TotalOrderPrice-TotalDiscountApplied >5000 THEN ""Medium""
WHEN TotalOrderPrice-TotalDiscountApplied >5000 THEN ""High""
ELSE """"
END AS GROUPdef
FROM TotalAmtCust2016;",5.0,esv2019,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
3826,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"USE northwind;
SELECT 
O.CustomerID
, SUM(OD.Quantity) AS TotalUnits
, SUM(OD.Quantity*OD.UnitPrice) AS TotalOrderPrice
FROM OrderDetails OD
INNER JOIN Orders O ON O.OrderID = OD.OrderID
INNER JOIN Products P ON OD.ProductID = P.ProductID
	Group By O.CustomerID, O.OrderID
    HAVING TotalOrderPrice >10000
    ORDER BY TotalOrderPrice Desc;",7.0,esv2019,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
3827,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"USE northwind;
SELECT 
ShipCountry,
AVG(Freight) AS highestfreight
FROM Orders
GROUP BY ShipCountry
ORDER BY highestfreight DESC
LIMIT 3;",7.5,esv2019,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3828,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"USE northwind;
SELECT 
C.CustomerID
, COUNT(O.OrderID)
FROM Orders O
INNER JOIN Customers C ON C.CustomerID = O.CustomerID
	Group By C.CustomerID;",8.0,esv2019,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
3829,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"USE northwind;
SELECT MIN(OrderDate)
FROM Orders;",7.5,esv2019,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3830,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"USE northwind;
SELECT P.ProductID
, P.ProductName
, S.CompanyName
FROM Products P
	INNER JOIN Suppliers S ON S.supplierID = P.supplierID
    ORDER BY P.ProductID ASC;",7.5,esv2019,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3831,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"USE northwind;
SELECT ProductID
, ProductName
FROM Products
WHERE productname LIKE ""%queso%"";",5.0,esv2019,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3832,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"USE northwind;
SELECT FirstName
, Lastname
, HireDate
FROM Employees
WHERE country = ""USA"" AND title = ""Sales Representative"";",5.0,esv2019,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3833,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"USE northwind;
SELECT 
SH.ShipperID
, SH.CompanyName
, COUNT(O.OrderID)
, COUNT(DISTINCT O.ShippedDate)
FROM Orders O
	INNER JOIN Shippers SH ON SH.ShipperID = O.ShipVia
    GROUP BY SH.ShipperID;",7.5,esv2019,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
3844,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"select Customers.CustomerID, Customers.CompanyName, sum(OrderDetails.Quantity * OrderDetails.UnitPrice) as TotalPrice, sum(OrderDetails.Quantity * OrderDetails.UnitPrice * Discount) as TotalDiscount, (sum(OrderDetails.Quantity * OrderDetails.UnitPrice) - sum(OrderDetails.Quantity * OrderDetails.UnitPrice * Discount)) as TotalAfterDiscounts
,case 
    when TotalAfterDiscounts < 1000 then ""Low""
    when TotalAfterDiscounts between 1000 and 5000
    else ""High""
    End as Category
from Customers
left outer join Orders
on Customers.CustomerID = Orders.CustomerID
and year (Orders.OrderDate) = 2016
left outer join OrderDetails
on Orders.OrderID = OrderDetails.OrderID
left outer join Products
on OrderDetails.ProductID = Products.ProductID
group by Customers.CustomerID, Customers.CompanyName
order by CustomerID;",7.0,pp2630,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;","WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,"The feedback from the TA was WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&nbsp; &nbsp; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&nbsp;
&nbsp; &nbsp; Customers C&nbsp;
&nbsp; &nbsp; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&nbsp; &nbsp; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &nbsp;
GROUP BY C.CustomerID
)
SELECT T.*,&nbsp;
&nbsp; &nbsp; CASE&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN 'Low'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN 'Medium'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; WHEN T.total_price-T.total_discount &gt;= 5000 THEN 'High'&nbsp;
&nbsp; &nbsp; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount asc;"
3846,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select Orders.OrderID, Orders.CustomerID, count(distinct OrderDetails.ProductID), sum(Quantity), sum(OrderDetails.Quantity * OrderDetails.UnitPrice) as TotalPrice
from Customers
left outer join Orders
on Customers.CustomerID = Orders.CustomerID
left outer join OrderDetails
on Orders.OrderID = OrderDetails.OrderID
left outer join Products
on OrderDetails.ProductID = Products.ProductID
group by OrderID
having TotalPrice > 10000
order by TotalPrice desc",10.0,pp2630,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
3847,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, avg(Freight) as avgfreight
from Orders
group by ShipCountry
order by avgfreight desc
limit 3;",7.5,pp2630,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
3848,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select Customers.CustomerID, count(distinct OrderID)
from Customers
left outer join Orders
on Orders.CustomerID = Customers.CustomerID
group by CustomerID;",10.0,pp2630,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
3849,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"select DATE(OrderDate) AS date, TIME(OrderDate) AS time
from Orders
order by OrderDate
limit 1;",7.5,pp2630,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
3850,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select ProductID, ProductName, CompanyName
from Products
left outer join Suppliers
on Products.SupplierID = Suppliers.SupplierID
order by ProductID;",7.5,pp2630,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
3851,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
from Products
where ProductName like ""%queso%"";",5.0,pp2630,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
3852,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"select FirstName, LastName, HireDate
from Employees
where Title = ""Sales Representative"" and Country = ""USA"";",5.0,pp2630,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
3853,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"select ShipperID, CompanyName, Count(distinct OrderID), COUNT(DISTINCT DATE(ShippedDate)) as days
from Shippers
left outer join Orders
on Orders.ShipVia = Shippers.ShipperID
group by ShipperID;",7.5,pp2630,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
3864,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select 
  e.first_name,
  m.frequency as male_frequency,
  f.frequency as female_frequency,
  ABS(LOG(m.frequency / f.frequency)) AS ambiguity_score
from eligible_names as e 
join 
  (select 
    first_name,
    count(*) as frequency
  from actors
  where gender = 'M'
group by  first_name) m on e.first_name = m.first_name
join 
(select 
   first_name,
   count(*) as frequency
   from actors
  where gender = 'F'
group by
    first_name) f on e.first_name = f.first_name
order by ambiguity_score asc;



first_name, male_frequency, female_frequency, ambiguity_score
Mika	53	47	0.12014431142696885
Toni	171	199	0.15164126870136474
Toni	171	199	0.15164126870136474
Leslie	223	264	0.1687773325113095
Leslie	223	264	0.1687773325113095
Dominique	237	287	0.19142207477638867
Dominique	237	287	0.19142207477638867
Laurence	128	159	0.21687393897248938
Laurence	128	159	0.21687393897248938
Alexis	148	119	0.21808877985528843
Alexis	148	119	0.21808877985528843
Daniele	98",2.0,pd2321,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3865,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"drop temporary table if exists female_names;
create temporary table female_names AS
select distinct first_name, name_frequency
from eligible_names
where first_name not in(select distinct first_name 
from actors
where gender = 'M')
order by name_frequency desc;

select * 
from female_names",1.0,pd2321,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3866,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"drop temporary table if exists male_names;
create temporary table male_names AS
select distinct first_name, name_frequency
from eligible_names
where first_name not in(select distinct first_name 
from actors
where gender = 'F')
order by name_frequency desc;

select * 
from male_names",1.0,pd2321,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3867,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"show databases;
use imdb;
show tables;

select * 
from actors 

drop temporary table if exists eligible_names;
create temporary table eligible_names AS
select first_name, count(*) as name_frequency, gender 
from actors
where first_name not like '%.%' and first_name not like '%(%' and first_name not like '%)%'
group by first_name, gender
having name_frequency >= 50;

select * 
from eligible_names
",1.0,pd2321,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3868,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.track_id, t.artist_id, t.album_id, t.track_name, min(tp.played_on) as first_played, max(tp.played_on) as last_played
from track as t 
left join tracks_played as tp on t.track_id = tp.track_id and t.album_id = tp.album_id and t.artist_id - tp.artist_id
group by t.artist_id, t.album_id, t.track_id;",1.0,pd2321,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
3869,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select artist_name, count(distinct album_id) as number_of_albums
from artist as a
left join album on a.artist_id = album.artist_id
group by artist_name, a.artist_id;
",1.0,pd2321,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3870,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select tp.played_on as date_played, tp.artist_id, count(tp.user_id) as number_of_listeners, sum(tp.user_id) as total_listeners, sum(t.time) as total_time, a.artist_name
from tracks_played as tp 
inner join artist as a on tp.artist_id = a.artist_id 
inner join track as t on t.artist_id = tp.artist_id
group by tp.played_on, tp.artist_id, tp.user_id, a.artist_name;",0.8,pd2321,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
3871,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(tp.track_id), sum(t.time)
from users as u 
left join tracks_played as tp on u.user_id = tp.user_id 
left join track as t on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id
group by u.user_id;

user_id, count(tp.track_id), sum(t.time)
1	167	  774.14
2	151	  728.07
3	178   847.84
4	128	   610.25
5	134	   644.97
6	0	
7	130	    605.82
8	135	    668.20
9	0	
10	153	    685.58",1.0,pd2321,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
3872,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id, artist_id, count(*) AS number_of_tracks, sum(time) AS total_time 
from track 
group by album_id, artist_id 
having sum(time) > 60;

album_id, artist_id, number_of_tracks, total_time
1	1	15	70.61
2	1	12	72.81
3	1	14	78.22
4	1	15	77.36
6	1	12	74.27
1	3	11	70.80
1	4	18	67.26
1	5	13	72.96",1.0,pd2321,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
3873,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album.album_id, count(track.track_id) AS number_of_tracks, sum(track.time) AS total_length
from album
inner join track on album.album_id = track.album_id
inner join artist on artist.artist_id = track.artist_id
group by album_id, artist_id;",0.8,pd2321,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
3874,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*)
from album 
group by artist_id;

artist_id, count(*)
1	7
2	1
3	2
4	1
5	1
6	1",1.0,pd2321,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3875,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select * 
from track;

select avg(time) as avg_time, stddev(time) as stddev_time
from track;

avg_time        stddev_time
5.242026	2.163728432900637",1.0,pd2321,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3876,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(*)
from track;

COUNT(*)
153",1.0,pd2321,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3877,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select COUNT(*)
from artist;

COUNT(*)
6",1.0,pd2321,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3878,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT u.first_name, u.last_name
FROM users as u 
LEFT JOIN tracks_played as tp ON u.user_id = tp.user_id
WHERE tp.user_id IS NULL;

first name, last name
Melissa	Mitchell
Seth	Fuente",1.0,pd2321,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3879,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.first_name, u.last_name, u.user_id, a.album_name, tp.played_on, t.track_name
from tracks_played as tp
inner join users as u 
inner join album as a
inner join track as t;

first_name, last_name, user_id, album_name, played_on, track_name

Lynn	Schulman	1	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Samuel	Rivera	2	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Genevie	Williams	3	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Bernard	Cochrane	4	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Michael	Snead	5	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Melissa	Mitchell	6	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Doug	Maples	7	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Joshua	Partlow	8	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Seth	Fuente	9	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Kevin	Wieland	10	Retro - John McCready FAN	2022-12-18 03:58:53	Elegia
Lynn	Schulman	1	Substance (Disc 2)	202",0.7,pd2321,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3880,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select * 
from track as T 
inner join artist as A
where artist_name = ""The Stone Roses""
order by time asc;

album_id, track_id, track_name, time, artist_id
1	4	Your Star Will Shine	2.99	5
1	2	Shake Your Hips 	3.00	5
1	9	Happy	3.08	5
1	7	Dreams Never End	3.20	5
1	5	Straight To The Man	3.26	5
1	11	Ventilator Blues	3.40	5
1	10	Under The Influence Of Love	3.40	5
1	8	Cries And Whispers	3.42	5
2	2	Mesh	3.44	5
1	0	Spinning Around	3.46	5
1	4	Mr. Pastorius	3.54	5
1	1	On A Night Like This	3.55	5
1	11	I'm So High	3.55	5
1	6	Your Disco Needs You	3.56	5
4	1	Procession [Polytechnic of Central London, London 6/12/85]	3.57	5
1	3	Casino Boogie	3.57	5
1	2	So Now Goodbye	3.62	5
1	8	Bittersweet Goodbye	3.72	5
7	2	Angel Dust	3.73	5
1	6	Broken Promise	3.76	5
7	7	As It Is When It Was	3.77	5
1	7	Ain't Gonna Rain Anymore	3.77	5
1	4	Tumbling Dice	3.79	5
4	10	As It Is When It Was [Reading Festival 29/8/93]	3.80	5
7	6	Broken Promise	3.80	5
1	6	Thirsty Dog	3.81	5
1	17	Soul Survivor",0.7,pd2321,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3881,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, R.artist_name, A.album_name
from track as T
inner join album as A on A.album_id = T.album_id and A.artist_id = T.artist_id
inner join artist as R on T.artist_id = R.artist_id;

track_name, artist_name, album_name
Elegia	New Order	Retro - John McCready FAN
In A Lonely Place	New Order	Retro - John McCready FAN
Procession	New Order	Retro - John McCready FAN
Your Silent Face	New Order	Retro - John McCready FAN
Sunrise	New Order	Retro - John McCready FAN
Let's Go	New Order	Retro - John McCready FAN
Broken Promise	New Order	Retro - John McCready FAN
Dreams Never End	New Order	Retro - John McCready FAN
Cries And Whispers	New Order	Retro - John McCready FAN
All Day Long	New Order	Retro - John McCready FAN
Sooner Than You Think	New Order	Retro - John McCready FAN
Leave Me Alone	New Order	Retro - John McCready FAN
Lonesome Tonight	New Order	Retro - John McCready FAN
Every Little Counts	New Order	Retro - John McCready FAN
Run Wild	New Order	Retro - John Mc",1.0,pd2321,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
3882,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select * 
from track as T
inner join album as L
where album_name = ""Second Coming""; 

track_id, track_name, time, artist_id, album_id

track_id	track_name	time	artist_id	album_id
0	Elegia	              4.93	              5	  1
0	In A Lonely Place	6.3	              5	  1
0	Fine Time	       4.71	       5	  1
0	Ceremony [Studio 54, Barcelona 7/7/84]	4.82	5	1
0	Age Of Consent	5.26	       5	  1
0	Ceremony	       4.42        	5	  1
0	State of the Nation	6.56	5	  1
0	Do You Love Me?	5.95	       5	  1
0	In A Silent Way	1.81	        5	  1
0	Shhh/Peaceful	16.67       	5	1
0	Rocks Off	       4.54	     5	1
0	Breaking Into Heaven	11.37	5	1
0	Spinning Around	3.46	       5	1
1	In A Lonely Place	6.26	      5	1
1	Procession	4.46	             5	1
1	Temptation	8.71	             5	1
1	Procession [Polytechnic of Central London, London 6/12/85]	3.57	5	1
1	We All Stand	5.24	             5	1
1	Everything's Gone Green	5.51	5	1
1	Every Little Counts	4.48	       5	1
1	Nobody's Baby No",0.7,pd2321,"


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






"
3883,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"show databases;
use music;
show tables;

select * 
from artist as A
Inner join album as L
where artist_name = ""New Order"";

artist_id, artist_name, artist_id, album_id, album_name
1	New Order	1	2	Substance (Disc 2)
1	New Order	1	3	Retro - Miranda Sawyer POP
1	New Order	1	4	Retro - New Order / Bobby Gillespie LIVE
1	New Order	1	5	Power, Corruption & Lies
1	New Order	1	6	Substance 1987 (Disc 1)
1	New Order	1	7	Brotherhood
1	New Order	2	1	Let Love In
1	New Order	3	1	Live Around The World
1	New Order	3	2	In A Silent Way
1	New Order	4	1	Exile On Main Street
1	New Order	5	1	Second Coming
1	New Order	6	1	Light Years",1.0,pd2321,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3884,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",2,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select *
from track;

Intermission by Alan Wise
In A Silent Way
Rip This Joint
Turd on the Run
Jangling Jack
Full Nelson
I Just Want to See His Face
Sweet Black Angel
Your Star Will Shine
Shake Your Hips

",0.5,pd2321,Missing limit 10,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,The feedback from the TA was Missing limit 10
3885,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",2,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select *
from album
select album_name as album_title from album;

album_title
Retro - John McCready FAN
Substance (Disc 2)
Retro - Miranda Sawyer POP
Retro - New Order / Bobby Gillespie LIVE
Power, Corruption & Lies
Substance 1987 (Disc 1)
Brotherhood
Let Love In
Live Around The World
In A Silent Way
Exile On Main Street
Second Coming
Light Years",1.0,pd2321,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3886,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",2,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select *
from artist;

Kylie Minogue
Miles Davis
New Order
Nick Cave & The Bad Seeds
The Rolling Stones
The Stone Roses",0.5,pd2321,did not sort,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,The feedback from the TA was did not sort
3887,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",2,"5,119,648",Show all the tracks.,Long Answer Question,"select *  
from track;

artist_id , album_id, track_id, track_name, time
1   1   0   Elegia   4.93
1   1   1   In A Lonely Place   6.26
1   1   2   Procession   4.47
1   1   3   Your Silent Face   5.99
1   1   4   Sunrise   6.01
1   1   5   Let's Go   3.90
1   1   6   Broken Promise   3.76
1   1   7   Dreams Never End   3.20
1   1   8   Cries And Whispers   3.42
1   1   9   All Day Long   5.18
1   1   10   Sooner Than You Think   5.21
1   1   11   Leave Me Alone   4.67
1   1   12   Lonesome Tonight   5.19
1   1   13   Every Little Counts   4.47
1   1   14   Run Wild   3.95
1   2   0   In A Lonely Place   6.30
1   2   1   Procession   4.46
1   2   2   Mesh   3.44
1   2   3   Hurt   6.98
1   2   4   The Beach   7.32
1   2   5   Confusion   7.64
1   2   6   Lonesome Tonight   5.20
1   2   7   Murder   3.93
1   2   8   Thieves Like Us   6.95
1   2   9   Kiss Of Death   7.05
1   2   10   Shame Of The Nation   7.91
1   2   11   1963   5.63
1   3   0   Fine Time",1.0,pd2321,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3888,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",2,"5,119,647",Show all the albums.,Long Answer Question,"select *
from album;

ARTIST_ID      ALBUM_ID         ALBUM_NAME
1                      1              Retro - John McCready FAN
1                      2              Substance (Disc 2)
1                      3              Retro - Miranda Sawyer POP
1                      4 Retro - New Order/ Bobby Gillespie LIVE
1                      5           Power, Corruption & Lies
1                      6             Substance 1987 (Disc 1)
1                      7                    Brotherhood
2                      1                    Let Love In
3                      1              Live Around The World
3                      2                   In a Silent Way
4                      1                   Exile on Main Street
5                      1                   Second Coming
6                      1                    Light Years",1.0,pd2321,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3889,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",2,"5,119,646",Show all the artists.,Long Answer Question,"select *
from artist;

ARTIST ID                ARTIST NAME
1                                 New Order
2                      Nick Cave & The Bad Seeds
3                                 Miles Davis
4                              The Rolling Stones
5                              The Stone Roses
6                              Kylie Minogue",1.0,pd2321,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3890,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * 
from track
where track_name like ""%love%"";

Bizarre Love Triangle
Bizarre Love Triangle
Bizarre Love Triangle
Do You Love Me?
Loverman
I Let Love In
Do You Love Me? (Part Two)
Ten Storey Love Song
Love Spreads
Loveboat
Under The Influence Of Love",1.0,pd2321,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3891,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR Boolean
select *
from track
where artist_id= 1 OR artist_id = 3 OR artist_id = 5;

IN operation 
select* 
from track
where artist_id IN (1,3,5);

track_name
Elegia
In A Lonely Place
Procession
Your Silent Face
Sunrise
Let's Go
Broken Promise
Dreams Never End
Cries And Whispers
All Day Long
Sooner Than You Think
Leave Me Alone
Lonesome Tonight
Every Little Counts
Run Wild
In A Lonely Place
Procession
Mesh
Hurt
The Beach
Confusion
Lonesome Tonight
Murder
Thieves Like Us
Kiss Of Death
Shame Of The Nation
1963
Fine Time
Temptation
True Faith
The Perfect Kiss
Ceremony
Regret
Crystal
Bizarre Love Triangle
Confusion
Round And Round
Blue Monday
Brutal
Slow Jam
Everyone Everywhere
Ceremony [Studio 54, Barcelona 7/7/84]
Procession [Polytechnic of Central London, London 6/12/85]
Everything's Gone Green [Tolworth Recreation Centre, London 12/3/85]
In A Lonely Place [Glastonbury Festival 20/6/81]
Age Of Consent [Spectrum Arena, Warrington 1",1.0,pd2321,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3892,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * 
from album
where album_name between ""F%"" and ""R%"";

Power, Corruption & Lies
Let Love In
Live Around The World
In A Silent Way
Light Years",0.7,pd2321,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
3893,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * 
from track
where track_name < ""M%"";

Elegia
In A Lonely Place
Let's Go
Broken Promise
Dreams Never End
Cries And Whispers
All Day Long
Leave Me Alone
Lonesome Tonight
Every Little Counts
In A Lonely Place
Hurt
Confusion
Lonesome Tonight
Kiss Of Death
1963
Fine Time
Ceremony
Crystal
Bizarre Love Triangle
Confusion
Blue Monday
Brutal
Everyone Everywhere
Ceremony [Studio 54, Barcelona 7/7/84]
Everything's Gone Green [Tolworth Recreation Centre, London 12/3/85]
In A Lonely Place [Glastonbury Festival 20/6/81]
Age Of Consent [Spectrum Arena, Warrington 1/3/86]
Elegia [Glastonbury Festival 19/6/87]
Fine Time [Popular Creek Music Theatre, Chicago 30/6/89]
As It Is When It Was [Reading Festival 29/8/93]
Intermission By Alan Wise [Olympia, Paris 12/11/01]
Crystal [Big Day Out, Gold Coast 20/1/02]
Age Of Consent
5 8 6
Ecstasy
Leave Me Alone
Ceremony
Everything's Gone Green
Blue Monday
Confusion
Bizarre Love Triangle
Every Little Counts
Ang",1.0,pd2321,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3894,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * 
from track
where artist_id = 3 and album_id = 2;

artist_id = 3, album_id = 2, track_id = 0, track_name = Shhh/Peaceful 
artist_id = 3, album_id = 2, track_id = 1, track_name = In a Silent Way/ It's About That Time",1.0,pd2321,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3895,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * 
from album
where artist_id = 4;

artist_id 4 , album_id 1, album_name Exile on Main Street

",1.0,pd2321,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3896,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * 
from artist 
where artist_name = ""The Rolling Stones"";

 artist_id 4 - The Rolling Stones ",1.0,pd2321,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3897,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * 
from artist 
where artist_id = 5;

5 - The Stone Roses 
",1.0,pd2321,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3904,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select * 
from track

Intermission by Alan Wise
In A Silent Way 
Rip This Joint 
Turd on the Run
Jangling Jack 
Full Nelson 
I Just Want to See His Face 
Sweet Black Angel
Your Star Will Shine 
Shake Your Hips",0.5,pd2321,Missing 10 shortest tracks,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,The feedback from the TA was Missing 10 shortest tracks
3905,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select * 
from album
select album_name as album_title from album

album_title
Retro - John McCready FAN
Substance (Disc 2)
Retro - Miranda Sawyer POP
Retro - New Order / Bobby Gillespie LIVE
Power, Corruption & Lies
Substance 1987 (Disc 1)
Brotherhood
Let Love In
Live Around The World
In A Silent Way
Exile On Main Street
Second Coming
Light Years",0.5,pd2321,Missing artist id,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,The feedback from the TA was Missing artist id
3906,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select * 
from artist

Kylie Minogue
Miles Davis 
New Order 
Nick Cave & The Bad Seeds 
The Rolling Stones 
The Stone Roses",0.5,pd2321,Did not sort alphabetically.,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,The feedback from the TA was Did not sort alphabetically.
3907,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select *  
from track

artist_id , album_id, track_id, track_name, time
1	1	0	Elegia	4.93
1	1	1	In A Lonely Place	6.26
1	1	2	Procession	4.47
1	1	3	Your Silent Face	5.99
1	1	4	Sunrise	6.01
1	1	5	Let's Go	3.90
1	1	6	Broken Promise	3.76
1	1	7	Dreams Never End	3.20
1	1	8	Cries And Whispers	3.42
1	1	9	All Day Long	5.18
1	1	10	Sooner Than You Think	5.21
1	1	11	Leave Me Alone	4.67
1	1	12	Lonesome Tonight	5.19
1	1	13	Every Little Counts	4.47
1	1	14	Run Wild	3.95
1	2	0	In A Lonely Place	6.30
1	2	1	Procession	4.46
1	2	2	Mesh	3.44
1	2	3	Hurt	6.98
1	2	4	The Beach	7.32
1	2	5	Confusion	7.64
1	2	6	Lonesome Tonight	5.20
1	2	7	Murder	3.93
1	2	8	Thieves Like Us	6.95
1	2	9	Kiss Of Death	7.05
1	2	10	Shame Of The Nation	7.91
1	2	11	1963	5.63
1	3	0	Fine Time	4.71
1	3	1	Temptation	8.71
1	3	2	True Faith	5.88
1	3	3	The Perfect Kiss	4.83
1	3	4	Ceremony	4.41
1	3	5	Regret	4.14
1	3	6	Crystal	6.83
1	3	7	Bizarre Love Triangle	4.35
1	3	8	Confusion	8.22
1	3	9	Round And Round	4.5",1.0,pd2321,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3908,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select *
from album

ARTIST_ID      ALBUM_ID         ALBUM_NAME
1                      1              Retro - John McCready FAN
1                      2              Substance (Disc 2)
1                      3              Retro - Miranda Sawyer POP
1                      4 Retro - New Order/ Bobby Gillespie LIVE
1                      5           Power, Corruption & Lies
1                      6             Substance 1987 (Disc 1)
1                      7                    Brotherhood
2                      1                    Let Love In 
3                      1              Live Around The World
3                      2                   In a Silent Way
4                      1                   Exile on Main Street
5                      1                   Second Coming
6                      1                    Light Years",1.0,pd2321,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3909,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select *
from artist;

ARTIST ID                ARTIST NAME
1                                 New Order
2                      Nick Cave & The Bad Seeds
3                                 Miles Davis
4                              The Rolling Stones
5                              The Stone Roses
6                              Kylie Minogue ",1.0,pd2321,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
3916,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT mt.first_name, COUNT(*) AS cnt,
(COUNT(mt.first_name)/COUNT(*)) AS male_freq,
(COUNT(ft.first_name)/COUNT(*)) AS female_freq,
ABS(log(male_freq)/(female_frq)) AS abs_result
FROM male_table mt INNER JOIN female_table ft ON mt.first_name = ft.first_name
ORDER BY abs_result;",1.6,ml8055,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
3917,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT e.first_name, COUNT(*) AS count_name 
FROM eligible_names e INNER JOIN actors a ON e.first_name = a.first_name 
WHERE a.gender = 'F' AND e.first_name NOT IN (SELECT DISTINCT a.first_name FROM actors a WHERE a.gender = 'M')
GROUP BY e.first_name
ORDER BY count_name DESC;",0.8,ml8055,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
3918,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT e.first_name, COUNT(*) AS count_name 
FROM eligible_names e INNER JOIN actors a ON e.first_name = a.first_name 
WHERE a.gender = 'M' AND e.first_name 
              NOT IN (SELECT DISTINCT a.first_name FROM actors a WHERE a.gender = 'F')
GROUP BY e.first_name
ORDER BY count_name DESC;",0.8,ml8055,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
3919,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
CREATE TEMPORARY TABLE eligible_names AS 
	SELECT first_name,COUNT(*) AS num_f_name 
	FROM actors a
	WHERE first_name NOT LIKE '%.%'
	GROUP BY first_name
	HAVING num_f_name >= 50;",0.9,ml8055,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
3920,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT tp.artist_id, tp.album_id, tp.track_id, t.track_name, tp.played_on FROM tracks_played tp 
INNER JOIN track t ON t.track_id =tp.track_id ORDER BY t.track_id;",0.8,ml8055,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
3921,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_id, a.artist_name, COUNT(a2.album_id) 
FROM artist a 
INNER JOIN album a2 ON a.artist_id= a2.artist_id 
GROUP BY a.artist_id 
ORDER BY a.artist_id;",1.0,ml8055,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
3922,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT tp.played_on AS date_played, tp.artist_id, a.artist_name, u.user_id AS users, t.`time` AS total_time, COUNT(t.track_id ) AS total_tracks 
FROM tracks_played tp
INNER JOIN track t ON t.track_id = tp.track_id 
INNER JOIN artist a ON t.artist_id =a.artist_id
INNER JOIN users u ON tp.user_id = u.user_id
GROUP BY t.track_id;",0.8,ml8055,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
3923,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id,COUNT(DISTINCT t.track_name)AS tracks_played, SUM(t.`time`) AS total_time 
FROM track t
INNER JOIN tracks_played tp ON t.track_id = tp.track_id
INNER JOIN users u ON tp.user_id = u.user_id 
GROUP BY u.user_id
ORDER BY u.user_id;",0.8,ml8055,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
3924,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id,SUM(`time`) FROM track t GROUP BY album_id;",0.8,ml8055,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60"
3925,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT tp.album_id, COUNT(tp.track_id), SUM(t.`time`) FROM tracks_played tp INNER JOIN track t ON tp.track_id = tp.track_id GROUP BY tp.album_id; ",0.8,ml8055,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
3926,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_name) AS cnt_albums FROM album a GROUP BY artist_id;",1.0,ml8055,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
3927,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(`time`) AS avg_time, STDDEV(`time`) AS std_time FROM track t;",1.0,ml8055,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
3928,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,SELECT COUNT(*)  FROM track t;,1.0,ml8055,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
3929,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,SELECT COUNT(*)  FROM artist a;,1.0,ml8055,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
3930,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT u.first_name , u.last_name  
FROM users u 
LEFT JOIN tracks_played tp ON u.user_id = tp.user_id 
WHERE tp.played_on  IS NULL;",1.0,ml8055,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
3931,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT u.user_id , u.first_name , u.last_name , a.album_name , t.track_name , tp.played_on FROM tracks_played tp 
INNER JOIN users u ON u.user_id = tp.user_id
INNER JOIN album a ON a.artist_id = tp.artist_id
INNER JOIN track t ON t.track_id = tp.track_id
ORDER BY played_on;",1.0,ml8055,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
3932,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT t.track_id , t.track_name , a2.artist_id , a.album_id , t.`time`  FROM track t 
INNER JOIN album a ON t.artist_id = a.artist_id
INNER JOIN artist a2 ON t.artist_id =a2.artist_id
WHERE a2.artist_name = 'The Stone Roses' ORDER BY t.`time`;",1.0,ml8055,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
3933,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT t.track_name , a2.artist_name , a.album_name FROM track t
LEFT JOIN album a ON t.artist_id = a.artist_id
INNER JOIN artist a2 ON a.artist_id = a2.artist_id;",0.7,ml8055,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
3934,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT t.track_id , t.track_name, a.artist_id , a.album_id, t.`time` , a.album_name 
FROM track t
INNER JOIN album a ON a.artist_id = t.artist_id
WHERE album_name = 'Second Coming' ORDER BY t.track_id;",1.0,ml8055,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
3935,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"USE music;
SELECT a.artist_id, a.artist_name, a2.artist_id, a2.album_id, a2.album_name FROM artist a
LEFT JOIN album a2 ON a.artist_id = a2.artist_id
WHERE artist_name = 'New Order' ORDER BY album_id;",1.0,ml8055,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
3943,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT track_name FROM track WHERE track_name LIKE '%Love%';

track_name                 
---------------------------
Bizarre Love Triangle      
Bizarre Love Triangle      
Bizarre Love Triangle      
Do You Love Me?            
Loverman                   
I Let Love In              
Do You Love Me? (Part Two) 
Ten Storey Love Song       
Love Spreads               
Loveboat                   
Under The Influence Of Love",1.0,ml8055,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
3944,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT artist_id, track_name FROM track WHERE artist_id IN (1,3,5);
SELECT artist_id, track_name FROM track WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

artist_id|track_name                                                          
---------+--------------------------------------------------------------------
        1|Elegia                                                              
        1|In A Lonely Place                                                   
        1|Procession                                                          
        1|Your Silent Face                                                    
        1|Sunrise                                                             
        1|Let's Go                                                            
        1|Broken Promise                                                      
        1|Dreams Never End                                                    
        1|Cries And Whispers     ",1.0,ml8055,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
3945,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name 
FROM album 
WHERE album_name BETWEEN 'E%' AND 'S%' ORDER BY album_name ;


album_name                              
----------------------------------------
Exile On Main Street                    
In A Silent Way                         
Let Love In                             
Light Years                             
Live Around The World                   
Power, Corruption & Lies                
Retro - John McCready FAN               
Retro - Miranda Sawyer POP              
Retro - New Order / Bobby Gillespie LIVE",0.7,ml8055,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
3946,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name FROM track WHERE track_name < 'M%' ORDER BY track_name ;


track_name                                                          
--------------------------------------------------------------------
1963                                                                
5 8 6                                                               
Age Of Consent                                                      
Age Of Consent [Spectrum Arena, Warrington 1/3/86]                  
Ain't Gonna Rain Anymore                                            
All Day Long                                                        
All Day Long                                                        
All Down The Line                                                   
Amandla                                                             
Angel Dust                                                          
As It Is When It Was                                                
As It Is W",1.0,ml8055,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
3947,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT track_name FROM track WHERE artist_id =3 AND album_id =2;


               track_name                          |
        ------------------------------------+
             Shhh/Peaceful                       |
In A Silent Way/It's About That Time|",1.0,ml8055,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
3948,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT album_name FROM album WHERE artist_id = 4;

album_name          |
--------------------+
Exile On Main Street|",1.0,ml8055,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
3949,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist WHERE artist_name = 'The Rolling Stones';

artist_id|artist_name       |
---------+------------------+
        4|The Rolling Stones|",1.0,ml8055,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
3950,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM artist WHERE artist_id = 5;

artist_id|artist_name    |
---------+---------------+
        5|The Stone Roses|",1.0,ml8055,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
3951,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT * FROM track 
ORDER BY time 
LIMIT 10;",1.0,ml8055,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
3952,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title 
FROM album;",1.0,ml8055,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
3953,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name 
FROM artist 
ORDER BY artist_name;",1.0,ml8055,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
3954,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,SELECT * FROM track;,1.0,ml8055,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
3955,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,SELECT * FROM album;,1.0,ml8055,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
3956,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,SELECT * FROM artist;,1.0,ml8055,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4014,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT M.first_name,F.first_name,F.occurrence_count
FROM (
    SELECT first_name, COUNT(*) AS occurrence_count
    FROM eligible_name
    WHERE gender = 'M'
    GROUP BY first_name
) M
INNER JOIN (
    SELECT first_name, COUNT(*) AS occurrence_count
    FROM eligible_name
    WHERE gender = 'F'
    GROUP BY first_name
) F
ON M.first_name = F.first_name
WHERE ABS(M.occurrence_count - F.occurrence_count) = 0;
",1.4,yw5786,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4015,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS occurrence_count
FROM eligible_name
WHERE gender = 'F' 
GROUP BY first_name;
",0.7,yw5786,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4016,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS occurrence_count
FROM eligible_name
WHERE gender = 'M' 
GROUP BY first_name;
",0.7,yw5786,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4017,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_name
SELECT id, first_name, last_name, gender
FROM actors
WHERE first_name IN (
    SELECT first_name
    FROM actors
    GROUP BY first_name
    HAVING COUNT(first_name) > 50
);
 
",0.7,yw5786,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4018,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.artist_id,t.album_id,t.track_id,t.track_name ,min(tp.played_on) as min_played_on,max(tp.played_on) as max_played_on from track t
LEFT join tracks_played tp on t.album_id = tp.album_id and t.artist_id = tp.artist_id and t.track_id = tp.track_id
group by t.artist_id,t.album_id,t.track_id

",1.0,yw5786,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
4019,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select ar.artist_id,ar.artist_name,count(al.album_id) from artist ar
left join album al on ar.artist_id = al.artist_id
GROUP BY artist_id
 
",1.0,yw5786,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4020,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select
	date_format(tp.played_on, '%Y-%m-%d') AS date_played,tp.artist_id,ar.artist_name,count(distinct tp.user_id) as users,
 sum(t.time) as total_time,count(tp.track_id) as total_tracks
from
	tracks_played tp
left join	artist ar on tp.artist_id = ar.artist_id
left join track t on t.album_id = tp.album_id and t.artist_id = tp.artist_id and t.track_id = tp.track_id
group by
	date_played,tp.artist_id
order by date_played 
",1.0,yw5786,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
4021,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id,count(tp.track_id) as tracks_played,ifnull(sum(t.time),0.00) as total_time from users u
left join tracks_played tp on u.user_id = tp.user_id
left join track t on tp.artist_id = t.artist_id and tp.album_id = t.album_id and tp.track_id = t.track_id
group by u.user_id

 
",1.0,yw5786,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
4022,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select * from (
select al.artist_id,al.album_id,sum(t.time) as sum_time from album al 
left join track t on t.artist_id = al.artist_id and t.album_id = al.album_id
group by al.artist_id,al.album_id
) t where t.sum_time>60

 
",1.0,yw5786,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4023,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select al.artist_id,al.album_id,count(1),sum(t.time)  from album al 
left join track t on t.artist_id = al.artist_id and t.album_id = al.album_id
group by al.artist_id,al.album_id
",1.0,yw5786,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
4024,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id,count(1) as cnt_albums  from album
group by artist_id
",1.0,yw5786,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4025,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time,std(time) as std_time  from track",1.0,yw5786,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4026,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(1) from track,1.0,yw5786,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4027,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(1) from artist,1.0,yw5786,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4028,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select first_name,last_name from users where user_id not in (select user_id from tracks_played)",1.0,yw5786,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4029,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id,u.first_name,u.last_name,al.album_name,t.track_name,tp.played_on from tracks_played tp
left join users u on u.user_id = tp.user_id 
left join album al on tp.album_id = al.album_id and tp.artist_id = al.artist_id and al.artist_id = tp.artist_id
left join track t on tp.track_id = t.track_id and t.album_id = tp.album_id and tp.album_id and t.artist_id = tp.artist_id
order by u.user_id,tp.played_on
",1.0,yw5786,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4030,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track_id,track_name,artist_id,album_id,time from track where artist_id in (
select artist_id from artist where artist_name = 'The Stone Roses') order by time
",1.0,yw5786,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4031,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name,ar.artist_name,al.album_name from track t,artist ar,album al
where al.artist_id = ar.artist_id and t.artist_id = ar.artist_id and t.album_id = al.album_id
",1.0,yw5786,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
4032,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select t.track_id,t.track_name,t.artist_id,t.album_id,t.time from track t
left join album a on a.artist_id = t.artist_id and a.album_id = t.album_id
where a.album_name = 'Second Coming'
",1.0,yw5786,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4033,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select t.*,a.* from artist t,album a 
where  t.artist_id = a.artist_id and artist_name = 'New Order'
",1.0,yw5786,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4040,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,select * from track where track_name like '%love%';,1.0,yw5786,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4041,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from artist where artist_id in (1,3,5);
select * from artist where artist_id = 1 or  artist_id = 3 or  artist_id = 5;",1.0,yw5786,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4042,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select album_name from album where LEFT(album_name,1) > 'E' and LEFT(album_name,1) < 'S';",1.0,yw5786,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
4043,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select track_name from track where LEFT(track_name,1) <= 'M';
order by track_name;
",0.8,yw5786,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;track_name&nbsp;&lt;&nbsp;'M'","SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;track_name&nbsp;&lt;&nbsp;'M'"
4044,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from track where artist_id = 3 and album_id = 2;,1.0,yw5786,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4045,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,select * from album where artist_id = 4;,1.0,yw5786,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4046,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,select * from artist where artist_name = 'The Rolling Stones';,1.0,yw5786,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4047,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,select * from artist where artist_id = 5;,1.0,yw5786,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4048,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select track_id,track_name,artist_id,album_id,time from track order by time limit 10;",1.0,yw5786,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4049,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id,album_name as album_title from album;",1.0,yw5786,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4050,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name 
from artist ORDER BY artist_name;",1.0,yw5786,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4051,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select * 
from track;",1.0,yw5786,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4052,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select * 
from album;",1.0,yw5786,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4053,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select * 
from artist;",1.0,yw5786,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4072,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"Show Databases;
Use imdb;


Create temporary table eligible_names
Select A.first_name, A.gender, Count(A.first_name) AS fname_count
From actors AS A
WHERE A.first_name NOT LIKE '%.%' 
	AND A.first_name NOT LIKE '%(%' 
	AND A.first_name NOT LIKE '%)%'
GROUP BY A.first_name,  A.gender 
HAVING fname_count > 50
ORDER BY fname_count DESC;",0.8,mbw9622,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4073,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS num_ablums
FROM album
GROUP BY artist_id
ORDER BY artist_id;",1.0,mbw9622,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4074,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time), stddev(time)
FROM track;",1.0,mbw9622,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4075,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"Select Count(*)
From track;",1.0,mbw9622,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4076,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"Select Count(*)
From artist;",1.0,mbw9622,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4077,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
From users AS U
	LEFT OUTER JOIN tracks_played AS T ON T.user_id = U.user_id
WHERE track_id IS NULL;",1.0,mbw9622,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4078,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.first_name, U.last_name, U.user_id, A.album_name, T.track_name, TP.played_on
FROM tracks_played AS TP
	INNER JOIN users AS U ON U.user_id=TP.user_id
	INNER JOIN track AS T ON T.track_id = TP.track_id
	INNER JOIN album AS A ON A.album_id = T.album_id;",1.0,mbw9622,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4079,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_name, time 
FROM artist AS A
	INNER JOIN track AS T ON A.artist_id = T.artist_id
WHERE A.artist_name = ""The Stone Roses""
ORDER BY T.time ASC;",1.0,mbw9622,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4080,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, album_name, artist_name
From track AS T
	INNER JOIN album AS A ON T.album_id = A.album_id
    INNER JOIN artist AS B ON A.artist_id = B.artist_id;",0.7,mbw9622,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
4081,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT track_name
From album as B
	Inner JOIN track AS T ON T.album_id  = B.album_id
WHERE B.album_name = ""Second Coming"";",0.7,mbw9622,"SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'"
4082,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"Select B.album_name
From artist AS A
	INNER JOIN album AS B ON A.artist_ID = B.artist_ID 
WHERE artist_name = ""New Order"";",1.0,mbw9622,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4090,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"Use music;

select *
from track 
WHERE track_name contains ""love"";",1.0,mbw9622,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4091,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Use music;

select *
from track 
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;",0.5,mbw9622,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;IN&nbsp;(1,3,5)","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;IN&nbsp;(1,3,5)"
4092,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"Use music;

select *
from album 
WHERE album_name > 'E'
AND  album_name < 'S';",0.7,mbw9622,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
4093,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"Use music;

select *
from track 
WHERE track_name < ""M""
Order BY track_name DESC;",1.0,mbw9622,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4094,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"Use music;

select *
from track
WHERE artist_id = 3 AND album_id = 2;",1.0,mbw9622,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4095,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"Use music;

select *
from album
WHERE artist_id = 4;",1.0,mbw9622,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4096,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"Use music;

select *
From artist
WHERE artist_name = ""The Rolling Stones"";",1.0,mbw9622,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4097,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"Use music;

select *
From artist

WHERE artist_id = 5;",1.0,mbw9622,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4098,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SHOW DATABASES;

Use music;

select track_name, time
FROM track
ORDER BY time asc, time
LIMIT 10;",1.0,mbw9622,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4099,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SHOW databases;

USE music;

SELECT album_name as album_title, artist_id
FROM album",1.0,mbw9622,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4100,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SHOW databases;

USE music;

SELECT artist_name
FROM artist;",1.0,mbw9622,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4101,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SHOW databases;

USE music;

SELECT *
FROM track;",1.0,mbw9622,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4102,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SHOW databases;

USE music;

SELECT *
FROM album;",1.0,mbw9622,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4103,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SHOW databases;

USE music;

SELECT *
FROM artist;",1.0,mbw9622,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4122,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT A.first_name, 
	COUNT(A.first_name) AS total_cnt, 
    FN.female_cnt, MN.male_cnt,
	ROUND(ABS(log(FN.female_cnt / MN.male_cnt)),2) AS most_amb
FROM actors AS A
	JOIN female_names AS FN ON A.first_name = FN.first_name
    JOIN male_names AS MN ON A.first_name = MN.first_name
    JOIN eligible_names AS EN ON A.first_name = EN.first_name
    GROUP BY A.first_name, FN.female_cnt, MN.male_cnt, most_amb
    ORDER BY most_amb;",1.8,fb2262,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4123,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS
SELECT first_name, COUNT(*) AS female_cnt
FROM actors
WHERE gender = 'F' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
GROUP BY first_name, gender
HAVING female_cnt >= 50
ORDER BY female_cnt DESC;


SELECT A.first_name, COUNT(A.first_name) AS total_cnt, FN.female_cnt,
	COUNT(A.first_name)-FN.female_cnt AS male_cnt
FROM actors AS A
	JOIN female_names FN ON A.first_name = FN.first_name
GROUP BY A.first_name, FN.female_cnt
HAVING male_cnt = 0;",1.0,fb2262,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4124,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) AS male_cnt
FROM actors
WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
GROUP BY first_name, gender
HAVING male_cnt >= 50
ORDER BY male_cnt DESC;


SELECT A.first_name, COUNT(A.first_name) AS total_cnt, MN.male_cnt,
	COUNT(A.first_name)-MN.male_cnt AS female_cnt
FROM actors AS A
	JOIN male_names MN ON A.first_name = MN.first_name
GROUP BY A.first_name, MN.male_cnt
HAVING female_cnt = 0;",1.0,fb2262,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4125,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	 SELECT first_name, COUNT(*)
		FROM actors
		WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
		GROUP BY first_name
		HAVING COUNT(*) >= 50;",1.0,fb2262,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4126,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT MAX(played_on), MIN(played_on)
FROM track AS T 
LEFT JOIN tracks_played AS P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
ORDER BY P.played_on;",0.7,fb2262,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
4127,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT R.artist_id, R.artist_name , COUNT(*) AS num_albums 
FROM artist R JOIN album A ON A.artist_id = R.artist_id 
GROUP BY R.artist_id , R.artist_name;",1.0,fb2262,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4128,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT *
FROM tracks_played AS TP
  INNER JOIN track AS T ON TP.track_id = T.track_id
  INNER JOIN users AS U ON TP.user_id = U.user_id;",0.8,fb2262,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
4129,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id, SUM(time)
FROM track
GROUP BY artist_id, album_id
HAVING SUM(time) > 60;",1.0,fb2262,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4130,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_id) AS num_tracks, COUNT(time) AS length_tracks
FROM track
GROUP BY album_id;",0.8,fb2262,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id&nbsp;






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id&nbsp;






"
4131,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,fb2262,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4132,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,fb2262,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4133,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,fb2262,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4134,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,fb2262,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4135,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT *
FROM users AS U
  LEFT OUTER JOIN track AS T ON U.user_id = T.track_id
WHERE U.user_id IS NULL
ORDER BY U.user_id;",0.7,fb2262,"SELECT U.first_name, U.last_name
FROM users U&nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id&nbsp;
WHERE P.user_id IS NULL","SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,"The feedback from the TA was SELECT U.first_name, U.last_name
FROM users U&nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id&nbsp;
WHERE P.user_id IS NULL"
4136,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played AS TP
  INNER JOIN users AS U ON TP.user_id = U.user_id
  INNER JOIN album AS A ON TP.album_id = A.album_id
  INNER JOIN track AS T ON TP.track_id = T.track_id;",1.0,fb2262,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4137,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.*
FROM track AS T
JOIN artist AS R ON T.artist_id = R.artist_id
WHERE R.artist_name = 'The Stone Roses'
ORDER BY T.time;


",1.0,fb2262,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4138,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name , artist_name , album_name 
FROM track AS T 
JOIN artist AS R ON T.artist_id = R.artist_id 
JOIN album AS A ON A.album_id = T.album_id AND A.artist_id = T.artist_id;",1.0,fb2262,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
4139,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.*
FROM album AS A
INNER JOIN track AS T ON T.album_id = A.album_id AND T.artist_id = A.artist_id
WHERE A.album_name = 'Second Coming';",1.0,fb2262,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4140,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM album AS A
  INNER JOIN artist AS AR ON A.artist_id = AR.artist_id
WHERE AR.artist_name = 'New Order';",1.0,fb2262,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4141,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%Love%';",0.95,fb2262,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4142,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT *
FROM track
WHERE artist_id IN (1,3,5);",0.95,fb2262,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4143,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name >= 'F' AND album_name < 'S';",0.95,fb2262,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
4144,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M';",0.95,fb2262,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4145,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",0.95,fb2262,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4146,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",0.95,fb2262,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4147,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';",0.95,fb2262,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4148,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;",0.95,fb2262,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4149,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time
LIMIT 10;",0.95,fb2262,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4150,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",0.95,fb2262,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4151,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",0.95,fb2262,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4152,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",0.95,fb2262,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4153,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",0.95,fb2262,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4154,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",0.95,fb2262,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4161,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"Create Temporary Table Customers2016 AS 
SELECT Orders.CustomerID, CompanyName, year(OrderDate) as OrderYear, count(OrderDetails.productID) As NumProducts, sum(Quantity) As TotalUnits, SUM(OrderDetails.UnitPrice*OrderDetails.Quantity) As TotalOrderPrice, SUM(OrderDetails.UnitPrice*OrderDetails.Quantity*OrderDetails.Discount) AS TotalDiscount
FROM Orders 
JOIN Customers ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON OrderDetails.OrderID = Orders.OrderID
JOIN Products ON OrderDetails.ProductID = Products.ProductID
GROUP BY Customers.CustomerID, CompanyName, OrderYear
HAVING OrderYear = 2016
ORDER BY Customers.CustomerID ASC;

SELECT Customers2016.CustomerID, Customers2016.CompanyName, Customers2016.TotalOrderPrice, Customers2016.TotalDiscount,
		CASE 
			WHEN Customers2016.TotalOrderPrice <= 1000 THEN 'LOW'
            WHEN Customers2016.TotalOrderPrice > 5000 THEN 'HIGH'
            ELSE 'MED'
		END AS CustomerCategory
FROM Customers2016 ",10.0,jrj9504,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
4163,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT CustomerID, Orders.OrderID, count(OrderDetails.productID) As NumProducts, sum(Quantity) As TotalUnits, SUM(OrderDetails.UnitPrice*OrderDetails.Quantity) As TotalOrderPrice
FROM Orders 
JOIN OrderDetails ON OrderDetails.OrderID = Orders.OrderID
JOIN Products ON OrderDetails.ProductID = Products.ProductID
GROUP BY CustomerID, Orders.OrderID
HAVING TotalOrderPrice >10000
ORDER BY TotalOrderPrice Desc;",10.0,jrj9504,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
4164,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, avg(Freight) as AvgFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3;",7.5,jrj9504,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
4165,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT CustomerID, Count(OrderID) As NumOrders
From Orders
GROUP BY CustomerID
ORDER BY NumOrders DESC; ",8.0,jrj9504,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
4166,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT date(OrderDate) AS OrdDate, time(OrderDate) AS OrdTime
FROM Orders
ORDER BY orderdate ASC
LIMIT 1;",7.5,jrj9504,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
4167,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT ProductID, ProductName, CompanyName
FROM Products
INNER JOIN Suppliers On Suppliers.SupplierID = Products.SupplierID
ORDER By ProductID;",7.5,jrj9504,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
4168,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName 
FROM Products
Where ProductName like ""%queso%"";",5.0,jrj9504,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
4169,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;
SELECT FirstName, LastName, HireDate  
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,jrj9504,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
4170,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT ShipperID, CompanyName, SUM(OrderID) as TotalOrders, count(distinct ShippedDate) as UniquePickDays
FROM Orders
JOIN Shippers ON Orders.ShipVia = Shippers.ShipperID
GROUP BY ShipperID, CompanyName",6.5,jrj9504,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
4216,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names_both AS
Select Testing.first_name, Testing.counter,Festing.gender
From eligible_names_male Testing
	INNER JOIN eligible_names_female Festing ON Testing.first_name = Festing.first_name
GROUP BY first_name,counter, gender;",1.4,dsa285,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4217,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Select first_name, counter,gender
From eligible_names
WHERE gender='F'
GROUP BY first_name,counter, gender;

*Do this to complete question 4*

CREATE TEMPORARY TABLE eligible_names_female AS
Select first_name, counter,gender
From eligible_names
WHERE gender='F'
GROUP BY first_name,counter, gender;",0.7,dsa285,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4218,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"Select first_name, counter,gender
From eligible_names
WHERE gender='M'
GROUP BY first_name,counter, gender;

*Do this to complete question 4*

CREATE TEMPORARY TABLE eligible_names_male AS
Select first_name, counter,gender
From eligible_names
WHERE gender='M'
GROUP BY first_name,counter, gender;",0.7,dsa285,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4219,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name,Count(last_name) AS counter, gender
FROM actors
WHERE first_name NOT LIKE '%.%' 
AND first_name NOT LIKE '%(I)%' 
AND first_name NOT LIKE '%(II)%' 
AND first_name NOT LIKE '%(III)%'
AND first_name NOT LIKE '%(IV)%' 
AND first_name NOT LIKE '%(V)%' 
AND first_name NOT LIKE '%(VI)%' 
AND first_name NOT LIKE '%(VII)%' 
AND first_name NOT LIKE'%(VIII)%' 
AND first_name NOT LIKE '%(IX)%'
AND first_name NOT LIKE '%(X)%' 
AND first_name NOT LIKE '%(XI)%'
GROUP BY first_name, gender 
HAVING COUNT(counter)>50;",1.0,dsa285,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4220,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"USE music;
SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on), MAX(played_on)
from track T
RIGHT JOIN tracks_played M ON T.track_id = M.track_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,dsa285,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
4221,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"USE music;
SELECT G.artist_id, M.artist_name, COUNT(album_id) as num_albums
FROM album G
	INNER JOIN artist M ON G.artist_id = M.artist_id
GROUP BY G.artist_id,M.artist_name;",1.0,dsa285,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4222,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"USE music;
SELECT played_on,M.artist_id,artist_name, user_id, SUM(time), COUNT(M.track_id)
from tracks_played M 
	Inner JOIN artist G ON M.artist_id = G.artist_id
    INNER JOIN track X ON M.artist_id = X.artist_id
Group BY artist_id, played_on,user_id;",0.8,dsa285,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
4223,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"USE music;
SELECT M.user_id, COUNT(T.track_id), SUM(T.time) as total_time
from tracks_played G
	RIGHT JOIN users M ON M.user_id = G.user_id
    LEFT JOIN track T ON T.track_id = G.track_id AND T.artist_id = G.artist_id AND G.album_id = T.album_id
Group by M.user_id
ORDER BY M.user_id;",1.0,dsa285,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
4224,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"USE music;
SELECT G.album_id, G.artist_id,SUM(time) as total_time
from album G
	INNER JOIN track M ON G.artist_id = M.artist_id AND G.album_id = M.album_id
Group by artist_id, album_id
HAVING total_time > 60;",1.0,dsa285,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4225,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"USE music;
SELECT G.album_id, Count(track_name), SUM(time)
from album G
    Inner Join track M ON G.album_id = M.album_id AND G.artist_id = M.artist_id
Group by G.album_id;",0.8,dsa285,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
4226,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"USE music;
SELECT G.artist_id, COUNt(*)
FROM artist M
	INNER JOIN album G ON M.artist_id = G.artist_id
Group by artist_id;",1.0,dsa285,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4227,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"USE music;
SELECT AVG(time),STDDEV(time)
FROM track;",1.0,dsa285,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4228,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"USE music;
SELECT COUNT(*)
FROM track;",1.0,dsa285,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4229,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"USE music;
SELECT COUNT(*)
FROM artist;",1.0,dsa285,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4230,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"USE music;
SELECT first_name, last_name
FROM users G
	LEFT OUTER JOIN tracks_played M ON M.user_id = G.user_id
WHERE played_on IS NULL;",1.0,dsa285,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4231,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"USE music;
SELECT G.user_id,first_name,last_name, album_name,track_name,played_on
FROM tracks_played G
	INNER JOIN users M ON G.user_id = M.user_id
	INNER JOIN album X ON X.album_id = G.album_id AND X.artist_id = G.artist_id
    INNER JOIN track V ON V.track_id = G.track_id AND V.artist_id = G.artist_id AND V.track_id = G.track_id;",1.0,dsa285,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4232,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"USE music;
SELECT *
FROM artist G
	INNER JOIN track M ON G.artist_id = M.artist_id
Where artist_name = ""The Stone Roses""
ORDER BY time ASC;",1.0,dsa285,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4233,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"USE music;
SELECT M.track_name, G.album_name, H.artist_name
FROM album G
	INNER JOIN track M ON M.album_id = G.album_id AND M.artist_id = G.artist_id
    INNER JOIN artist H ON H.artist_id = G.artist_id;",1.0,dsa285,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
4234,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"USE music;
SELECT *
FROM track G
	INNER JOIN album M ON M.artist_id = G.artist_id
Where album_name = ""Second Coming"";",1.0,dsa285,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4235,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"USE music;
SELECT *
FROM album G
	INNER JOIN artist M ON G.artist_id = M.artist_id
Where artist_name = ""New Order"";",1.0,dsa285,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4236,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"USE music;
SELECT *
FROM track
WHERE track_name LIKe ""Love%"";",1.0,dsa285,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4237,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"USE music;
SELECT *
FROM track
WHERE artist_id = 1 or artist_id = 3 or artist_id = 5;

USE music;
SELECT *
FROM track
WHERE artist_id IN (1,3,5);",1.0,dsa285,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4238,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"USE music;
SELECT *
FROM album
WHERE album_name > ""E"" and album_name < ""S"";",0.7,dsa285,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
4239,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"USE music;
SELECT *
FROM track
WHERE track_name < ""M"";",1.0,dsa285,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4240,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"USE music;
SELECT *
FROM album
WHERE artist_id = 3 AND album_id = 2;",1.0,dsa285,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4241,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"USE music;
SELECT *
FROM album
WHERE artist_id = 4;",1.0,dsa285,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4242,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;
SELECT *
FROM artist
WHERE artist_name = ""The Rolling Stones"";",1.0,dsa285,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4243,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;
SELECT *
FROM artist
WHERE artist_id = 5;",1.0,dsa285,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4244,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"USE music;
SELECT *
FROM track
ORDER BY time
LIMIT 10;",1.0,dsa285,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4245,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"USE music;
SELECT artist_id,album_name AS albulm_title
FROM album;",1.0,dsa285,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4246,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"USE music;
SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,dsa285,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4247,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"USE music;
SELECT *
FROM track;",1.0,dsa285,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4248,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"USE music;
SELECT *
FROM album;",1.0,dsa285,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4249,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;
SELECT *
FROM artist;",1.0,dsa285,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4256,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT *
FROM Orders;

SELECT ShipCountry, Avg(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY Avg(Freight) DESC
LIMIT 3;",7.5,ta779,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
4257,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT *
FROM Customers;

SELECT DISTINCT CustomerID
FROM Orders;

SELECT DISTINCT OrderID, CustomerID
FROM Orders
GROUP BY 
",5.0,ta779,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
4258,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT *
FROM Orders;

SELECT DATE(OrderDate) AS DATETIME
FROM Orders
ORDER BY DATETIME ASC;",6.0,ta779,"-0.5 for not showing the time
-1 for not doing a LIMIT 1
SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders
or
SELECT DATE(OrderDate), TIME(OrderDate)
FROM Orders
ORDER BY DATETIME ASC
LIMIT 1;&nbsp;","SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,"The feedback from the TA was -0.5 for not showing the time
-1 for not doing a LIMIT 1
SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders
or
SELECT DATE(OrderDate), TIME(OrderDate)
FROM Orders
ORDER BY DATETIME ASC
LIMIT 1;&nbsp;"
4259,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT *
FROM Products;

SELECT *
From Suppliers;

SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
INNER JOIN Suppliers S ON S.SupplierID = ProductID
ORDER BY ProductID ASC;",3.0,ta779,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;","SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;"
4260,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT *
FROM Products;

SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE 'Queso%';",5.0,ta779,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
4261,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SHOW databases;
USE northwind;

SELECT *
FROM Employees;

SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title='Sales Representative' AND Country='USA';",5.0,ta779,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
4262,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT *
FROM Shippers;

SELECT *
FROM Orders;

Select S.ShipperID, S.CompanyName, O.OrderID
FROM Orders O   
 ",2.0,ta779,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
4274,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT C.CustomerID, Q.Quantity, P.Quantity
From Orders
Where UnitPrice>10000;
SELECT C.CustomerID, Q.Quantity, P.Quantity
FROM Orders JOIN CustomerID ON ProductID = CustomerID
ORDER By  O.OrderID;",2.0,mb6244,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
4275,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT AVG(Freight), ShipCountry
From Orders
Group BY ShipCountry
ORDER BY AVG(Freight) DESC
Limit 3;",7.5,mb6244,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
4276,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID
, COUNT(OrderID) AS num_order
, AVG(OrderID) AS num_order
, SUM(OrderID) AS num_order
From Orders O
Group By C.CustomerID;",6.0,mb6244,"These are not necessary (actually they are incorrect)
, AVG(OrderID) AS num_order
, SUM(OrderID) AS num_order&nbsp;
Need a LEFT JOIN
SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was These are not necessary (actually they are incorrect)
, AVG(OrderID) AS num_order
, SUM(OrderID) AS num_order&nbsp;
Need a LEFT JOIN
SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
4277,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"Select Date (OrderDate) AS Date_date, Time (OrderDate) As Time_time
From Orders
Order By Orderdate ASC
Limit 1;",7.5,mb6244,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
4278,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"Select P.ProductID, P.ProductName, S.CompanyName
From Products P
Inner Join Suppliers S ON S.SupplierID = P.ProductID
Order By P.ProductID;",7.5,mb6244,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
4279,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
From Products
Where ProductName Like 'queso%';",5.0,mb6244,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
4280,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"Select FirstName, LastName, HireDate
From Employees
Where Title ='Sales Representative' AND Country = 'USA';",5.0,mb6244,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
4281,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"Select S.ShipperID, O.OrderID, C.CompanyName
FROM Orders INNER JOIN S.Shippers On ShipperID = O.OrderID
Where C.CompanyName IS NOT NULL
ORDER BY S.ShipperID;",2.0,mb6244,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
4305,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight)
FROM Orders
GROUP BY ShipCountry
ORDER BY AVG(Freight) DESC
LIMIT 3;",7.5,tt2427,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
4306,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT *
FROM Orders AS O
	INNER JOIN Customers AS C ON C.CustomerID = O.CustomerID
,COUNT(O.OrderID) AS Num_Orders
,COUNT(C.CustomerID) AS Customer
GROUP BY C.CustomerID",2.0,tt2427,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;","SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LEFT&nbsp;JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&nbsp;"
4307,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT DATE(OrderDate) AS DATE_Date, TIME(OrderDate) AS TIME_Time
FROM Orders
ORDER BY OrderDate;",7.5,tt2427,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
4308,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products AS P
	LEFT JOIN Suppliers AS S ON S.SupplierID = P.SupplierID
ORDER BY P.ProductID;",7.5,tt2427,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
4309,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE 'queso%';",5.0,tt2427,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
4310,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate 
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,tt2427,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
4311,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName, O.OrderID, O.ShippedDate, COUNT(O.ShippedDate) AS cnt_Orders
FROM Orders AS O
	LEFT JOIN Shippers AS S ON S.ShipperID = O.ShipVia
GROUP BY cnt_Orders;",2.0,tt2427,"SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;","SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,"The feedback from the TA was SELECT S.ShipperID, S.CompanyName
&nbsp; &nbsp; , COUNT(O.OrderID) AS orders
&nbsp; &nbsp; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&nbsp;
&nbsp; &nbsp; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;"
4472,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE both_names AS
SELECT E.first_name, E.gender, COUNT(*) AS other_freq, name_count
FROM eligible_names E
INNER JOIN actors A ON E.first_name = A.first_name
WHERE E.gender = 'F' AND A.gender = 'M'
OR E.gender = 'M' AND A.gender = 'F'
GROUP BY E.first_name, E.gender, name_count
ORDER BY name_count AND other_freq DESC;

SELECT first_name, ABS(log(other_freq / name_count)) AS amb_names
FROM both_names
GROUP BY first_name, amb_names
ORDER BY amb_names ASC;",2.0,cr3431,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4473,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
SELECT E.first_name 
FROM eligible_names E
INNER JOIN actors A ON E.first_name = A.first_name
WHERE E.gender = 'F' AND A.gender = 'M';

SELECT DISTINCT first_name, name_count
FROM eligible_names 
WHERE first_name NOT IN (SELECT DISTINCT first_name from female_names) AND gender='F';",1.0,cr3431,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4474,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"USE imdb;

CREATE TEMPORARY TABLE male_names AS
SELECT E.first_name 
FROM eligible_names E
INNER JOIN actors A ON E.first_name = A.first_name
WHERE E.gender = 'M' AND A.gender = 'F';

SELECT DISTINCT first_name, name_count
FROM eligible_names 
WHERE first_name NOT IN (SELECT DISTINCT first_name from male_names) AND gender='M';",1.0,cr3431,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4475,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;

CREATE TEMPORARY TABLE eligible_names AS 
SELECT first_name, COUNT(*) AS name_count, gender
FROM actors 
WHERE first_name NOT LIKE '%.%' 
AND first_name NOT LIKE '% (%'
GROUP BY first_name, gender
HAVING COUNT(*) > 50
ORDER BY name_count DESC;",1.0,cr3431,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4476,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT P.artist_id, P.album_id, P.track_id, T.track_name, MIN(P.played_on), MAX(P.played_on)
FROM tracks_played P 
RIGHT OUTER JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY P.artist_id, P.album_id, P.track_id, T.track_name",1.0,cr3431,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
4477,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, R.artist_name, COUNT(album_id) as num_albums
FROM album A
INNER JOIN artist R ON A.artist_id = R.artist_id
GROUP BY A.artist_id, R.artist_name
",1.0,cr3431,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4478,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(P.played_on) AS date_played, A.artist_id, artist_name, COUNT(DISTINCT P.user_id) AS users, SUM(T.time) AS total_time, COUNT(T.track_id) AS total_tracks
FROM tracks_played P 
INNER JOIN artist A ON P.artist_id = A.artist_id
INNER JOIN users U ON P.user_id = U.user_id
INNER JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY DATE(P.played_on), A.artist_id
ORDER BY DATE(P.played_on) ASC",1.0,cr3431,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
4479,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(P.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
LEFT OUTER JOIN tracks_played P ON U.user_id = P.user_id 
LEFT OUTER JOIN track T ON P.track_id = T.track_id AND P.artist_id = T.artist_id AND P.album_id = T.album_id
GROUP BY U.user_id;",1.0,cr3431,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
4480,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, artist_id, COUNT(*)
FROM track
GROUP BY album_id, artist_id
HAVING SUM(time) > 60;",0.8,cr3431,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
4481,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_name) AS count_tracks, SUM(time) AS track_length
FROM track
GROUP BY album_id;",0.8,cr3431,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
4482,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,cr3431,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4483,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),6) AS avg_time, ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,cr3431,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4484,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,cr3431,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4485,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,cr3431,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4486,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name 
FROM users U
LEFT OUTER JOIN tracks_played P on U.user_id = P.user_id
WHERE track_id IS NULL;",1.0,cr3431,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4487,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P
INNER JOIN users U ON P.user_id = U.user_id
INNER JOIN album A ON P.album_id = A.album_id AND P.artist_id = A.artist_id
INNER JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
ORDER BY U.user_id;",1.0,cr3431,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4488,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
INNER JOIN artist A ON T.artist_id = A.artist_id
WHERE artist_name = 'The Stone Roses'
ORDER BY time ASC;",1.0,cr3431,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4489,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, artist_name, album_name
FROM track T
INNER JOIN artist A ON T.artist_id = A.artist_id
INNER JOIN album M ON T.artist_id = M.artist_id AND T.album_id = M.album_id;",1.0,cr3431,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
4490,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT A.track_id, A.track_name, A.artist_id, A.album_id, A.time
FROM album T
INNER JOIN track A ON T.artist_id = A.artist_id
WHERE album_name='Second Coming';",1.0,cr3431,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4491,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist A
INNER JOIN album N ON A.artist_id = N.artist_id
WHERE artist_name='New Order';",1.0,cr3431,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4492,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"USE music;

SELECT *
FROM track
WHERE track_name LIKE '%Love%';",1.0,cr3431,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4493,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"USE music;

SELECT *
FROM artist
WHERE artist_id=1 OR artist_id=3 OR artist_ID=5;

SELECT *
FROM artist
WHERE artist_id IN ('1','3','5');

",1.0,cr3431,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4494,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"USE music;

SELECT *
FROM album
WHERE album_name > 'F' AND album_name < 'S';",1.0,cr3431,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
4495,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"USE music;

SELECT *
FROM track
WHERE track_name < 'M'
ORDER BY track_name ASC;",1.0,cr3431,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4496,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"USE music;

SELECT *
FROM track
WHERE artist_id=3 AND album_id=2;",1.0,cr3431,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4497,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"USE music;

SELECT *
FROM album
WHERE artist_id=4;",1.0,cr3431,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4498,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;

SELECT *
FROM artist
WHERE artist_name='The Rolling Stones';",1.0,cr3431,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4499,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;

SELECT *
FROM artist
WHERE artist_id=5;
",1.0,cr3431,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4500,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"USE music;

SELECT track_id, track_name, artist_id, album_id, time
FROM track
ORDER BY time ASC
LIMIT 10;",1.0,cr3431,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4501,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"USE music;

SELECT artist_id, album_name AS album_title
FROM album;
",1.0,cr3431,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4502,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"USE music;

SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,cr3431,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4503,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"USE music;

SELECT *
FROM track;",1.0,cr3431,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4504,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"USE music;

SELECT *
FROM album;",1.0,cr3431,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4505,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;

SELECT *
FROM artist;",1.0,cr3431,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4512,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"CREATE TEMPORARY TABLE Total_spent_in_2016 AS
	SELECT C.CustomerID, C.CompanyName
		, SUM(D.UnitPrice*D.Quantity) AS total_price_beforediscount
               , SUM(D.UnitPrice*D.Quantity-D.UnitPrice*D.Quantity*D.Discount) AS amount_spent
	FROM Customers C 
		LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
		LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID
	WHERE YEAR(O.OrderDate) = 2016
	GROUP BY C.CustomerID, C.CompanyName;

SELECT * 
	CASE
		WHEN amount_spent > 0 AND amount_spent < 1000 THEN 'Low'
               WHEN amount_spent > 1000 AND amount_spent < 5000 THEN 'Medium'
		WHEN amount_spent > 5000 THEN 'High'
		ELSE 'Others'
	END AS category
FROM Total_spent_in_2016; 



-----------



#Low, for customers spending between 0 and 1000
CREATE TEMPORARY TABLE Low AS
	SELECT C.CustomerID, C.CompanyName
		, SUM(D.UnitPrice*D.Quantity) AS total_price
               , SUM(D.UnitPrice*D.Quantity-D.UnitPrice*D.Quantity*D.Discount) AS amount_spent
	FROM Cust",10.0,yl9952,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
4514,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.CustomerID
	, COUNT(D.ProductID) AS num_products
       , SUM(D.Quantity) AS total_units
       , SUM(D.UnitPrice*D.Quantity) AS total_price
FROM Orders O
	LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID 
       LEFT JOIN Products P ON D.ProductID = P.ProductID
GROUP BY O.CustomerID
HAVING total_price > 10000
ORDER BY total_price DESC;",8.0,yl9952,"SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC","SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,"The feedback from the TA was SELECT O.OrderID, O.CustomerID
&nbsp; &nbsp; , SUM(D.Quantity * D.UnitPrice) AS total_price
&nbsp; &nbsp; , COUNT(DISTINCT D.ProductID) AS num_products
&nbsp; &nbsp; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC"
4515,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, ROUND(AVG(Freight),3) AS avg_freightCharges
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freightCharges DESC
LIMIT 3;",7.5,yl9952,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
4516,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(OrderID) AS num_order
FROM Customers C
	LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID;",10.0,yl9952,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
4517,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT OrderID, OrderDate
FROM Orders
ORDER BY OrderDate ASC
Limit 1;
",7.5,yl9952,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
4518,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY ProductID;",7.5,yl9952,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
4519,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName 
FROM Products
WHERE ProductName LIKE '%queso%';
",5.0,yl9952,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
4520,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';
",5.0,yl9952,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
4521,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT S.ShipperID, S.CompanyName
	, COUNT(OrderID) AS num_orders
       , COUNT(DISTINCT ShippedDate) AS num_days_picked_orders
FROM Shippers S
	JOIN Orders O ON S.ShipperID = O.ShipVia
GROUP BY S.ShipperID, S.CompanyName;
",7.5,yl9952,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
4596,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"   CREATE TEMPORARY TABLE needed SELECT c.customerID,c.companyName,
SUM(d.unitPrice*d.quantity) as total_price,
SUM(d.unitprice*d.quantity*d.discount) as discount_applied
FROM Customers c
   JOIN Orders o ON c.customerID=o.customerID
   JOIN OrderDetails d ON d.orderID=o.orderID
   WHERE YEAR(o.ORDERDATE)=2016
   GROUP BY c.customerID
   ORDER BY c.customerID;

 SELECT cutomerID, companyName,
   total_price,
   discount_applied
   CASE
   WHEN total_price-discount_applied BETWEEN 0 AND 1000 THEN 'LOW'
   WHEN total_price-discount_applied BETWEEN 1000 AND 5000 THEN 'MEDiUN'
   WHEN total_price-discount_applied >5000 THEN'HIGH'
   ELSE 'NONE'
   END as done 
From needed
Order By customerID;

",9.0,ms13855,-1 point was deducted for text and comma omission.,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,The feedback from the TA was -1 point was deducted for text and comma omission.
4598,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT o.customerID,
COUNT(d.ProductID) as no_ofProducts,
SUM(d.quantity) as total_quantity,
SUM(d.unitPrice*d.quantity) as total_price
FROM Orders o
JOIN OrderDetails d ON o.orderID=d.orderID
GROUP BY o.customerID,o.orderID
HAVING total_price>10000
ORDER by total_price DESC;",10.0,ms13855,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
4599,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT shipcountry,
AVG(freight) as avg_freight
FROM Orders
GROUP BY shipcountry
ORDER by avg_freight DESC
LIMIT 3;

",7.5,ms13855,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
4600,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT DISTINCT(c.customerID),c.companyName, COUNT(o.orderID) as total_orders_placed
From Customers c 
LEFT JOIN Orders o ON c.customerID=o.customerID
GROUP BY c.customerID,c.companyName
ORDER by total_orders_placed DESC;",10.0,ms13855,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
4601,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,709",Show the date/time of the first order ever date in the Orders table,Long Answer Question,"SELECT MIN(ORDERDATE) as date_time_firstorder
FROM Orders;


",7.5,ms13855,,"SELECT MIN(OrderDate) AS earliestOrderDate
FROM Orders",True,"['northwind', 'flights']",7.5,
4602,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT DISTINCT(p.ProductID),p.ProductName,s.CompanyName as Supplier_Companyname
FROM Products p
INNER JOIN Suppliers s ON s.supplierID=p.supplierID
ORDER BY p.ProductID;",7.5,ms13855,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
4603,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID,ProductName
FROM Products 
WHERE ProductName LIKE '%Queso%';",5.0,ms13855,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
4604,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA';",5.0,ms13855,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
4605,"Databases for Business Analytics, Winter 2023","251,683",Final Exam,"283,453",1,"4,969,705","We would like to see, for each shipper, the number of orders they have handled and the number of distinct days that they came to the warehouse to pick the orders (according to the the ShippedDate column in Orders). Show the ShipperID, the CompanyName of the shipper, the number of orders the shipper handled, and the number of distinct days that each shipper came to the warehouse.",Long Answer Question,"SELECT s.ShipperID,s.CompanyName as ShipperCompanyName,
COUNT(o.OrderID) as number_ofOrders,
COUNT(DISTINCT o.ShippedDate) as distinct_days_shippercamein
FROM Orders o
JOIN Shippers s ON s.ShipperID=o.shipvia
GROUP BY s.ShipperID,s.CompanyName;",7.5,ms13855,,"SELECT S.ShipperID, S.CompanyName
&#160; &#160; , COUNT(O.OrderID) AS orders
&#160; &#160; , COUNT(DISTINCT O.ShippedDate ) AS dates
FROM Orders O&#160;
&#160; &#160; JOIN Shippers S ON O.ShipVia = S.ShipperID
GROUP BY S.ShipperID;",True,"['northwind', 'flights']",7.5,
4671,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT first_name, count(*) AS cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name
HAVING cnt >= 50
ORDER BY CNT DESC;
DROP TEMPORARY TABLE male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, count(*) AS male_cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'M'AND male_cnt > 50
 ORDER BY male_cnt DESC;

SELECT A.first_name, COUNT(A.first_name) AS total_cnt, MN.male_cnt,
COUNT(A.first_name)-MN.male_cnt AS female_cnt,
(COUNT(A.first_name)-MN.male_cnt)/COUNT(A.first_name) AS female_percent,
(MN.male_cnt)/COUNT(A.first_name) AS male_percent,
ABS(LOG10(((((MN.male_cnt)/COUNT(A.first_name))/((COUNT(A.first_name)-
MN.male_cnt)/COUNT(A.first_name)))))) AS log
FROM actors A
JOIN male_names MN ON A.first_name = MN.first_name
GROUP BY A.first_name,MN.male_cnt
HAVING female_cnt <> 0
ORDER BY log ASC;
",1.6,gpe3028,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4672,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT*
FROM actors;
SELECT first_name, count(*) AS cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name
HAVING cnt >= 50
ORDER BY CNT DESC;
DROP TEMPORARY TABLE male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, count(*) AS male_cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'M' AND male_cnt > 50
 ORDER BY male_cnt DESC;
SELECT A.first_name, COUNT(A.first_name) as total_cnt, MN.male_cnt,
COUNT(A.first_name)-MN.male_cnt AS female_cnt
FROM actors A
JOIN male_names MN ON A.first_name = MN.first_name
GROUP BY A.first_name,MN.male_cnt
HAVING female_cnt = 0;",0.8,gpe3028,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4673,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, Count(last_name), gender
FROM actors
WHERE gender='F' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(I)%' AND first_name
NOT LIKE '%(II)%'
AND first_name NOT LIKE '%(III)%' AND first_name NOT LIKE '%(IV)%' AND first_name NOT LIKE '%(V)%'
AND first_name NOT LIKE '%(VI)%' AND first_name NOT LIKE '%(VII)%' AND first_name NOT LIKE '%(VIII) %'
AND first_name NOT LIKE '%(IX)%' AND first_name NOT LIKE '%(X)%' AND first_name NOT LIKE '%(XI)%'
GROUP BY first_name, gender
HAVING COUNT(last_name)>50",0.8,gpe3028,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4674,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"SELECT first_name, Count(last_name), gender
FROM actors
WHERE gender='M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(I)%' AND first_name NOT LIKE '%(II)%'
AND first_name NOT LIKE '%(III)%' AND first_name NOT LIKE '%(IV)%' AND first_name NOT LIKE'%(V)%' 
AND first_name NOT LIKE '%(VI)%' AND first_name NOT LIKE '%(VII)%' AND first_name NOT LIKE '%(VIII)%'
AND first_name NOT LIKE '%(IX)%' AND first_name NOT LIKE '%(X)%' AND first_name NOT LIKE'%(XI)%'
GROUP BY first_name, gender
HAVING COUNT(last_name)>50",0.8,gpe3028,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4675,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on),
MAX(played_on)
FROM track T
 LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id =
P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",1.0,gpe3028,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
4676,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT R.artist_name, COUNT(*) AS num_albums
FROM artist R JOIN album A ON A.artist_id = R.artist_id
GROUP BY  R.artist_name",1.0,gpe3028,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4677,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
 , COUNT(DISTINCT user_id) AS users
 , SUM(T.time) AS total_time
 , COUNT(*) AS total_tracks
FROM tracks_played P
GROUP BY date_played, A.artist_id",0.7,gpe3028,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
4678,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS
total_time
FROM users U
GROUP BY U.user_id

",0.7,gpe3028,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
4679,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id, SUM(time)
FROM track
GROUP BY artist_id, album_id
HAVING SUM(time) > 60
",1.0,gpe3028,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4680,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS
total_time
FROM track
GROUP BY artist_id, album_id",1.0,gpe3028,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
4681,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id)
FROM album
GROUP BY artist_id",1.0,gpe3028,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4682,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time), STDDEV(time)
FROM track",1.0,gpe3028,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4683,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track
",1.0,gpe3028,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4684,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist
",1.0,gpe3028,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4685,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U LEFT JOIN tracks_played P ON U.user_id = P.user_id
WHERE P.user_id IS NULL",1.0,gpe3028,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4686,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name,
P.played_on FROM tracks_played P JOIN users U ON U.user_id = P.user_id
JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id ORDER BY user_id, played_on
",1.0,gpe3028,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4687,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.*
FROM track T
JOIN artist R ON T.artist_id = R.artist_id
WHERE R.artist_name = 'The Stone Roses'
ORDER BY T.time",1.0,gpe3028,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4688,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, artist_name, album_name
FROM track T
JOIN artist R ON T.artist_id = R.artist_id
JOIN album A ON A.album_id = T.album_id AND A.artist_id = T.artist_id
",1.0,gpe3028,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
4689,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"Select T.*
FROM track T JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE A.album_name = 'Second Coming'

",1.0,gpe3028,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4690,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist R JOIN album A ON A.artist_id = R.artist_id
WHERE R.artist_name = 'New Order'",1.0,gpe3028,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4691,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select*
from track
where track_name LIKE ""%love%""

1	3	7	Bizarre Love Triangle
1	6	10	Bizarre Love Triangle
1	7	4	Bizarre Love Triangle
2	1	0	Do You Love Me?
2	1	2	Loverman
2	1	5	I Let Love In
2	1	9	Do You Love Me? (Part Two)
5	1	2	Ten Storey Love Song
5	1	11	Love Spreads
6	1	4	Loveboat
6	1	10	Under The Influence Of Love
			",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4692,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select*
from track
where artist_id = 1 or artist_id = 3 or artist_id = 5
1	1	0	Elegia
1	1	1	In A Lonely Place
1	1	2	Procession
1	1	3	Your Silent Face
1	1	4	Sunrise
1	1	5	Let's Go
1	1	6	Broken Promise
1	1	7	Dreams Never End
1	1	8	Cries And Whispers
1	1	9	All Day Long
1	1	10	Sooner Than You Think
1	1	11	Leave Me Alone
1	1	12	Lonesome Tonight
1	1	13	Every Little Counts
1	1	14	Run Wild
1	2	0	In A Lonely Place
1	2	1	Procession
1	2	2	Mesh
1	2	3	Hurt


select*
from track
where artist_id IN (1,3,5)

1	1	0	Elegia
1	1	1	In A Lonely Place
1	1	2	Procession
1	1	3	Your Silent Face
1	1	4	Sunrise
1	1	5	Let's Go
1	1	6	Broken Promise
1	1	7	Dreams Never End
1	1	8	Cries And Whispers
1	1	9	All Day Long
1	1	10	Sooner Than You Think
1	1	11	Leave Me Alone
1	1	12	Lonesome Tonight
1	1	13	Every Little Counts
1	1	14	Run Wild
1	2	0	In A Lonely Place
1	2	1	Procession
1	2	2	Mesh
1	2	3	Hurt
",1.0,gpe3028,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4693,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select*
from album
where album_name >= 'F' AND album_name < 'S'


1	1	Retro - John McCready FAN
1	3	Retro - Miranda Sawyer POP
1	4	Retro - New Order / Bobby Gillespie LIVE
1	5	Power, Corruption & Lies
2	1	Let Love In
3	1	Live Around The World
3	2	In A Silent Way
6	1	Light Years
		",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
4694,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select*
from track
where track_name < 'M'

1	1	0	Elegia	4.93
1	1	1	In A Lonely Place	6.26
1	1	5	Let's Go	3.90
1	1	6	Broken Promise	3.76
1	1	7	Dreams Never End	3.20
1	1	8	Cries And Whispers	3.42
1	1	9	All Day Long	5.18
1	1	11	Leave Me Alone	4.67
1	1	12	Lonesome Tonight	5.19
1	1	13	Every Little Counts	4.47
1	2	0	In A Lonely Place	6.30
1	2	3	Hurt	6.98
1	2	5	Confusion	7.64
1	2	6	Lonesome Tonight	5.20
1	2	9	Kiss Of Death	7.05
1	2	11	1963	5.63
1	3	0	Fine Time	4.71
1	3	4	Ceremony	4.41
1	3	6	Crystal	6.83
1	3	7	Bizarre Love Triangle	4.35
1	3	8	Confusion	8.22
1	3	10	Blue Monday	7.48
1	3	11	Brutal	4.83
1	3	13	Everyone Everywhere	4.43
1	4	0	Ceremony [Studio 54, Barcelona 7/7/84]	4.82
1	4	2	Everything's Gone Green [Tolworth Recreation Centre, London 12/3/85]	5.25
1	4	3	In A Lonely Place [Glastonbury Festival 20/6/81]	5.55
1	4	4	Age Of Consent [Spectrum Arena, Warrington 1/3/86]	5.04
1	4	5	Elegia [Glastonbury Festival 19/6/87]	4.77
1	4	7	Fine Time [Popular Creek Musi",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4695,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select*
from track
where artist_id =3 and album_id = 2




3	2	0	Shhh/Peaceful
3	2	1	In A Silent Way/It's About That Time
			",1.0,gpe3028,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4696,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select*
from album
where artist_id = 4

4	1	Exile On Main Street
		",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4697,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select*
from artist
where artist_name = ""The Rolling Stones""

4	The Rolling Stones
	",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4698,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select*
from artist
where artist_id = 5

5	The Stone Roses
	",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4699,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
order by time
limit 10",1.0,gpe3028,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4700,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album",1.0,gpe3028,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4701,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name",1.0,gpe3028,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4702,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select*
from track;",1.0,gpe3028,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4703,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select*
from album;",1.0,gpe3028,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4704,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select*
from artist;
",1.0,gpe3028,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4779,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"use imdb;
select gender, COUNT(*) as cnt
from eligible_names
GROUP BY gender;

## males 1097
## females 920

## create female name table

CREATE TEMPORARY TABLE female_names AS
		select first_name, gender, count(*) AS cnt_female, count(*)/920 as freq_female
        from actors
		where first_name NOT LIKE ('%.%') AND first_name NOT LIKE ('%(%)%') AND gender=""F""
		GROUP BY first_name, gender
		HAVING COUNT(first_name)>50;

## create male name table 

CREATE TEMPORARY TABLE male_names AS
		select first_name, gender, count(*) AS cnt_male, count(*)/1097 as freq_male
        from actors
		where first_name NOT LIKE ('%.%') AND first_name NOT LIKE ('%(%)%') AND gender=""M""
		GROUP BY first_name, gender
		HAVING COUNT(first_name)>50;

##Join tables together

SELECT M.first_name, cnt_male, cnt_female, freq_female, freq_male, ABS(log(freq_male/freq_female)) AS names_ranked
from male_names M
	INNER JOIN female_names F on M.first_name=F.first_name
WHERE cnt_male + cnt_",1.6,emr9071,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4780,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names5 AS
		select count(*) as frequency, first_name, gender
        from actors
		where first_name NOT LIKE ('%.%') AND first_name NOT LIKE ('%(%)%') AND gender=""F""
		GROUP BY first_name, gender
		HAVING COUNT(first_name)>50;

select*
from female_names5
WHERE first_name NOT IN (
	select first_name
    from actors
    WHERE gender=""M""
    );",0.8,emr9071,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4781,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names2 AS
		select count(*) as frequency_males, first_name, gender
        from actors
		where first_name NOT LIKE ('%.%') AND first_name NOT LIKE ('%(%)%') AND gender=""M""
		GROUP BY first_name, gender
		HAVING COUNT(first_name)>50;
        
select*
from male_names2
WHERE gender NOT IN (
	select first_name
    from actors
    WHERE gender=""F""
    );",0.8,emr9071,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4782,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question," select count(*), first_name, gender
    from actors
    where first_name NOT LIKE ('%.%') AND first_name NOT LIKE ('%(%)%')
    GROUP BY first_name, gender
    HAVING COUNT(first_name)>50;


CREATE TEMPORARY TABLE eligible_names AS
		select count(*), first_name, gender
        from actors
		where first_name NOT LIKE ('%.%') AND first_name NOT LIKE ('%(%)%')
		GROUP BY first_name, gender
		HAVING COUNT(first_name)>50;",1.0,emr9071,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4783,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id, T.album_id, T.track_id,T.track_name,MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on
FROM tracks_played TP
LEFT OUTER JOIN track T on T.track_id=TP.track_id
GROUP BY T.artist_id, T.album_id, T.track_id,T.track_name;",1.0,emr9071,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
4784,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name,COUNT(album_ID) as num_albums
FROM album AL
INNER JOIN artist A on A.artist_id=AL.artist_id
GROUP BY A.artist_id;",1.0,emr9071,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4785,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question," select DATE(TP.played_on), A.artist_id, A.artist_name, 
 COUNT(TP.user_id) AS total_users, 
 SUM(T.time) as total_time, 
 COUNT(TP.track_id) AS total_tracks
  FROM tracks_played TP
  INNER JOIN users U on TP.user_id=U.user_id
  INNER JOIN artist A on A.artist_id=TP.artist_id
  INNER JOIN track T on TP.track_id=T.track_id and TP.artist_ID=T.artist_ID AND TP.album_id=T.album_id
  GROUP BY DATE(TP.played_on),A.artist_id,A.artist_name
  ORDER BY DATE(TP.played_on);",1.0,emr9071,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
4786,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id,
COUNT(TP.track_id) AS total_tracks,
SUM(T.time) AS total_time
FROM users U
  LEFT OUTER JOIN tracks_played TP on U.user_id=TP.user_id
  INNER JOIN track T on T.track_id=TP.track_id AND T.artist_id=TP.artist_id AND T.album_id=TP.album_id
GROUP BY U.user_id;",0.8,emr9071,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
4787,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id, sum(time) as time_of_tracks
from track
GROUP BY artist_id, album_id
HAVING sum(time)>60;",1.0,emr9071,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4788,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, count(track_id) as count_tracks, sum(time) as time_of_tracks
from track
GROUP BY album_id;",0.8,emr9071,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
4789,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id,count(album_id) as album_count
from album
GROUP BY artist_id;",1.0,emr9071,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4790,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question," select AVG(time) AS avg_time, stddev(time) AS sdd_time
 from track;",1.0,emr9071,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4791,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question," select count(*), count(track_id) as number_tracks
 from track;",1.0,emr9071,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4792,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(*), count(artist_id) as number_artist
 from artist;",1.0,emr9071,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4793,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select*
  from users U
  LEFT OUTER JOIN tracks_played TP on U.user_id=TP.user_id
  where TP.user_id IS NULL;",1.0,emr9071,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4794,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.first_name,U.last_name,U.user_id,A.album_name,T.track_name,TP.played_on
  from tracks_played TP
  INNER JOIN users U on TP.user_id=U.user_id
  INNER JOIN album A on TP.album_id=A.album_id
  INNER JOIN track T on TP.track_id=T.track_id;",1.0,emr9071,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4795,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.*
  from track T
  INNER JOIN artist A on T.artist_ID=A.artist_ID
  where A.artist_name=""The Stone Roses""
  order by T.time;",1.0,emr9071,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4796,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question," select T.track_name,A.album_name,AR.artist_name
  from track T
  INNER JOIN artist AR on T.artist_id=AR.artist_id
  INNER JOIN album A on T.album_id=A.album_id;",0.7,emr9071,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
4797,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"  select T.*
  from album A
  INNER JOIN track T on A.album_id=T.album_id
  where A.album_name=""Second Coming"";",0.7,emr9071,"SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'"
4798,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"  select*
  from album A
  INNER JOIN artist AR on A.artist_ID=AR.artist_ID
  where AR.artist_name = ""New Order"";",1.0,emr9071,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4806,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select*
from track
where track_name LIKE ""%love%"";",1.0,emr9071,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4807,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select*
from track
where track_id IN (1,3,5);

select*
from track
where track_id=1 OR track_id=3 OR track_id=5; ",1.0,emr9071,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4808,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select*
from track
where track_name>'e' AND track_name <'s'; ",0.7,emr9071,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
4809,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select*
from track
where track_name < 'm';",1.0,emr9071,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4810,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select*
from track
where artist_id = 3 AND album_id=2;",1.0,emr9071,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4811,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select*
from album
where artist_id = 4;",1.0,emr9071,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4812,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select*
from artist
where artist_name = 'The Rolling Stones';",1.0,emr9071,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4813,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select*
from artist
where artist_id = 5;",1.0,emr9071,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4814,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select *
from track
order by time
limit 10;",1.0,emr9071,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4815,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_name AS album_title,artist_id
from album;",1.0,emr9071,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4816,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
ORDER BY artist_name;",1.0,emr9071,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4817,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select*
from track;",1.0,emr9071,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4818,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select*
from album;",1.0,emr9071,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4819,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;
select*
from artist;",1.0,emr9071,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4838,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select first_name, gender, count(*) as cnt
from actors
where first_name not like ""%(%)%"" and first_name not like ""%.%""
group by first_name, gender
having cnt >50
order by cnt desc;

SELECT
first_name, 
	SUM(CASE WHEN gender = 'M' THEN cnt ELSE 0 END) AS Male,
    SUM(CASE WHEN gender = 'F' THEN cnt ELSE 0 END) AS Female
FROM eligible_names
GROUP BY first_name;

",1.4,ae2456,"


Answer Key







SELECT M.first_name
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt AS male_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , F.cnt AS female_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt/F.cnt AS ratio
&nbsp; &nbsp; &nbsp; &nbsp; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&nbsp;
&nbsp; &nbsp; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)






","SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,"The feedback from the TA was 


Answer Key







SELECT M.first_name
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt AS male_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , F.cnt AS female_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt/F.cnt AS ratio
&nbsp; &nbsp; &nbsp; &nbsp; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&nbsp;
&nbsp; &nbsp; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)






"
4839,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select first_name, gender, count(*) as cnt
from actors
where 
	first_name not like ""%(%)%"" 
    and first_name not like ""%.%"" 
    and gender = ""F""
    and first_name not in (select first_name from male_names)
group by first_name
having cnt >50
order by first_name;",0.7,ae2456,"SELECT *
FROM female_names
WHERE first_name NOT IN (SELECT first_name FROM male_names)","
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,"The feedback from the TA was SELECT *
FROM female_names
WHERE first_name NOT IN (SELECT first_name FROM male_names)"
4840,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create TEMPORARY table male_names as
select first_name, gender, count(*) as cnt
from actors 
where gender = ""M"" and first_name not like ""%(%)%"" and first_name not like ""%.%""
group by first_name
having cnt >50
order by cnt desc;
    
create TEMPORARY table female_names as
select first_name, gender, count(*) as cnt
from actors
where first_name not like ""%(%)%"" and first_name not like ""%.%"" and gender = ""F""
group by first_name
having cnt >50
order by first_name;

select first_name, gender, count(*) as cnt
from actors
where 
	first_name not like ""%(%)%"" 
    and first_name not like ""%.%"" 
    and gender = ""M""
    and first_name not in (select first_name from female_names)
group by first_name
having cnt >50
order by first_name;",0.8,ae2456,"


Answer Key







DROP TABLE IF EXISTS male_names;&nbsp;
CREATE TEMPORARY TABLE male_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'M'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&nbsp;
CREATE TEMPORARY TABLE female_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eli","DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,"The feedback from the TA was 


Answer Key







DROP TABLE IF EXISTS male_names;&nbsp;
CREATE TEMPORARY TABLE male_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'M'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&nbsp;
CREATE TEMPORARY TABLE female_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eli"
4841,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create TEMPORARY table eligible_names as
select first_name, count(*) as cnt
from actors
where first_name not like ""%(%)%"" and first_name not like ""%.%""
group by first_name
having cnt >50
order by cnt desc;",1.0,ae2456,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4842,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select 
	DISTINCT art.artist_id,
	art.artist_name
from artist as art
	inner join album as alb on alb.artist_id = art.artist_id
group by artist_id, artist_name, album_name;

could not get the number of albums to work. am i missing a self join?",0.8,ae2456,"SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name","#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,"The feedback from the TA was SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name"
4843,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select 
	DISTINCT(cast(played_on as date)) as date_played,
    tp.artist_id,
    a.artist_name,
    tp.user_id,
    sum(t.time),
    count(t.track_name)    
from tracks_played as tp
    inner join artist as a on a.artist_id = tp.artist_id
    inner join track as t on t.artist_id = tp.artist_id
group by date_played, artist_id,artist_name,user_id;

this is entirely wrong. once again, the introduction of joins completely threw off the aggregation",0.8,ae2456,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
4844,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select 
	u.user_id as user_id, 
    count(distinct tp.track_id) as tracks_played,
    sum(t.time) as total_time
from users as u
	inner join tracks_played as tp on u.user_id = tp.user_id
	inner join track as t on t.track_id = tp.track_id
group by user_id;

i know this is completely wrong - i cannot get joins to work all ",0.8,ae2456,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
4845,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select 
	album_id, artist_id,
    sum(time) as total_time
from track
group by album_id, artist_id
having total_time>60
order by total_time desc;",1.0,ae2456,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4846,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select 
	album_id, 
    artist_id,
    count(track_id),
    sum(time)
from track
group by album_id, artist_id;",1.0,ae2456,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
4847,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_id) 
from album
group by artist_id; ",1.0,ae2456,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4848,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select round(avg(time),2) as avg_track_time,
round(STDDEV(time),2) as stddev_track_time
from track;",1.0,ae2456,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4849,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(DISTINCT track_name) as unique_track
from track;",0.9,ae2456,"


Answer Key







SELECT COUNT(*) AS cnt
FROM&nbsp;track






","SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT COUNT(*) AS cnt
FROM&nbsp;track






"
4850,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(DISTINCT artist_id) as unique_artist
from artist;",1.0,ae2456,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4851,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select 
	u.first_name,
    u.last_name
from users AS u
	left join tracks_played AS tp ON u.user_id = tp.user_id
    left join track AS t ON tp.track_id = t.track_id
where t.track_id is null;",0.95,ae2456,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4852,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select 
tp.user_id,
u.first_name,
u.last_name,
a.album_name,
t.track_name,
tp.played_on 
from tracks_played as tp
	 inner join users as u on tp.user_id = u.user_id
     inner join track as t on t.track_id = tp.track_id
     inner join album as a on tp.album_id = a.album_id
order by tp.user_id;",0.95,ae2456,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4853,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select
trk.track_id,
trk.track_name,
trk.artist_id, 
trk.album_id,
trk.time
from track as trk
inner join artist as art on trk.artist_id = art.artist_id
where art.artist_name = ""The Stone Roses""
ORDER BY time;",0.95,ae2456,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4854,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select 
trk.track_name, 
art.artist_name,
alb.album_name
from track as trk
	inner join album as alb on alb.album_id = trk.album_id
	inner join artist as art on trk.artist_id = art.artist_id;



I could not get this query to work as described in the solution below. Please provide guidance. Thanks",0.7,ae2456,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
4855,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT 
T.track_id,
T.track_name,
T.artist_id,
T.album_id,
T.time
FROM track as T
	inner join album as A on A.artist_id = T.artist_id
where A.album_name = ""Second Coming"";",0.95,ae2456,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4856,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist as art
	inner join album as alb on art.artist_id = alb.artist_id 
where art.artist_name = ""New Order"";",0.95,ae2456,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4857,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT * FROM track
WHERE track_name LIKE ""%love%"";",1.0,ae2456,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4858,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT * FROM track
WHERE artist_id = 1 or artist_id = 3 or artist_id = 5; 

SELECT * FROM track
WHERE artist_id IN (1,3,5);

",1.0,ae2456,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4859,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM track
WHERE track_name BETWEEN 'F%' AND 'S%'
ORDER BY track_name;",0.7,ae2456,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
4860,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * FROM track
WHERE track_name<'M%;'
ORDER BY track_name;",1.0,ae2456,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4861,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * FROM album
WHERE artist_id = 3 AND album_id = 2;",1.0,ae2456,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4862,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * FROM album
WHERE artist_id = 4;",1.0,ae2456,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4863,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist
WHERE artist_name = ""The Rolling Stones"";",1.0,ae2456,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4864,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM artist
WHERE artist_id = 5;",1.0,ae2456,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
4865,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT * from track
ORDER BY time ASC
LIMIT 10;",1.0,ae2456,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
4866,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_name AS album_title, artist_id FROM album;",1.0,ae2456,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
4867,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name from artist
ORDER BY artist_name;",1.0,ae2456,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
4868,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,SELECT * from track;,1.0,ae2456,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
4869,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,SELECT * from album;,1.0,ae2456,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
4870,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,SELECT * from artist;,1.0,ae2456,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
4921,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
    E.first_name, male_frequency,female_frequency,
    ABS(LOG(male_frequency / female_frequency)) AS ambiguity_score
FROM
    eligible_names AS E
INNER JOIN
    (SELECT first_name,COUNT(*) AS male_frequency
    FROM actors
    WHERE first_name IN (SELECT first_name FROM actors) AND gender = 'M'
    GROUP BY
first_name) AS male_actors
ON
    E.first_name = male_actors.first_name
INNER JOIN
    (SELECT first_name,COUNT(*) AS female_frequency
    FROM actors
    WHERE first_name IN (SELECT first_name FROM actors)AND gender = 'F'
    GROUP BY
first_name) AS female_actors
ON
    E.first_name = female_actors.first_name
ORDER BY
    ambiguity_score ASC;",2.0,zaa7399,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
4922,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
SELECT *
FROM eligible_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM actors
    where gender = 'M'
)
order by frequency desc;",1.0,zaa7399,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
4923,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT *
FROM eligible_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM actors
    where gender = 'F'
)
order by frequency desc;",1.0,zaa7399,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
4924,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name, count(*) as frequency
		FROM actors
	WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' 
	GROUP BY first_name
	HAVING frequency >= 50
    ORDER BY frequency desc;",1.0,zaa7399,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
4925,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, TP.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on
FROM track AS T 
LEFT JOIN tracks_played AS TP ON T.track_id = TP.track_id AND T.album_id
GROUP BY T.artist_id, T.album_id, TP.track_id,T.track_name; 

Output shows 153 rows.",1.0,zaa7399,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
4926,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT S.artist_id, S.artist_name, COUNT(*) AS num_albums
FROM artist AS S 
INNER JOIN album AS A ON S.artist_id = A.artist_id
GROUP BY S.artist_id, S.artist_name; ",1.0,zaa7399,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
4927,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(played_on) AS date_played, A.artist_id, artist_name, COUNT(DISTINCT TP.user_id) AS users, SUM(time) AS total_time, COUNT(T.track_id) AS total_tracks
FROM tracks_played as TP
INNER JOIN track as T on T.artist_id = TP.artist_id and T.album_id = TP.album_id and T.track_id = TP.track_id
INNER JOIN album as A on A.artist_id = T.artist_id and A.album_id = T.album_id
INNER JOIN artist as S on S.artist_id = A.artist_id
GROUP BY DATE(played_on),artist_name,A.artist_id;


Output shows 116 rows and 6 columns. ",1.0,zaa7399,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
4928,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users AS U
LEFT JOIN tracks_played AS TP ON U.user_id = TP.user_id
LEFT JOIN track AS T ON T.album_id = TP.album_id AND T.artist_id = TP.artist_id AND T.track_id = TP.track_id
GROUP BY U.user_id;",1.0,zaa7399,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
4929,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, SUM(time) AS total_length
FROM track
GROUP BY album_id, artist_id
HAVING SUM(time) > 60
ORDER BY total_length;

Output yields 8 albums that are all longer than 60 minutes ",1.0,zaa7399,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
4930,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT A.album_id, A.artist_id, COUNT(track_id) AS num_tracks, SUM(time) AS total_length
FROM album A
INNER JOIN track T ON A.artist_id=T.artist_id AND A.album_id = T.album_id
GROUP BY A.album_id, A.artist_id;",1.0,zaa7399,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
4931,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,zaa7399,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
4932,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time
FROM track; ",1.0,zaa7399,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
4933,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track;

Output shows that there are 153 tracks.",1.0,zaa7399,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
4934,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS num_artists
FROM artist;

Output shows that there are 6 artists. ",1.0,zaa7399,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
4958,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users AS U 
LEFT OUTER JOIN tracks_played AS TP ON U.user_id = TP.user_id
WHERE TP.played_on is NULL;",1.0,zaa7399,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
4959,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A. album_name, TR.track_name, TP.played_on
FROM tracks_played AS TP
INNER JOIN users AS U ON U.user_id = TP.user_id
INNER JOIN track AS TR ON TR.track_id = TP.track_id AND TR.album_id = TP.album_id AND TR.artist_id = TP.artist_id
INNER JOIN album AS A ON A.album_id = TR.album_id AND A.artist_id = TR.artist_id
ORDER BY U.user_id ASC;",1.0,zaa7399,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
4960,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT TR.track_id, TR.track_name, A.artist_id, TR.album_id, TR.time
FROM track AS TR
INNER JOIN artist AS A ON TR.artist_id = A.artist_id
WHERE A.artist_name='The Stone Roses'
ORDER BY TR.time;",1.0,zaa7399,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
4961,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT TR.track_name, T.artist_name, A.album_name
FROM track AS TR
INNER JOIN album as A on TR.artist_id = A.artist_id AND TR.album_id = A.album_id
INNER JOIN artist as T on TR.artist_id = T.artist_id;",1.0,zaa7399,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
4962,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT TR.track_ID, TR.track_name, A.artist_id, A.album_id,TR.time
FROM album AS A
INNER JOIN track AS TR ON A.artist_ID = TR.artist_id
WHERE album_name='Second Coming'AND A.artist_id=5 AND A.album_id=1
ORDER BY TR.track_id;",1.0,zaa7399,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
4963,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT A.artist_id, T.artist_name, T.artist_id, A.album_id, A.album_name
FROM album as A 
INNER JOIN artist as T ON A.artist_id = T.artist_id
WHERE A.artist_id = 1; ",1.0,zaa7399,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
4978,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"Select track_name
FROM track
WHERE track_name LIKE '%Love%';",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
4979,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"variation 1: OR Boolean condition 

SELECT artist_id, track_name
FROM track
WHERE artist_id = '1' OR artist_id = '3'OR artist_id = '5';


variation 2: IN operation

Select artist_id, track_name
FROM track
WHERE artist_id IN ('1','3','5');",1.0,zaa7399,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
4980,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name
FROM album
WHERE album_name > 'F%' AND album_name < 'S%'
ORDER BY album_name;

",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
4981,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name
FROM track
WHERE track_name < 'M' 
ORDER by track_name; ",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
4982,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT artist_id, album_id, track_name
FROM track
WHERE artist_id = '3' AND album_id = '2';",1.0,zaa7399,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
4983,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT artist_id, album_name
FROM album
WHERE artist_id = '4';",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
4984,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT artist_id, artist_name
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
4985,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT artist_id, artist_name
FROM artist
WHERE artist_id = '5';",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5003,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_id, track_name, artist_id, album_id, time
FROM track
ORDER BY time
LIMIT 10;",1.0,zaa7399,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5004,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,zaa7399,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5005,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,zaa7399,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5006,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,zaa7399,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5007,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,zaa7399,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5008,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,zaa7399,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5009,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2A: Database Navigation,"301,292",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"There are five entities tracks_played, album, users, track, and artist store in the music database. In general, foreign keys are used to create a relationship or association between two tables. It can be a field  or a combination of fields (as we saw in the outputs) in a single table which refers to the primary key of another table. For tracks_played, the foreign keys were user_id, artist_id, album_id and track_id. This presents a relationship between tracks_played and album. For album, the foreign key was artist_id which also connects to track and users entities. For track, the foreign keys are artist_id and album_id. Finally, users are connected to artist, but no foreign keys are present in these entities. ",1.0,zaa7399,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
5049,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select eligible_names.*,ABS(log(count_same_first_male/count_same_first_female)) as ambiguous_ind
from eligible_names
LEFT JOIN
male_only
on eligible_names.first_name = male_only.first_name
LEFT JOIN
female_only
on eligible_names.first_name = female_only.first_name
where male_only.first_name IS NOT NULL 
	AND female_only.first_name IS NOT NULL
ORDER BY ABS(log(count_same_first_male/count_same_first_female)) asc;",2.0,uk2063,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5050,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select eligible_names.*
from eligible_names
LEFT JOIN
male_only
on eligible_names.first_name = male_only.first_name
LEFT JOIN
female_only
on eligible_names.first_name = female_only.first_name
where male_only.first_name IS NULL;",1.0,uk2063,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5051,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table male_only as 
select first_name,count(first_name) as count_same_first_male 
from actors where gender = ""M""
group by first_name;

create temporary table female_only as 
select first_name,count(first_name) as count_same_first_female 
from actors where gender = ""F""
group by first_name;

select eligible_names.*
from eligible_names
LEFT JOIN
male_only
on eligible_names.first_name = male_only.first_name
LEFT JOIN
female_only
on eligible_names.first_name = female_only.first_name
where female_only.first_name IS NULL;",1.0,uk2063,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5052,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as 
select first_name,count(first_name) as count_same_first 
from actors
where first_name NOT LIKE ""%(%)%"" AND first_name NOT LIKE ""%.%""
group by first_name
having count_same_first>=50",1.0,uk2063,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5053,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"
select first_name,last_name
from tracks_played a
right join users on a.user_id = users.user_id
where track_id IS NULL;",1.0,uk2063,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5054,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"
select a.user_id,first_name,last_name,album_name,track_name,played_on
from tracks_played a
join users on a.user_id = users.user_id
left join album 
on a.album_id = album.album_id and a.artist_id = album.artist_id
left join track
on a.track_id = track.track_id and a.artist_id = track.artist_id and a.album_id = track.album_id
limit 5000;
",0.7,uk2063,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on","SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,"The feedback from the TA was SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on"
5055,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track_id,track_name,track.artist_id,album_id,time 
from track
left join artist
on artist.artist_id = track.artist_id
where artist_name = ""The Stone Roses""
order by time asc",1.0,uk2063,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5056,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name,album_name,artist_name 
from track
left join album
on track.album_id = album.album_id and album.artist_id = track.artist_id
left join artist
on artist.artist_id = track.artist_id;",1.0,uk2063,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5057,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select a.track_id,a.track_name,a.artist_id,a.album_id,a.time from
(select * from track) a
right join 
(select * from album) b
on a.album_id = b.album_id and a.artist_id = b.artist_id
where album_name = ""Second Coming""",1.0,uk2063,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5058,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;


select * from 
(select * from artist where artist_name = ""New Order"") a
left join
(select * from album) b
on a.artist_id = b.artist_id",1.0,uk2063,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5059,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"use music;

select track.artist_id,track.album_id,track.track_id,track_name,min(played_on) as min_played_on,max(played_on) as max_played_on 
from track
left join tracks_played a
on a.track_id = track.track_id and a.artist_id = track.artist_id and a.album_id = track.album_id
group by track.artist_id,track.album_id,track.track_id,track_name;",1.0,uk2063,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5060,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"use music;

select artist.artist_id,artist_name,count(album_name) as num_albums 
from artist
left join album
on artist.artist_id = album.artist_id
group by artist.artist_id,artist_name;",1.0,uk2063,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5061,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"use music;

select date(played_on) as date_played,a.artist_id,artist_name,count(distinct user_id) as users,sum(time) as total_time,count(concat(a.artist_id,a.album_id,a.track_id)) as total_tracks
from tracks_played a
left join
track
on a.track_id = track.track_id and a.album_id = track.album_id and a.artist_id = track.artist_id
join
artist
on a.artist_id = artist.artist_id
group by date_played,artist_id,artist_name;

",1.0,uk2063,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5062,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"use music;

select users.user_id,count(tracks_played.track_id),sum(time)
from users
left join tracks_played
on users.user_id = tracks_played.user_id
left join
track
on tracks_played.track_id = track.track_id and tracks_played.artist_id = track.artist_id and tracks_played.album_id = track.album_id
group by users.user_id;",1.0,uk2063,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5063,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"use music;

select artist_id,album_id,count(track_id),sum(time) as total_time from track
group by album_id,artist_id having total_time>60;",1.0,uk2063,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5064,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"use music;

select c.artist_id,c.album_id,count(c.track_id) as no_of_tracks, sum(c.time) as total_time 
from
(select b.* from
album as a left join track as b
on a.artist_id=b.artist_id and a.album_id=b.album_id) as c
group by c.album_id,c.artist_id;",1.0,uk2063,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
5065,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"use music;

select artist_id,count(album_id) as cnt_albums from album group by artist_id;
",1.0,uk2063,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5066,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time from track",1.0,uk2063,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5067,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"use music;

select count(*) from track where track_id IS NOT NULL;",1.0,uk2063,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5068,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;

select count(distinct artist_name) from artist where artist_name IS NOT NULL;",1.0,uk2063,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5069,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"use music;

select first_name,last_name
from tracks_played a
right join users on a.user_id = users.user_id
where track_id IS NULL;",1.0,uk2063,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5070,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"use music;

select a.user_id,first_name,last_name,album_name,track_name,played_on
from tracks_played a
join users on a.user_id = users.user_id
left join album 
on a.album_id = album.album_id and a.artist_id = album.artist_id
left join track
on a.track_id = track.track_id and a.artist_id = track.artist_id and a.album_id = track.album_id
limit 5000;",0.7,uk2063,"


Answer Key








SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on







","SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,"The feedback from the TA was 


Answer Key








SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on







"
5071,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"use music;

select track_id,track_name,track.artist_id,album_id,time 
from track
left join artist
on artist.artist_id = track.artist_id
where artist_name = ""The Stone Roses""
order by time asc;",1.0,uk2063,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5072,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"use music;

select track_name,album_name,artist_name 
from track
join album
on track.album_id = album.album_id and album.artist_id = track.artist_id
join artist
on artist.artist_id = track.artist_id;",1.0,uk2063,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5073,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"use music;

select a.track_id,a.track_name,a.artist_id,a.album_id,a.time from
(select * from track) a
right join 
(select * from album) b
on a.album_id = b.album_id and a.artist_id = b.artist_id
where album_name = ""Second Coming"";",1.0,uk2063,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5074,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;

select * from 
(select * from artist where artist_name = ""New Order"") a
left join
(select * from album) b
on a.artist_id = b.artist_id;",1.0,uk2063,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5075,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,select * from track where track_name like '%love%';,1.0,uk2063,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5076,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"1. select * from track where artist_id=1 or artist_id=3 or artist_id=5;
2. select * from track where artist_id in (1,3,5);",1.0,uk2063,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5077,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from album where substr(album_name,1,1)>'E' and substr(album_name,1,1)<'S';
",1.0,uk2063,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
5078,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track where substr(track_name,1,1)<'M';",1.0,uk2063,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5079,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from track where artist_id=3 and album_id=2;,1.0,uk2063,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5080,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album where artist_id in  (
select artist_id from artist where artist_name='The Rolling Stones')",1.0,uk2063,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5081,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,select * from artist where artist_name='The Rolling Stones',1.0,uk2063,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5082,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,select * from artist where artist_id=5;,1.0,uk2063,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5083,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,select * from track order by time limit 10; ,1.0,uk2063,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5084,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id,album_name as album_title from album",1.0,uk2063,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5085,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,select artist_name from artist order by artist_name;,1.0,uk2063,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5086,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,uk2063,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5087,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,uk2063,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5088,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,select * from artist;,1.0,uk2063,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5095,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"Select F.NUMNAMES + M.NUMNAMES as combinednum, F.first_name as first_name, abs(log(M.NUMNAMES / F.NUMNAMES)) as Ambiguity from femalenames F
LEFT OUTER JOIN malenames M on F.first_name = M.first_name
where M.first_name is not null
ORDER BY Ambiguity ASC;

It also returns the exact same results if you use an inner join like below: 

Select F.NUMNAMES + M.NUMNAMES as combinednum, F.first_name as first_name, abs(log(M.NUMNAMES / F.NUMNAMES)) as Ambiguity from femalenames F
INNER JOIN malenames M on F.first_name = M.first_name
where M.first_name is not null
ORDER BY Ambiguity ASC;",1.6,bg2525,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5096,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Select * from femalenames F
LEFT OUTER JOIN malenames M on F.first_name = M.first_name
where M.first_name is null;",0.8,bg2525,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5097,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"




select count(first_name) as NUMNAMES, first_name, gender 
from actors as temp_table
where first_name not like '%(%' 
and first_name not like '%.%' 
and first_name not like '%)%'
and first_name not like '%,%'
and gender not like '%F%'
group by first_name, gender
HAVING NUMNAMES >= 50
order by first_name ASC;

Create temporary table femalenames as
select count(first_name) as NUMNAMES, first_name, gender 
from actors as temp_table
where first_name not like '%(%' 
and first_name not like '%.%' 
and first_name not like '%)%'
and first_name not like '%,%'
and gender not like '%M%'
group by first_name, gender
HAVING NUMNAMES >= 50
order by first_name ASC;
Create temporary table malenames as
select count(first_name) as NUMNAMES, first_name, gender 
from actors as temp_table
where first_name not like '%(%' 
and first_name not like '%.%' 
and first_name not like '%)%'
and first_name not like '%,%'
and gender not like '%F%'
group by first_name, gender
HAVI",0.8,bg2525,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5098,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"Use imdb;
select count(first_name) as NUMNAMES, first_name 
from actors as temp_table
where first_name not like '%(%' 
and first_name not like '%.%' 
and first_name not like '%)%'
and first_name not like '%,%'
group by first_name
HAVING NUMNAMES >= 50;",1.0,bg2525,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5099,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.track_name, T.artist_id, T.album_id,  Min(P.played_on), Max(P.Played_on) from track as T
left outer join tracks_played as P on T.track_id = P.track_id 
group by T.track_name, T.artist_id, T.album_id;",1.0,bg2525,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5100,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select L.artist_id, A.artist_name, count(L.album_id) as num_albums from artist as A
inner join album as L on A.artist_id = L.artist_ID
inner join track as T on T.album_id = L.album_id
Group by A.artist_name, artist_ID;",0.8,bg2525,"SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name","#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,"The feedback from the TA was SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name"
5101,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select SUBSTRING(T.played_on, 1, 10), T.artist_id, A.artist_name, count(T.user_id) as num, sum(r.time) from tracks_played as T
INNER JOIN track as r on T.track_id = r.track_id
Inner join artist as A on T.artist_id = A.artist_id
group by T.artist_id, SUBSTRING(played_on, 1, 10);
",0.8,bg2525,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;"
5102,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select U.user_id, sum(r.time), count(T.played_on) from users as U
LEFT OUTER JOIN tracks_played as T on U.user_id = T.user_id
LEFT OUTER JOIN album as A on T.album_id = A.album_id
LEFT OUTER JOIN track as r on T.track_id = r.track_id
group by U.user_id; ",0.8,bg2525,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
5103,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id, sum(time) from track
group by album_id
having sum(time) >= '60';",1.0,bg2525,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5104,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select B.album_id, count(T.track_name), sum(T.time) from artist as A
INNER JOIN album as B on A.artist_id = B.artist_id
INNER JOIN track as T on A.artist_id = T.artist_id
group by B.album_id;",0.8,bg2525,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
5105,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select A.artist_id, count(album_id) from artist as A
INNER JOIN album as B on A.artist_id = B.artist_id
group by A.artist_id;",1.0,bg2525,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5106,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time from track;",1.0,bg2525,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5107,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(track_name) as track_count from track;,1.0,bg2525,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5108,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(artist_name) as total_artists from artist;,1.0,bg2525,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5109,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name from users as U
left outer join tracks_played as T on U.user_id = T.user_id
where T.played_on is null;",1.0,bg2525,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5110,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.user_id, U.first_name, U.last_name, A.album_name, r.track_name, T.played_on from users as U
INNER JOIN tracks_played as T on U.user_id = T.user_id
INNER JOIN album as A on T.album_id = A.album_id
INNER JOIN track as r on T.track_id = r.track_id;
",1.0,bg2525,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5111,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track_name, artist_name, time from artist as A
INNER JOIN album as B on A.artist_id = B.artist_id
INNER JOIN track as T on B.album_id = T.album_id
ORDER BY time asc;",0.7,bg2525,"


Answer Key








SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
WHERE&nbsp;R.artist_name&nbsp;=&nbsp;'The&nbsp;Stone&nbsp;Roses'
ORDER&nbsp;BY&nbsp;T.time







","
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,"The feedback from the TA was 


Answer Key








SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
WHERE&nbsp;R.artist_name&nbsp;=&nbsp;'The&nbsp;Stone&nbsp;Roses'
ORDER&nbsp;BY&nbsp;T.time







"
5112,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name, artist_name, album_name from artist as A
INNER JOIN album as B on A.artist_id = B.artist_id
INNER JOIN track as T on B.album_id = T.album_id;",0.7,bg2525,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
5113,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select * from album as A
INNER JOIN track as t on A.artist_id = t.artist_id
where album_name = 'Second Coming'; ",1.0,bg2525,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5114,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;
select * from artist as A
INNER JOIN album as B on A.artist_id = B.artist_id
where artist_name = 'New Order'; ",1.0,bg2525,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5115,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"Select track_name From track where track_name like ""%love%"";

'Bizarre Love Triangle'
'Bizarre Love Triangle'
'Bizarre Love Triangle'
'Do You Love Me?'
'Loverman'
'I Let Love In'
'Do You Love Me? (Part Two)'
'Ten Storey Love Song'
'Love Spreads'
'Loveboat'
'Under The Influence Of Love'
",0.95,bg2525,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5116,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Select track_name From track where artist_id = 1 or artist_id = 3 or artist_id = 5;


Select track_name From track where artist_id in (1,3,5);


'Kiss Of Death'
'Shame Of The Nation'
'1963'
'Fine Time'
'Temptation'
'True Faith'
'The Perfect Kiss'
'Ceremony'
'Regret'
'Crystal'
'Bizarre Love Triangle'
'Confusion'
'Round And Round'
'Blue Monday'
'Brutal'
'Slow Jam'
'Everyone Everywhere'
'Ceremony [Studio 54, Barcelona 7/7/84]'
'Procession [Polytechnic of Central London, London 6/12/85]'
'Everything\'s Gone Green [Tolworth Recreation Centre, London 12/3/85]'
'In A Lonely Place [Glastonbury Festival 20/6/81]'
'Age Of Consent [Spectrum Arena, Warrington 1/3/86]'
'Elegia [Glastonbury Festival 19/6/87]'
'The Perfect Kiss [Glastonbury Festival 19/6/87]'
'Fine Time [Popular Creek Music Theatre, Chicago 30/6/89]'
'World [Starplex Amphitheatre, Dallas 21/7/93]'
'Regret [Reading Festival 29/8/93]'
'As It Is When It Was [Reading Festival 29/8/93]'
'Intermission By A",0.95,bg2525,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5117,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"Select * From album where album_name > ""e"" and album_name < ""s"";

1	1	Retro - John McCready FAN
1	3	Retro - Miranda Sawyer POP
1	4	Retro - New Order / Bobby Gillespie LIVE
1	5	Power, Corruption & Lies
2	1	Let Love In
3	1	Live Around The World
3	2	In A Silent Way
4	1	Exile On Main Street
6	1	Light Years",0.7,bg2525,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
5118,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"Select * From track where track_name < ""m"";

# artist_id, album_id, track_id, track_name, time
'1', '1', '0', 'Elegia', '4.93'
'1', '1', '1', 'In A Lonely Place', '6.26'
'1', '1', '5', 'Let\'s Go', '3.90'
'1', '1', '6', 'Broken Promise', '3.76'
'1', '1', '7', 'Dreams Never End', '3.20'
'1', '1', '8', 'Cries And Whispers', '3.42'
'1', '1', '9', 'All Day Long', '5.18'
'1', '1', '11', 'Leave Me Alone', '4.67'
'1', '1', '12', 'Lonesome Tonight', '5.19'
'1', '1', '13', 'Every Little Counts', '4.47'
'1', '2', '0', 'In A Lonely Place', '6.30'
'1', '2', '3', 'Hurt', '6.98'
'1', '2', '5', 'Confusion', '7.64'
'1', '2', '6', 'Lonesome Tonight', '5.20'
'1', '2', '9', 'Kiss Of Death', '7.05'
'1', '2', '11', '1963', '5.63'
'1', '3', '0', 'Fine Time', '4.71'
'1', '3', '4', 'Ceremony', '4.41'
'1', '3', '6', 'Crystal', '6.83'
'1', '3', '7', 'Bizarre Love Triangle', '4.35'
'1', '3', '8', 'Confusion', '8.22'
'1', '3', '10', 'Blue Monday', '7.48'
'1', '3', '11', 'Brutal', '4.83'
",0.95,bg2525,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5119,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"Select * From track where artist_id = 3 and album_id = 2;


'3', '2', '0', 'Shhh/Peaceful', '16.67'
'3', '2', '1', 'In A Silent Way/It\'s About That Time', '16.67'
",0.95,bg2525,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5120,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"Select * From album where artist_id = 4;

4	1	Exile On Main Street",0.95,bg2525,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5121,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"Select * From artist where artist_name = ""the rolling stones"";

4	The Rolling Stones",0.95,bg2525,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5122,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"Select * From artist where artist_id = 5

5	The Stone Roses",0.95,bg2525,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5123,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"Select track_name, time FROM track ORDER BY time asc LIMIT 10;

'Intermission By Alan Wise [Olympia, Paris 12/11/01]', '1.34'
'In A Silent Way', '1.81'
'Rip This Joint', '2.38'
'Turd On The Run', '2.64'
'Jangling Jack', '2.78'
'Full Nelson', '2.81'
'I Just Want To See His Face', '2.90'
'Sweet Black Angel', '2.97'
'Your Star Will Shine', '2.99'
'Shake Your Hips', '3.00'
",0.95,bg2525,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5124,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"Select album_name AS album_title , artist_id FROM album;


'Retro - John McCready FAN', '1'
'Substance (Disc 2)', '1'
'Retro - Miranda Sawyer POP', '1'
'Retro - New Order / Bobby Gillespie LIVE', '1'
'Power, Corruption & Lies', '1'
'Substance 1987 (Disc 1)', '1'
'Brotherhood', '1'
'Let Love In', '2'
'Live Around The World', '3'
'In A Silent Way', '3'
'Exile On Main Street', '4'
'Second Coming', '5'
'Light Years', '6'
",0.95,bg2525,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5125,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"Select artist_name FROM artist ORDER BY artist_name;

'Kylie Minogue'
'Miles Davis'
'New Order'
'Nick Cave & The Bad Seeds'
'The Rolling Stones'
'The Stone Roses'
",0.95,bg2525,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5126,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select * from track;

'1', '1', '0', 'Elegia', '4.93'
'1', '1', '1', 'In A Lonely Place', '6.26'
'1', '1', '2', 'Procession', '4.47'
'1', '1', '3', 'Your Silent Face', '5.99'
'1', '1', '4', 'Sunrise', '6.01'
'1', '1', '5', 'Let\'s Go', '3.90'
'1', '1', '6', 'Broken Promise', '3.76'
'1', '1', '7', 'Dreams Never End', '3.20'
'1', '1', '8', 'Cries And Whispers', '3.42'
'1', '1', '9', 'All Day Long', '5.18'
'1', '1', '10', 'Sooner Than You Think', '5.21'
'1', '1', '11', 'Leave Me Alone', '4.67'
'1', '1', '12', 'Lonesome Tonight', '5.19'
'1', '1', '13', 'Every Little Counts', '4.47'
'1', '1', '14', 'Run Wild', '3.95'
'1', '2', '0', 'In A Lonely Place', '6.30'
'1', '2', '1', 'Procession', '4.46'
'1', '2', '2', 'Mesh', '3.44'
'1', '2', '3', 'Hurt', '6.98'
'1', '2', '4', 'The Beach', '7.32'
'1', '2', '5', 'Confusion', '7.64'
'1', '2', '6', 'Lonesome Tonight', '5.20'
'1', '2', '7', 'Murder', '3.93'
'1', '2', '8', 'Thieves Like Us', '6.95'
'1', '2', '9', 'Kiss Of Death'",0.95,bg2525,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5127,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select * from album;

'Retro - John McCready FAN
Substance (Disc 2)
Retro - Miranda Sawyer POP
Retro - New Order / Bobby Gillespie LIVE
Power, Corruption & Lies
Substance 1987 (Disc 1)
Brotherhood
Let Love In
Live Around The World
In A Silent Way
Exile On Main Street
Second Coming
Light Years
",0.95,bg2525,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5128,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"Select * from artists;
'1', 'New Order'
'2', 'Nick Cave & The Bad Seeds'
'3', 'Miles Davis'
'4', 'The Rolling Stones'
'5', 'The Stone Roses'
'6', 'Kylie Minogue'
",0.95,bg2525,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5173,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"create temporary table both_eligible as
select first_name,
count(first_name)
from eligible_names
where first_name not in (
select first_name
from female_only) 
and first_name not in (
select first_name
from male_only)
group by first_name
limit 500000; 

create temporary table both_eligible_male as 
select first_name, gender, count(*) as num_actors
from actors
where first_name in (
select first_name
from both_eligible)
and gender = ""M""
group by first_name, gender; 

create temporary table both_eligible_female as
select first_name, gender, count(*) as num_actresses
from actors 
where first_name in (
select first_name
from both_eligible)
and gender = ""F""
group by first_name, gender; 

create temporary table both_eligible_freq as
select m.first_name, num_actors, num_actresses
from both_eligible_male as m
inner join both_eligible_female as f on m.first_name = f.first_name; 

select first_name, log(num_actors/num_actresses) as ambiguous_rank
from both_eli",2.0,osw9659,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5174,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table female_only as 
select first_name, count(*) as num_actresses
from female_names 
where first_name not in (
select first_name
from male_names) 
group by first_name
having num_actresses >= 50 
order by num_actresses desc
limit 500000; ",1.0,osw9659,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5175,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"create temporary table male_names as 
select first_name, last_name
from actors 
where first_name not like ""%(%)%"" and first_name not like ""%.%"" and gender = ""M""
limit 500000;

create temporary table female_names as 
select first_name, last_name
from actors 
where first_name not like ""%(%)%"" and first_name not like ""%.%"" and gender = ""F""
limit 500000; 

create temporary table male_only as 
select first_name, count(*) as num_actors
from male_names 
where first_name not in (
select first_name
from female_names) 
group by first_name
having num_actors >= 50 
order by num_actors desc
limit 500000; ",1.0,osw9659,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5176,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"use imdb;
create temporary table eligible_names as 
select first_name, 
count(first_name) as num_actors 
from actors
where first_name not like ""%(%)%"" and first_name not like ""%.%"" 
group by first_name 
having num_actors >= 50
limit 10000; ",1.0,osw9659,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5177,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.artist_id, t.album_id, t.track_id, t.track_name, min(tp.played_on), max(tp.played_on)
from track as t
left outer join tracks_played as tp on tp.artist_id = t.artist_id and tp.album_id = t.album_id and tp.track_id = t.track_id
group by t.artist_id, t.album_id, t.track_id
order by artist_id; ",1.0,osw9659,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5178,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select al.artist_id, ar.artist_name, count(*)
from artist as ar 
left outer join album as al on ar.artist_id = al.artist_id
group by al.artist_id, ar.artist_name; ",1.0,osw9659,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5179,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(tp.played_on) as date_played, tp.artist_id, ar.artist_name, count(distinct tp.user_id) as num_users, sum(t.time) as total_time, count(tp.track_id) as total_tracks
from tracks_played as tp
left outer join track as t on tp.artist_id = t.artist_id and tp.album_id = t.album_id and tp.track_id = t.track_id 
left outer join album as al on t.artist_id = al.artist_id and t.album_id = al.album_id 
left outer join artist as ar on al.artist_id = ar.artist_id 
group by tp.artist_id, ar.artist_name, date_played 
order by date_played; 
",1.0,osw9659,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5180,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(tp.played_on), sum(t.time)
from users as u
left outer join tracks_played as tp on u.user_id = tp.user_id 
left outer join track as t on tp.artist_id = t.artist_id and tp.album_id = t.album_id and tp.track_id = t.track_id
group by u.user_id; ",1.0,osw9659,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5181,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id
from track
group by artist_id, album_id
having sum(time) > 60; ",1.0,osw9659,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5182,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(*) as num_tracks, sum(time) as total_time
from track
group by artist_id, album_id; ",1.0,osw9659,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
5183,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) 
from album 
group by artist_id; ",1.0,osw9659,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5184,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time)
from track; ",1.0,osw9659,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5185,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(*) 
from track; ",1.0,osw9659,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5186,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music; 
select count(*) 
from artist; ",1.0,osw9659,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5202,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select u.first_name, u.last_name
from users as u
left outer join tracks_played as tp on u.user_id = tp.user_id
where tp.played_on is null; ",1.0,osw9659,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5203,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id, u.first_name, u.last_name, al.album_name, t.track_name, tp.played_on
from users as u 
inner join tracks_played as tp on u.user_id = tp.user_id
inner join track as t on tp.track_id = t.track_id 
inner join album as al on t.album_id = al.album_id
order by u.user_id asc
limit 5000; ",0.7,osw9659,"


Answer Key







SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on






","SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on






"
5204,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select t.track_id, t.track_name, ar.artist_id, al.album_id, t.time
from track as t
inner join artist as ar on t.artist_id = ar.artist_id
inner join album as al on t.artist_id = al.artist_id 
where ar.artist_name = 'The Stone Roses' 
order by t.time asc; ",1.0,osw9659,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5205,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name, a.album_name, ar.artist_name
from track as t 
inner join album as a on t.artist_id = a.artist_id 
inner join artist as ar on t.artist_id = ar.artist_id; ",0.7,osw9659,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
5206,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select t.track_id, t.track_name, a.artist_id, a.album_id, t.time
from track as t
inner join album as a on t.artist_id = a.artist_id 
where a.album_name = 'Second Coming'; ",1.0,osw9659,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5207,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist as ar
inner join album as al on ar.artist_id = al.artist_id
where ar.artist_name = 'New Order';",1.0,osw9659,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5215,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select* 
from track
where track_name like '%love%'; ",1.0,osw9659,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5216,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select*
from track 
where artist_id = 1 or artist_id =3 or artist_id = 5; 

select*
from track 
where artist_id in (1, 3, 5); ",1.0,osw9659,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5217,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select*
from track 
where track_name >= 'F%' AND track_name <= 'R%'; ",0.7,osw9659,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
5218,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select*
from track 
where track_name < 'M%' 
",1.0,osw9659,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5219,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select*
from track 
where artist_id = 3 AND album_id = 2; ",1.0,osw9659,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5220,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select*
from album 
where artist_id = 4; ",1.0,osw9659,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5221,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * 
from artist 
where artist_name = 'The Rolling Stones'; ",1.0,osw9659,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5222,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music; 
select *
from artist
where artist_id = 5; ",1.0,osw9659,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5223,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select track_name, time
from track
order by time asc
limit 10; ",1.0,osw9659,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5224,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_name as album_title, artist_id
from album; ",1.0,osw9659,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5225,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name asc; ",1.0,osw9659,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5226,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select*
from track; ",1.0,osw9659,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5227,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select*
from album; ",1.0,osw9659,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5228,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;
show tables;
select*
from artist; ",1.0,osw9659,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5317,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
    en.first_name, male_frequency, female_frequency,
    ABS(LOG(male_frequency / female_frequency)) AS ambiguity_score
FROM
    eligible_names AS en
INNER JOIN
    (SELECT first_name,COUNT(*) AS male_frequency
    FROM actors
    WHERE first_name IN (SELECT first_name FROM actors) AND gender = 'M'
    GROUP BY
first_name) AS male_actors
ON
    en.first_name = male_actors.first_name
INNER JOIN
    (SELECT first_name,COUNT(*) AS female_frequency
    FROM actors
    WHERE first_name IN (SELECT first_name FROM actors) AND gender = 'F'
    GROUP BY
first_name) AS female_actors
ON
    en.first_name = female_actors.first_name
ORDER BY
    ambiguity_score ASC;",2.0,cnt240,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5318,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
SELECT *
FROM eligible_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM actors
    where gender = 'M'
)
ORDER BY cnt DESC;
",1.0,cnt240,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5319,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT *
FROM eligible_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM actors
    where gender = 'F'
)
ORDER BY cnt DESC;",1.0,cnt240,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5320,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name, count(first_name) AS cnt
		FROM actors
	WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
	GROUP BY first_name
	HAVING cnt >= 50
    ORDER BY cnt DESC;",1.0,cnt240,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5328,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.artist_id, t.album_id, t.track_id, t.track_name, MIN(tp.played_on) AS first_played, MAX(tp.played_on) AS last_played
FROM track t
LEFT JOIN tracks_played tp ON t.track_id = tp.track_id
GROUP BY t.track_id, t.track_name, t.artist_id, t.album_id;",1.0,cnt240,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5329,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_id, a.artist_name, COUNT(al.album_id) AS num_albums
FROM artist a
LEFT JOIN album al ON a.artist_id = al.artist_id
GROUP BY a.artist_id, a.artist_name
ORDER BY a.artist_id;",1.0,cnt240,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5330,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(played_on), artist_name, count(distinct tp.user_id), sum(time), a.artist_id, count(t.track_id)
from tracks_played as tp
inner join track as t on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id
inner join album as a on a.artist_id = t.artist_id and a.album_id = t.album_id
inner join artist as ar on ar.artist_id = a.artist_id
group by date(played_on),artist_name,a.artist_id;",1.0,cnt240,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5331,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, COUNT(tp.track_id), SUM(tp.time)
FROM users AS u
LEFT JOIN tracks_played AS tp ON u.user_id = tp.user_id
LEFT JOIN track AS t ON t.album_id = tp.album_id AND t.artist_id = tp.artist_id AND t.track_id = tp.track_id
GROUP BY u.user_id;
",0.8,cnt240,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
5332,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, artist_id
FROM track
GROUP BY album_id, artist_id
HAVING SUM(time) > 60;",1.0,cnt240,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5333,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT A.album_name, COUNT(T.track_id) AS track_count, SUM(T.time) AS total_track_length
FROM album A
LEFT JOIN track T on A.album_id = T.album_id
GROUP BY A.album_name;
",0.8,cnt240,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
5334,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS album_count
FROM album
GROUP BY artist_id;",1.0,cnt240,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5335,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS average_track_length, STDDEV(time) AS track_length_stddev
FROM track;",1.0,cnt240,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5336,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id) as track_count
from track;",1.0,cnt240,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5337,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(artist_id) as artist_count
from artist;",1.0,cnt240,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5338,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
from users U
left outer join tracks_played T on U.user_id = T.user_id
where T.played_on is null;",1.0,cnt240,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5339,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.user_id, first_name, last_name, album_name, track_name, played_on
from tracks_played as TP
inner join users as U on U.user_id = TP.user_id
inner join track as T on T.track_id = TP.track_id and T.album_id = TP.album_id and T.artist_id = TP.artist_id
inner join album as A on A.album_id = T.album_id and A.artist_id = T.artist_id
order by U.user_id asc;
",1.0,cnt240,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5340,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
from artist A
inner join track T on A.artist_id = T.artist_id
where artist_name = 'The Stone Roses'
order by time;",1.0,cnt240,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5341,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, B.artist_name, A.album_name
from track T
inner join album A on T.artist_id = A.artist_id AND T.album_id = A.album_id
inner join artist B on T.artist_id = B.artist_id;",1.0,cnt240,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5342,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
from track T
inner join album A on A.album_id = T.album_id and A.artist_id = T.artist_id
where A.album_name = 'Second Coming';",1.0,cnt240,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5343,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;

select*
from artist A
inner join album B on A.artist_id = B.artist_id
where artist_name = 'New Order';",1.0,cnt240,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5344,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT*
FROM track
WHERE track_name like ('%love%');",1.0,cnt240,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5345,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"
SELECT*
FROM track
WHERE artist_id = 1 or artist_id = 3 or artist_id = 5;

SELECT*
FROM track
WHERE artist_id in (1, 3, 5);",1.0,cnt240,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5346,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT*
FROM album
WHERE album_name > 'E' and album_name < 'S';",0.7,cnt240,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
5347,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT*
FROM track
WHERE track_name < 'M';",1.0,cnt240,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5348,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select*
from track
where artist_id = 3 and album_id = 2;",1.0,cnt240,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5349,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select*
from album
where artist_id = 4;",1.0,cnt240,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5350,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select*
from artist
where artist_name = 'The Rolling Stones';",1.0,cnt240,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5351,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select*
from artist
where artist_id = 5;",1.0,cnt240,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5352,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select*
from track
order by time
limit 10;",1.0,cnt240,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5353,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title
from album;",1.0,cnt240,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5354,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select*
from artist
order by artist_name;",1.0,cnt240,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5355,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select artist_id, album_id, track_id, track_name, time
from track;",1.0,cnt240,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5356,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select artist_id, album_id, album_name
from album;",1.0,cnt240,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5357,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select artist_id, artist_name
from artist;",1.0,cnt240,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5403,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE famale_and_male AS
(SELECT first_name, SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS female_freq, SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS male_freq
FROM eligible_names
WHERE first_name IN (
	SELECT *
		FROM famale_only) AND
	first_name IN (
		SELECT *
			FROM male_only)
GROUP BY first_name
HAVING COUNT(DISTINCT gender) = 2);

SELECT first_name, male_freq, female_freq, ROUND(ABS(LOG(male_freq/female_freq)),2) AS ambiguity_score
FROM famale_and_male
ORDER BY ambiguity_score ASC;",2.0,vf2126,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5404,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS name_frequency
FROM eligible_names
WHERE first_name IN (
	SELECT *
		FROM famale_only)
AND first_name NOT IN (
	SELECT *
		FROM male_only)
GROUP BY first_name
ORDER BY name_frequency DESC;",1.0,vf2126,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5405,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE famale_only AS
(SELECT first_name
FROM eligible_names 
WHERE gender = 'F');

SELECT first_name, COUNT(*) AS name_frequency
FROM eligible_names
WHERE first_name IN (
	SELECT *
		FROM male_only)
AND first_name NOT IN (
	SELECT *
		FROM famale_only)
GROUP BY first_name
ORDER BY name_frequency DESC;",1.0,vf2126,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5406,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
(SELECT *
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
  AND first_name IN (
    SELECT first_name
    FROM actors
    GROUP BY first_name
    HAVING COUNT(*) >= 50));
  

",0.7,vf2126,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5413,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.track_id, T.album_id, T.track_name, MIN(R.played_on) as min_date, MAX(R.played_on) as max_date
FROM track T
	RIGHT JOIN tracks_played R ON R.track_id = T.track_id 
GROUP BY T.artist_id, T.track_name, T.track_id, T.album_id;",1.0,vf2126,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5414,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id ,A.artist_name, COUNT(album_id) as cnt_album
FROM artist A
	INNER JOIN album L ON A.artist_id = L.artist_id
GROUP by A.artist_id, A.artist_name;",1.0,vf2126,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5415,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT date(T.played_on) as date, A.artist_id, A.artist_name, COUNT(DISTINCT T.user_id) as cnt_users, SUM(R.time) as total_time
FROM tracks_played T
	LEFT JOIN artist A ON T.artist_id = A.artist_id
    INNER JOIN track R ON R.track_id = T.track_id AND R.artist_id = T.artist_id AND T.album_id = R.album_id
GROUP BY date,A.artist_id, A.artist_name;
",1.0,vf2126,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5416,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(R.track_id) as cnt_tracks, SUM(R.time) as total_time
FROM tracks_played T
	RIGHT JOIN users U ON U.user_id = T.user_id
    LEFT JOIN track R ON R.track_id = T.track_id AND R.artist_id = T.artist_id AND T.album_id = R.album_id
GROUP BY U.user_id
ORDER BY U.user_id;",1.0,vf2126,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5417,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT A.album_id, A.artist_id, SUM(T.time) as total_time
FROM album A
	LEFT JOIN track T ON A.artist_id = T.artist_id AND A.album_id = T.album_id
GROUP by A.album_id, A.artist_id
HAVING total_time >60;",1.0,vf2126,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5418,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT A.album_id, COUNT(T.track_name) as cnt_tracks, SUM(T.time) as total_time
FROM album A
	INNER JOIN track T ON A.album_id = T.album_id AND T.artist_id = A.artist_id
GROUP by A.album_id;",0.8,vf2126,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
5419,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) as cnt_albums
FROM album
GROUP by artist_id;",1.0,vf2126,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5420,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT avg(time) as avg_time, stddev(time) as std_time
FROM track;",1.0,vf2126,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5421,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT count(*) as num_tracks
FROM track;",1.0,vf2126,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5422,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT count(*) as num_artists
FROM artist;",1.0,vf2126,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5438,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM tracks_played T
	RIGHT JOIN users U ON T.user_id = U.user_id
WHERE T.played_on IS NULL;",1.0,vf2126,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5439,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.first_name, U.last_name, U.user_id, A.album_name, K.track_name, T.played_on
FROM tracks_played T
	INNER JOIN users U ON U.user_id = T.user_id
    INNER JOIN artist S ON S.artist_id = T.artist_id
    INNER JOIN album A ON A.album_id = T.album_id AND A.artist_id = T.artist_id
	INNER JOIN track K ON K.album_id = T.album_id AND K.artist_id = T.artist_id AND K.track_id = T.track_id;",1.0,vf2126,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5440,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, A.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN artist A ON A.artist_id = T.artist_id
WHERE A.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,vf2126,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5441,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A.album_name, S.artist_name
FROM album A
	INNER JOIN artist S ON A.artist_id = S.artist_id
    INNER JOIN track T ON T.album_id = A.album_ID AND T.artist_id = A.artist_id;",1.0,vf2126,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5442,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, A.artist_id, A.album_id, T.time
FROM album A
	INNER JOIN track T ON A.artist_id = T.artist_id
WHERE A.album_name = 'Second Coming';",1.0,vf2126,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5443,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM album AL
	INNER JOIN artist AR ON AL.artist_id = AR.artist_id
WHERE AR.artist_name = 'New Order';",1.0,vf2126,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5451,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%love%';",1.0,vf2126,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5452,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Option1: 
SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 2 OR artist_id = 3;

Option2:
SELECT *
FROM track
WHERE artist_id IN (1,2,3);",1.0,vf2126,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5453,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name > 'E' AND album_name < 'S' 
ORDER BY album_name asc;",0.7,vf2126,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
5454,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M'
ORDER BY track_name asc;",1.0,vf2126,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5455,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id=3 AND album_id = 2;
",1.0,vf2126,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5456,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id=4;",1.0,vf2126,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5457,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name LIKE 'The Rolling Stones%';",1.0,vf2126,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5458,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id=5;",1.0,vf2126,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5459,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER by time asc
LIMIT 10;",1.0,vf2126,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5460,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,vf2126,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5461,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name asc;",1.0,vf2126,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5462,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,vf2126,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5463,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;
",1.0,vf2126,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5464,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,vf2126,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5512,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT en.first_name,
       COUNT(DISTINCT a.id / (a.gender = 'M')) AS male_freq,
       COUNT(DISTINCT a.id / (a.gender = 'F')) AS female_freq,
       ABS(LOG(COUNT(DISTINCT a.id / (a.gender = 'M')) / COUNT(DISTINCT a.id / (a.gender = 'F')))) AS ambiguity_value
FROM eligible_names en
INNER JOIN actors a ON en.first_name = a.first_name
WHERE a.gender IN ('M', 'F')
GROUP BY en.first_name
HAVING male_freq > 0 AND female_freq > 0
ORDER BY ambiguity_value ASC;",2.0,maj8683,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5513,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT female_names.first_name, female_names.frequency
FROM female_names
LEFT JOIN male_names ON male_names.first_name = female_names.first_name
WHERE male_names.first_name IS NULL
ORDER BY frequency DESC;",1.0,maj8683,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5514,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT en.first_name, COUNT(a.id) AS frequency
FROM eligible_names en
JOIN actors a ON en.first_name = a.first_name
WHERE a.gender = 'M'
GROUP BY en.first_name;

CREATE TEMPORARY TABLE female_names AS
SELECT en.first_name, COUNT(a.id) AS frequency
FROM eligible_names en
JOIN actors a ON en.first_name = a.first_name
WHERE a.gender = 'F'
GROUP BY en.first_name;

SELECT male_names.first_name, male_names.frequency
FROM male_names
LEFT JOIN female_names ON male_names.first_name = female_names.first_name
WHERE female_names.first_name IS NULL
ORDER BY frequency DESC;",1.0,maj8683,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5515,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name
FROM actors
WHERE first_name NOT LIKE ""%."" AND first_name NOT LIKE ""%(%"" AND first_name NOT LIKE ""%.%""
GROUP BY first_name
HAVING COUNT(*) >= 50 
ORDER BY first_name;",2.0,maj8683,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5524,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT B.artist_id, B.album_id, A.track_id, A.track_name, MIN(B.played_on), MAX(B.played_on)
FROM track A
    LEFT JOIN tracks_played B ON A.track_id = B.track_id AND A.album_id = B.album_id AND A.artist_id = B.artist_id 
GROUP BY A.artist_id, A.album_id, A.track_id;",1.0,maj8683,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5525,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_name, count(B.album_id) AS num_albums
FROM artist A
	INNER JOIN album B ON A.artist_id = B.artist_id
GROUP BY A.artist_name;",1.0,maj8683,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5526,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT A.played_on, A.artist_id, C.artist_name, count(A.user_id) AS users, sum(B.time) AS total_time, sum(B.track_id) AS total_tracks
FROM tracks_played A
	INNER JOIN track B ON A.track_id = B.track_id AND A.album_id = B.album_id AND A.artist_id = B.artist_id
	INNER JOIN artist C ON A.artist_id = C.artist_id
GROUP BY A.played_on, A.artist_id
ORDER BY A.played_on;",0.8,maj8683,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
5527,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT A.user_id, COUNT(C.track_id) AS num_track, SUM(C.time) AS total_time
FROM users A
	LEFT JOIN tracks_played B ON A.user_id = B.user_id
    LEFT JOIN track C ON B.track_id = C.track_id AND B.album_id = C.album_id AND B.artist_id = C.artist_id 
GROUP BY A.user_id
ORDER BY A.user_id;",1.0,maj8683,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5528,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id, count(track_id) AS num_track, SUM(time) AS total_length
FROM track
GROUP BY artist_id, album_id
HAVING total_length > 60;",1.0,maj8683,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5529,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id, album_id, count(track_id) AS num_track, SUM(time) AS total_length
	FROM track
	GROUP BY artist_id, album_id;",1.0,maj8683,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
5530,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, count(album_name)
FROM album
GROUP BY artist_id;",1.0,maj8683,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5531,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),2) AS avg_time, ROUND(STDDEV(time),2) AS std_time
FROM track;",1.0,maj8683,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5532,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,maj8683,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5533,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,maj8683,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5541,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT A.first_name, A.last_name
FROM users A
	LEFT JOIN tracks_played B ON A.user_id = B.user_id
WHERE B.user_id IS NULL
ORDER BY A.first_name;",1.0,maj8683,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5542,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT B.first_name, B.last_name, B.user_id, D.album_name, C.track_name, A.played_on
FROM tracks_played A
	INNER JOIN users B ON A.user_id = B.user_id
    INNER JOIN track C ON A.track_id = C.track_id AND A.album_id = C.album_id AND A.artist_id = C.artist_id
    INNER JOIN album D ON A.album_id = D.album_id AND A.artist_id = D.artist_id;",1.0,maj8683,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5543,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT *
FROM track A
	INNER JOIN artist B ON A.artist_id = B.artist_id
WHERE artist_name = ""The Stone Roses""
ORDER By A.time;",1.0,maj8683,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5544,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT *
FROM track A
	INNER JOIN album B ON A.album_id = B.album_id AND A.artist_id = B.artist_id
    INNER JOIN artist C ON A.artist_id = C.artist_id;",1.0,maj8683,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5545,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT *
FROM track A
	INNER JOIN album B ON A.album_id = B.album_id AND A.artist_id = B.artist_id
WHERE B.album_name = ""Second Coming"";",1.0,maj8683,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5546,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM album A
	INNER JOIN artist B ON A.artist_id = B.artist_id
WHERE B.artist_name = ""New Order"";",1.0,maj8683,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5547,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT B.first_name, B.last_name
FROM tracks_played A
    RIGHT JOIN users B ON A.user_id = B.user_id
WHERE A.user_id IS NULL;",1.0,maj8683,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5548,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT D.first_name, D.last_name, D.user_id, B.album_name,  C.track_name, A.played_on
FROM tracks_played A
    INNER JOIN album B on A.album_id = B.album_id
    INNER JOIN track C ON A.track_id = C.track_id
    INNER JOIN users  D ON A.user_id = D.user_id;",1.0,maj8683,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5549,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT *
FROM track A
	INNER JOIN artist B on A.artist_id = B.artist_id
WHERE B.artist_name = ""The Stone Roses""
Order BY A.time ASC;",1.0,maj8683,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5550,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT A.track_name, C.artist_name, B.album_name
FROM track A
    INNER JOIN album B on A.album_id = B.album_id
    INNER JOIN artist C ON A.artist_id = C.artist_id",0.7,maj8683,"


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






"
5551,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT * 
FROM album A
	INNER JOIN track B on A.album_id = B.album_id
WHERE A.album_name = ""Second Coming"" AND B.artist_id = 5 AND B.album_id = 1;
",1.0,maj8683,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5552,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT * 
FROM album A
	INNER JOIN artist B on A.artist_ID = B.artist_ID
WHERE B.artist_name = ""New Order"";",1.0,maj8683,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5560,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE ""Love"" OR track_name LIKE ""%Love%"" OR track_name LIKE ""Love%"" 
Order By track_name;",1.0,maj8683,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5561,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Using OR
SELECT *
FROM track
WHERE album_id = 1 OR album_id = 3 OR album_id = 5
Order By album_id;

Using IN
SELECT *
FROM track
WHERE album_id IN (1,3,5)
Order By album_id;",1.0,maj8683,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5562,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name BETWEEN ""E"" AND ""S"" AND album_name != ""Exile On Main Street""
Order By album_name;",1.0,maj8683,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
5563,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < ""M%""
Order By track_name;",1.0,maj8683,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5564,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,maj8683,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5565,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",1.0,maj8683,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5566,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = ""The Rolling Stones"";",1.0,maj8683,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5567,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;",1.0,maj8683,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5568,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
Order By time
LIMIT 10;",1.0,maj8683,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5569,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_name AS album_title, artist_id
FROM album
Order By album_title;",1.0,maj8683,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5570,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
Order By artist_name;",1.0,maj8683,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5571,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track
Order By track_name;",1.0,maj8683,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5572,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album
Order By album_name;",1.0,maj8683,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5573,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist
Order By artist_name;",1.0,maj8683,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5609,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"#I couldn't get it to work but this is what I had with 1 minute left on the exam

SELECT O.CustomerID
	, C.CompanyName
	, SUM(D.UnitPrice*D.Quantity) AS totalPrice
	, SUM(D.UnitPrice*D.Quantity*D.Discount) AS totalDiscount
	, SUM(D.UnitPrice*D.Quantity*(1-D.Discount)) AS finalPrice
	, CASE WHEN finalPrice < 1000 THEN ""LOW""
	, WHEN finalPrice >= 1000 AND < 5000 THEN ""MEDIUM""
	, ELSE ""HIGH""
FROM Orders O
	JOIN OrderDetails D ON O.OrderID = D.OrderID
	JOIN Customers C ON O.CustomerID = C.CustomerID
WHERE YEAR(OrderDate) = 2016
GROUP BY O.CustomerID
ORDER BY O.CustomerID;",9.0,os938,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
5610,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"#ONLY 81 ROWS WILL RETURN IF I HAVE TIME

SELECT O.CustomerID, C.CompanyName, SUM(D.UnitPrice*D.Quantity) AS totalPrice, SUM(D.UnitPrice*D.Quantity*D.Discount) AS totalDiscount
FROM Orders O
	JOIN OrderDetails D ON O.OrderID = D.OrderID
	JOIN Customers C ON O.CustomerID = C.CustomerID
WHERE YEAR(OrderDate) = 2016
GROUP BY O.CustomerID
ORDER BY O.CustomerID;

",10.0,os938,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
5611,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O.OrderID, O.CustomerID, COUNT(DISTINCT D.ProductID) AS numProducts, SUM(D.Quantity) AS numUnits, SUM(D.UnitPrice*D.Quantity) AS totalPrice
FROM Orders O
	JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID, O.CustomerID
HAVING totalPrice > 10000
ORDER BY totalPrice DESC;",7.5,os938,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
5612,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS avgFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY avgFreight DESC
LIMIT 3;",7.5,os938,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
5613,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(O.CustomerID) AS cntOrders
FROM Customers C
	LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID;",7.5,os938,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
5614,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
	JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID;",5.0,os938,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
5615,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE ""%queso%"";",5.0,os938,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
5616,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = ""Sales Representative"" AND Country = ""USA"";",5.0,os938,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
5617,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"#Result gave 836 rows. Not 597. Want to get to every question though so will return if I have time

SELECT T.origin, T.dest, A1.state
FROM m_ticket_prices T
	JOIN m_airports A1 ON T.origin = A1.airport
	JOIN m_airports A2 ON T.dest = A2.airport
WHERE A1.state = A2.state;",7.5,os938,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
5618,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT A.state, COUNT(DISTINCT T.origin) AS numAirports, COUNT(DISTINCT T.carrier) AS numCarriers, SUM(T.passengers) AS totalPass, AVG(T.fare_per_mile) AS avgFarePerMile
FROM m_airports A
	JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state;",7.5,os938,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
5619,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT carrier, COUNT(carrier) AS numRoutes, COUNT(DISTINCT origin) AS numDepart, AVG(fare_per_mile) AS avgFarePerMile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers) > 20000;",10.0,os938,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
5630,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin, dest, MIN(fare) AS minFare, MAX(fare) AS maxFare, AVG(fare) AS avgFare, COUNT(carrier) AS cntCarrier, SUM(passengers) AS totalPass
FROM m_ticket_prices
GROUP BY origin, dest
HAVING cntCarrier >= 3 and totalPass > 10000;",7.5,os938,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
5647,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT P.origin
	, M.state
	, P.total_passengers
	, RANK() OVER(ORDER BY P.total_passengers DESC) AS natl_rank
	, RANK() OVER(PARTITION BY M.state ORDER BY P.total_passengers DESC) AS state_rank
FROM passengers_per_airport P
	JOIN m_airports M ON P.origin = M.airport
ORDER BY total_passengers DESC;",4.0,os938,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
5648,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",1.0,os938,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
5649,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT S.MemberSince, S.SignUpsAsOf, I.InactiveAsOf, S.SignUpsAsOf-I.InactiveAsOf AS TotalActive
FROM SignUpsAsOf S
	LEFT JOIN InactiveAsOf I ON S.MemberSince = I.LastUpdate
ORDER BY S.MemberSince;",4.0,os938,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
5650,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT *, SUM(cnt) OVER(ORDER BY LastUpdate) AS InactiveAsOf
FROM InactiveOn;",2.0,os938,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
5651,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsAsOf AS
SELECT *, SUM(cnt) OVER(ORDER BY MemberSince) AS SignUpsAsOf
FROM SignUpsOn;",2.0,os938,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
5652,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT LastUpdate, COUNT(LastUpdate) AS cnt
FROM Profiles
GROUP BY LastUpdate
ORDER BY LastUpdate;",1.0,os938,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
5653,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"CREATE TEMPORARY TABLE SignUpsOn AS
SELECT MemberSince, COUNT(MemberSince) AS cnt
FROM Profiles
GROUP BY MemberSince
ORDER BY MemberSince;",1.0,os938,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
5654,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_freq AS
SELECT first_name, COUNT(first_name) AS male_count
FROM actors
WHERE gender = ""M""
GROUP BY first_name;

CREATE TEMPORARY TABLE female_freq AS
SELECT first_name, COUNT(first_name) AS female_count
FROM actors
WHERE gender = ""F""
GROUP BY first_name;

SELECT E.first_name, ABS(LOG(M.male_count/F.female_count)) AS amb_name
FROM eligible_names E
	LEFT JOIN male_freq M ON E.first_name = M.first_name
	LEFT JOIN female_freq F ON E.first_name = F.first_name
WHERE ABS(LOG(M.male_count/F.female_count)) IS NOT NULL
ORDER BY amb_name;
",2.0,os938,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5655,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE only_female_names AS
SELECT A.first_name
FROM actors A
WHERE A.first_name NOT IN (SELECT first_name FROM actors WHERE gender = ""M"");

SELECT first_name, COUNT(first_name) AS cnt_first_name
FROM only_female_names
WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND first_name NOT LIKE ""%)%""
GROUP BY first_name
HAVING cnt_first_name >= 50
ORDER BY COUNT(first_name) DESC;

Corresponding frequencies:
Anna	1612
Lisa	1227
PatrÃ­cia	1037
Linda	950
Jane	778
Sandra	769
Claudia	665
Ann	665
Olga	641
Diana	622
Caroline	611
Betty	600
Louise	585
Alice	566
Suzanne	551
Rita	542
Ana	534
Dorothy	527
Elena	526
Victoria	525
Tina	495
Alexandra	491
Deborah	490
Teresa	475
Virginia	471
Emma	465
Vanessa	448
Jenny	444
Ellen	438
Emily	435
Elisabeth	425
Judith	411
Nathalie	411
Martha	408
Silvia	401
Sonia	397
Jill	396
Helene	395
Peggy	394
Kathleen	394
Jeanne	386
Sally	386
Erika	383
Katherine	376
Monique	370
Brigitte	370
C",1.0,os938,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5656,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE only_male_names AS
SELECT A.first_name
FROM actors A
WHERE A.first_name NOT IN (SELECT first_name FROM actors WHERE gender = ""F"");

SELECT first_name, COUNT(first_name) AS cnt_first_name
FROM only_male_names
WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND first_name NOT LIKE ""%)%""
GROUP BY first_name
HAVING cnt_first_name >= 50
ORDER BY COUNT(first_name) DESC;

Corresponding frequencies:
Richard	2403
Mark	2086
Charles	1671
Bob	1376
Antonio	1326
Brian	1284
Patrick	1266
Joseph	1120
Andrew	1091
Kevin	1060
Harry	997
AndrÃ©	945
Stephen	926
Adam	875
Hans	873
Ron	872
Alan	865
Luis	818
Jonathan	812
Matthew	791
Bernard	766
Steven	745
Greg	731
Dave	724
Arthur	706
Jimmy	700
Jorge	697
Manuel	676
Fernando	661
Albert	650
Philip	649
Al	640
Juan	638
Carl	632
Bruce	628
Bruno	617
Alain	613
Aleksandr	595
Alberto	584
Francisco	581
Raymond	559
Sergio	550
Barry	544
Maurice	536
Stefan	534
Roy	524
Nicholas	507
",1.0,os938,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5657,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(first_name) AS cnt_first_name
FROM actors
WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%"" AND first_name NOT LIKE ""%)%""
GROUP BY first_name
HAVING cnt_first_name >= 50
ORDER BY COUNT(first_name) DESC;",1.0,os938,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5658,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id
	, T.album_id
	, T.track_id
	, T.track_name
	, MIN(played_on) AS first_played
	, MAX(played_on) AS last_played
FROM track T
	LEFT JOIN tracks_played TP ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
GROUP BY T.artist_id, T.album_id, T.track_id;",1.0,os938,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5659,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"# WITH ARTIST ID

SELECT R.artist_id, R.artist_name, COUNT(L.album_id) AS num_album
FROM album L
	JOIN artist R ON L.artist_id = R.artist_id
GROUP BY R.artist_id;


# WITHOUT ARTIST ID

SELECT R.artist_name, COUNT(L.album_id) AS num_album
FROM album L
	JOIN artist R ON L.artist_id = R.artist_id
GROUP BY R.artist_name;",1.0,os938,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5660,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played
	, R.artist_id
	, R.artist_name
	, COUNT(DISTINCT TP.user_id) AS users
	, SUM(T.time) AS total_time
	, COUNT(TP.artist_id) AS total_tracks
FROM tracks_played TP
	JOIN artist R ON TP.artist_id = R.artist_id
	JOIN track T ON TP.track_id = T.track_id AND TP.album_id = T.album_id AND TP.artist_id = T.artist_id
GROUP BY date_played, R.artist_id
ORDER BY date_played;",1.0,os938,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5661,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id
	, COUNT(TP.user_id) AS cnt_listened
	, SUM(time) AS listen_time
FROM users U
	LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
	LEFT JOIN track T ON TP.track_id = T.track_id AND TP.album_id = T.album_id AND TP.artist_id = T.artist_id
GROUP BY U.user_id;",1.0,os938,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5662,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id
	, COUNT(track_id) AS cnt_tracks
	, SUM(time) AS album_time
FROM track
GROUP BY artist_id, album_id
HAVING album_time > 60;",1.0,os938,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5663,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id, album_id
	, COUNT(track_id) AS cnt_tracks
	, SUM(time) AS album_time
FROM track
GROUP BY artist_id, album_id;
",1.0,os938,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
5664,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,os938,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5665,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),2) AS avg_time, ROUND(STDDEV(time),2) AS std_time
FROM track;",1.0,os938,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5666,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS cnt_tracks
FROM track;",1.0,os938,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5667,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_id) AS cnt_artist
FROM artist;",1.0,os938,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5668,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
	LEFT JOIN tracks_played P ON U.user_id = P.user_id
WHERE P.played_on IS NULL;",1.0,os938,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5669,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, L.album_name, T.track_name, P.played_on
FROM tracks_played P
	INNER JOIN users U ON P.user_id = U.user_id
	INNER JOIN album L ON P.album_id = L.album_id AND P.artist_id = L.artist_id
	INNER JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
ORDER BY P.user_id, P.played_on;",1.0,os938,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5670,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN artist R ON T.artist_id = R.artist_id
WHERE R.artist_name = ""The Stone Roses""
ORDER BY T.time;",1.0,os938,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5671,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, R.artist_name, L.album_name
FROM track T
	INNER JOIN artist R ON T.artist_id = R.artist_id
	INNER JOIN album L ON T.album_id = L.album_id AND T.artist_id = L.artist_id;",1.0,os938,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5672,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, L.album_id, T.time
FROM track T
	INNER JOIN album L ON L.artist_id = T.artist_id
WHERE album_name = ""Second Coming"";",1.0,os938,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5673,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist R
	INNER JOIN album L ON R.artist_id = L.artist_id
WHERE R.artist_name = ""New Order"";",1.0,os938,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5680,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE ""%LOVE%"";",1.0,os938,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5681,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;


SELECT *
FROM track
WHERE artist_id IN (1, 3, 5);",1.0,os938,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5682,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name >= ""F"" AND album_name < ""S""
ORDER BY album_name;",1.0,os938,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
5683,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < ""M""
ORDER BY track_name;",1.0,os938,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5684,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,os938,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5685,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",1.0,os938,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5686,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = ""The Rolling Stones"";",1.0,os938,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5687,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;",1.0,os938,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5688,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time
LIMIT 10;",1.0,os938,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5689,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,os938,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5690,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,os938,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5691,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,os938,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5692,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,os938,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5693,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"SELECT *
FROM artist;",1.0,os938,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5694,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"The entities stored in the database include album, artist, track, tracks played, users. According to the relationship schema, artists can create on to many albums, but one album can only be created by one artist. An album can be made up of one to many tracks, but a single track can only belong to one album. A track can be played one to many times, but you can only play one track at a time. And lastly, a user can listen to one or many tracks, but a user can only have one track playing at a time. 

As I look at the screenshot I submitted in question 5, it is really interesting to see how the foreign keys are ""passed on"" from entity to entity. All relationships have one end as one to one with the other end being one to many. The end that is one to many takes the both the primary key and the foreign keys used in the entity before it. For example, moving counterclockwise in the screenshot I submitted from ""artist"" to ""tracks_played"" one can see that the number of foreign keys continue to ",1.0,os938,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
5721,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT E.first_name, 
	COUNT(distinct M.id) AS male_freq, 
	COUNT(distinct F.id) AS female_freq,
    ABS(LOG(COUNT(distinct M.id) / COUNT(distinct F.id))) AS ambig
FROM eligible_names as E
	INNER JOIN male_names AS M ON E.first_name = M.first_name
       INNER JOIN female_names AS F ON E.first_name = F.first_name
GROUP BY E.first_name
ORDER BY ambig;",2.0,rm6409,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5722,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names
SELECT *
FROM actors
WHERE gender = 'M';

SELECT *
FROM eligible_names
WHERE first_name NOT IN (
	SELECT first_name
    FROM male_names
)
ORDER BY counter DESC;",1.0,rm6409,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5723,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names
SELECT *
FROM actors
WHERE gender = 'F';

SELECT *
FROM eligible_names
WHERE first_name NOT IN (
	SELECT first_name
    FROM female_names
)
ORDER BY counter DESC;",1.0,rm6409,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5724,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(id) AS counter
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%'
GROUP BY first_name
HAVING counter>=50;",1.0,rm6409,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5725,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on
FROM track as T
LEFT OUTER JOIN tracks_played AS TP ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id 
GROUP BY artist_id, album_id, track_id;",1.0,rm6409,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5726,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name, COUNT(B.album_id) AS num_albums
FROM artist AS A
LEFT OUTER JOIN album AS B ON A.artist_id = B.artist_id
GROUP BY A.artist_id;",1.0,rm6409,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5727,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(P.played_on) as date_played, A.artist_id, A.artist_name, COUNT(DISTINCT P.user_id), SUM(T.time), COUNT(*)
FROM tracks_played as P
LEFT OUTER JOIN artist AS A ON A.artist_id = P.artist_id
LEFT OUTER JOIN track AS T ON T.track_id = P.track_id AND T.album_id = P.album_id AND T.artist_id = P.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",1.0,rm6409,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5728,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(P.track_id), SUM(T.time)
FROM users as U
LEFT OUTER JOIN tracks_played as P ON P.user_id = U.user_id
LEFT OUTER JOIN track as T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY user_id;",1.0,rm6409,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5729,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id,album_id, COUNT(track_id) AS total_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id
HAVING total_time > 60;",1.0,rm6409,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5730,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id,album_id, COUNT(track_id) AS total_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id;",1.0,rm6409,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
5731,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"Select artist_id, COUNT(album_id)
FROM album
GROUP BY artist_id;",1.0,rm6409,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5732,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STD(time) AS std_time
FROM track;",1.0,rm6409,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5733,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,rm6409,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5734,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,rm6409,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5740,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT A.first_name, A.last_name
FROM users A
	LEFT OUTER JOIN tracks_played B ON A.user_id = B.user_id
WHERE B.played_on IS NULL;",1.0,rm6409,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5741,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT A.user_ID, B.first_name, B.last_name, D.album_name, C.track_name, A.played_on
FROM tracks_played A
	INNER JOIN users B on A.user_id = B.user_id
    INNER JOIN track C on A.album_id = C.album_id AND A.artist_id = C.artist_id AND A.track_id = C.track_id
    INNER JOIN album D on A.artist_id = D.artist_id AND A.album_id = D.album_id
    ORDER BY A.played_on;",1.0,rm6409,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5742,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT A.track_id, A.track_name, A.artist_id, A.album_id, A.time
FROM track A
	INNER JOIN artist B ON A.artist_id = B.artist_id
 WHERE B.artist_name = 'The Stone Roses'
 ORDER BY A.time ASC;
",1.0,rm6409,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5743,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT A.track_name, B.artist_name, C.album_name
FROM track A
	INNER JOIN artist B ON A.artist_id = B.artist_ID
    INNER JOIN album C ON C.album_ID = A.album_ID AND C.artist_id = A.artist_id;",1.0,rm6409,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5744,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT A.track_id, A.track_name, A.artist_id, A.album_id, A.time
FROM track A
	INNER JOIN album B ON A.artist_id = B.artist_id
WHERE B.album_name = 'Second Coming';",1.0,rm6409,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5745,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM album A
	INNER JOIN artist B ON A.artist_id = B.artist_id
WHERE B.artist_name = 'New Order';",1.0,rm6409,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5746,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT track_name
FROM track
WHERE track_name LIKE '%love%';",1.0,rm6409,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5747,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT track_name
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT track_name
FROM track
WHERE artist_id IN (1,3,5);",1.0,rm6409,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5748,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name
FROM album
WHERE album_name > 'E' AND album_name < 'S';",0.7,rm6409,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
5749,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name
FROM track
WHERE track_name < 'M';",1.0,rm6409,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5750,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT track_name
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,rm6409,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5751,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",1.0,rm6409,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5752,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,rm6409,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5753,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;",1.0,rm6409,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5754,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time
LIMIT 10;",1.0,rm6409,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5755,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name as album_title
FROM album;",1.0,rm6409,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5756,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,rm6409,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5757,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,rm6409,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5758,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,rm6409,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5759,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,rm6409,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5778,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select first_male as joint_names, cnt_firstmale + cnt_firstfemale as total_freq, abs(log(cnt_firstmale/cnt_firstfemale))
from male_only as M 
join female_only as F on M.first_male = F.first_female
order by abs(log(cnt_firstmale/cnt_firstfemale)) asc;",0.7,aes10093,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5779,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"use imdb;
create temporary table female_only as
select first_name as first_female, count(first_name) as cnt_firstfemale
from actors
where first_name NOT LIKE'%)' and first_name NOT LIKE '%.' and gender = ""F""
group by first_name, gender
having count(first_name) > 50
order by count(first_name) desc; ",0.8,aes10093,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5780,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"use imdb;
create temporary table male_only as
select first_name as first_male, count(first_name) as cnt_firstmale
from actors
where first_name NOT LIKE'%)' and first_name NOT LIKE '%.' and gender = ""M""
group by first_name, gender
having count(first_name) > 50
order by count(first_name) desc; ",0.8,aes10093,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5781,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"use imdb;
create temporary table eligible_names as
select first_name, gender
from actors
where first_name NOT LIKE'%)' and first_name NOT LIKE '%.'
group by first_name, gender
having count(first_name) > 50;",1.0,aes10093,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5782,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"use music; 
select track_name, min(played_on) as min_played_on, max(played_on) as max_played_on 
from tracks_played as TP 
inner join track as TR on TP.track_id = TR.track_id
group by track_name;",0.9,aes10093,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
5783,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"use music; 
select artist_name, count(album_id) as num_albums
from album as AL 
inner join artist as AR on AL.artist_id = AR.artist_id 
group by artist_name; ",1.0,aes10093,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5784,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"use music; 
select played_on as date_played, artist_name, count(distinct(user_id)), count(user_id)
from tracks_played as TR
inner join artist as AR on TP.artist_ud = AR.artist_id
group by played_on; 
",0.8,aes10093,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
5785,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"use music; 
select user_id, count(distinct(track_id)) as num_tracks, count(track_id) as total_time 
from tracks_played
group by user_id; 
",0.8,aes10093,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id"
5786,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"use music; 
select album_id, sum(time) as length 
from track
where sum(time) > 60 
group by album_id; 
",0.8,aes10093,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
5787,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"use music; 
select album_id, count(track_id) as num_tracks, sum(time) as total_length
from track
group by album_id;
",0.8,aes10093,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
5788,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"use music; 
select artist_id, count(album_id) as cnt_albums 
from album
group by artist_id; 
",1.0,aes10093,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5789,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"use music;
select avg(time) AS avg_time, stddev(time) as std_time 
from track; ",1.0,aes10093,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5790,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"use music;
select count(*)
from track;",1.0,aes10093,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5791,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;
select count(*)
from artist; 
",1.0,aes10093,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5792,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"use music; 
select first_name, last_name 
from users as U 
left outer join tracks_played as T on U.user_id = T.user_id 
where played_on is null; ",1.0,aes10093,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5793,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select user_id, first_name, last_name, album_name, track_name, played_on
from tracks_played as TR 
inner join users as U on TR.user_id = U.user_id 
inner join album as AL on TR.album_id = AL.album_id 
inner join track as T on T.track_id = TR.track_id; 
",0.7,aes10093,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on","SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,"The feedback from the TA was SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on"
5794,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"use music; 
select track_id, track_name, artist_id, album_id, time 
from artist as AR 
inner join track as T on AR.artist_id = T.artist_id 
where artist_name = ""The Stone Roses"" 
order by time; ",1.0,aes10093,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5795,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"use music; 
select track_name, artist_name, album_name 
from artist as AR 
inner join album as AL on AR.artist_id = AL.artist_id
inner join track as T on AL.album_id = T.album_id; 

",0.7,aes10093,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
5796,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"use music; 
select track_id, track_name, artist_id, album_id, time 
from album as AL 
inner join track as T on AL.album_id = T.album_id 
where album_name = ""Second Coming""; 
",0.7,aes10093,"


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






"
5797,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music; 
select*
from artist as AR 
inner join album as AL on AR.artist_id = AL.artist_id 
where artist_name = ""New Order"";

",1.0,aes10093,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5798,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select* 
from track
where track_name in(""Love"");",1.0,aes10093,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5799,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"use music; 
select* 
from track; 
where artist_id = ""1"" or artist_id = ""3"" or artist_id = ""5"";

use music; 
select* 
from track; 
where artist_id in(""1"",""3"",""5"");
",1.0,aes10093,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5800,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"use music; 
select* 
from album
where album_name > ""E"" AND album_name < ""S"";",0.7,aes10093,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
5801,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"use music; 
select* 
from track
where track_name < ""M"";",1.0,aes10093,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5802,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"use music; 
select* 
from track
where artist_id =4 AND album_id = 2; ",0.9,aes10093,wrong artist_id,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,The feedback from the TA was wrong artist_id
5803,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"use music; 
select*
from album
where artist_id = 4; ",1.0,aes10093,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5804,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"use music; 
select* 
from artist
where artist_name = ""The Rolling Stones"";",1.0,aes10093,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5805,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music; 
select*
from artist
where artist_id = 5; 
",1.0,aes10093,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5806,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"use music; 
select* 
from track
order by time
limit 10;",1.0,aes10093,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5807,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title
from album; ",1.0,aes10093,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5808,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"Kylie Minogue
Miles Davis
New Order
Nick Cave & The Bad Seeds
The Rolling Stones
The Stone Roses

-----
select*
from artist
order by artist_name ASC;",0.5,aes10093,Did not ask to show artist_id - Looking at your query.,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,The feedback from the TA was Did not ask to show artist_id - Looking at your query.
5809,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"use music; 
select*
from track; 
---------------
Elegia
In A Lonely Place
Procession
Your Silent Face
Sunrise
Let's Go
Broken Promise
Dreams Never End
Cries And Whispers
All Day Long
Sooner Than You Think
Leave Me Alone
Lonesome Tonight
Every Little Counts
Run Wild
In A Lonely Place
Procession
Mesh
Hurt
The Beach
Confusion
Lonesome Tonight
Murder
Thieves Like Us
Kiss Of Death
Shame Of The Nation
1963
Fine Time
Temptation
True Faith
The Perfect Kiss
Ceremony
Regret
Crystal
Bizarre Love Triangle
Confusion
Round And Round
Blue Monday
Brutal
Slow Jam
Everyone Everywhere
Ceremony [Studio 54, Barcelona 7/7/84]
Procession [Polytechnic of Central London, London 6/12/85]
Everything's Gone Green [Tolworth Recreation Centre, London 12/3/85]
In A Lonely Place [Glastonbury Festival 20/6/81]
Age Of Consent [Spectrum Arena, Warrington 1/3/86]
Elegia [Glastonbury Festival 19/6/87]
The Perfect Kiss [Glastonbury Festival 19/6/87]
Fine Time [Popular Cre",1.0,aes10093,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5810,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"use music; 
select*
from album; 
----------------------------------
Retro - John McCready FAN
Substance (Disc 2) 
Retro - Miranda Sawyer POP
Retro - New Order / Bobby Gillespie LIVE
Power, Corruption & Lies
Substance 1987 (Disc 1) 
Brotherhood
Let Love In 
Live Around The World
In A Silent Way
Second Coming
Light Years


",1.0,aes10093,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5811,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music; 
select*
from artist;
----------------------
New Order
Nick Cave & The Bad Seeds
Miles Davis
The Rolling Stones
The Stone Roses
Kylie Minogue 


",1.0,aes10093,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
5839,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT*
FROM tracks_played P LEFT OUTER JOIN track T ON P.artist_id=T.artist_id AND P.album_id=T.album_id AND P.track_id=T.track_id;

'1','1','1','0','2022-12-18 03:58:53','1','1','0','Elegia','4.93'
'5','1','1','0','2022-12-24 23:11:09','1','1','0','Elegia','4.93'
'10','1','1','0','2022-12-06 15:10:20','1','1','0','Elegia','4.93'
'5','1','1','1','2022-12-20 16:07:09','1','1','1','In A Lonely Place','6.26'
'5','1','1','1','2022-12-24 15:18:48','1','1','1','In A Lonely Place','6.26'
'8','1','1','1','2022-12-09 15:37:32','1','1','1','In A Lonely Place','6.26'
'2','1','1','2','2022-12-05 20:21:51','1','1','2','Procession','4.47'
'4','1','1','2','2022-12-16 01:09:18','1','1','2','Procession','4.47'
'4','1','1','2','2022-12-27 08:44:34','1','1','2','Procession','4.47'
'7','1','1','2','2022-12-02 21:17:23','1','1','2','Procession','4.47'
'7','1','1','2','2022-12-02 21:59:21','1','1','2','Procession','4.47'
'10','1','1','2','2022-12-06 15:17:10','1','1','2','Procession','4.47'
",1.0,apw5103,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5840,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name, B.album_id
FROM artist as A INNER JOIN album AS B ON A.artist_id=B.artist_id
ORDER BY artist_id;

'1','New Order','1'
'1','New Order','2'
'1','New Order','3'
'1','New Order','4'
'1','New Order','5'
'1','New Order','6'
'1','New Order','7'
'2','Nick Cave & The Bad Seeds','1'
'3','Miles Davis','1'
'3','Miles Davis','2'
'4','The Rolling Stones','1'
'5','The Stone Roses','1'
'6','Kylie Minogue','1'
",0.9,apw5103,"SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name","#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,"The feedback from the TA was SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name"
5841,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT played_on, P.artist_id, user_id, time AS total_time
FROM tracks_played AS P 
INNER JOIN track AS T ON P.artist_id=T.artist_id AND P.album_id=T.album_id AND P.track_id=T.track_id
ORDER BY user_id;

'2022-12-18 03:58:53','1','1','4.93'
'2022-12-18 21:48:34','1','1','3.20'
'2022-12-24 12:55:12','1','1','3.42'
'2022-12-28 07:31:56','1','1','3.42'
'2022-12-18 07:32:19','1','1','5.18'
'2022-12-24 12:57:40','1','1','5.18'
'2022-12-28 11:10:09','1','1','4.47'
'2022-12-01 21:04:56','1','1','4.46'
'2022-12-28 12:36:44','1','1','4.46'
'2022-12-18 15:11:15','1','1','3.44'
'2022-12-23 13:14:50','1','1','3.44'
'2022-12-23 10:51:28','1','1','6.98'
'2022-12-24 20:29:24','1','1','6.98'
'2022-12-23 07:38:30','1','1','7.64'
'2022-12-24 20:27:52','1','1','5.88'
'2022-12-18 23:02:29','1','1','4.83'
'2022-12-18 17:37:20','1','1','4.41'
'2022-12-24 03:35:07','1','1','4.14'
'2022-12-18 15:34:39','1','1','4.35'
'2022-12-01 07:48:55','1','1','4.88'
'2022-12-28 07:32:05','1','1','",0.8,apw5103,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
5842,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT user_id, played_on AS tracks_played, time AS total_time
FROM tracks_played AS P INNER JOIN track AS T ON P.artist_id=T.artist_id AND P.album_id=T.album_id AND P.track_id=T.track_id
ORDER BY user_id;

'1','2022-12-18 03:58:53','4.93'
'1','2022-12-18 21:48:34','3.20'
'1','2022-12-24 12:55:12','3.42'
'1','2022-12-28 07:31:56','3.42'
'1','2022-12-18 07:32:19','5.18'
'1','2022-12-24 12:57:40','5.18'
'1','2022-12-28 11:10:09','4.47'
'1','2022-12-01 21:04:56','4.46'
'1','2022-12-28 12:36:44','4.46'
'1','2022-12-18 15:11:15','3.44'
'1','2022-12-23 13:14:50','3.44'
'1','2022-12-23 10:51:28','6.98'
'1','2022-12-24 20:29:24','6.98'
'1','2022-12-23 07:38:30','7.64'
'1','2022-12-24 20:27:52','5.88'
'1','2022-12-18 23:02:29','4.83'
'1','2022-12-18 17:37:20','4.41'
'1','2022-12-24 03:35:07','4.14'
'1','2022-12-18 15:34:39','4.35'
'1','2022-12-01 07:48:55','4.88'
'1','2022-12-28 07:32:05','4.82'
'1','2022-12-28 21:06:44','4.82'
'1','2022-12-24 12:15:55','3.80'
'1','20",0.8,apw5103,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
5843,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, COUNT(track_id), SUM(time)
FROM track
GROUP BY album_id;

'1','80','379.63'
'2','14','106.15'
'3','14','78.22'
'4','15','77.36'
'5','8','42.62'
'6','12','74.27'
'7','10','43.78'
",0.8,apw5103,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
5844,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_id), SUM(time)
FROM track
GROUP BY album_id;

'1','80','379.63'
'2','14','106.15'
'3','14','78.22'
'4','15','77.36'
'5','8','42.62'
'6','12','74.27'
'7','10','43.78'
",0.8,apw5103,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
5845,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_name)
FROM album
GROUP BY artist_id;

'1','7'
'2','1'
'3','2'
'4','1'
'5','1'
'6','1'
",1.0,apw5103,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5846,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time), STDDEV(time)
FROM track;

'5.242026','2.163728432900637'
",1.0,apw5103,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5847,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;

'153'
",1.0,apw5103,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5848,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;

'6'",1.0,apw5103,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5849,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U LEFT OUTER JOIN tracks_played P ON P.user_id=U.user_id
WHERE played_on IS NULL;

'Melissa','Mitchell'
'Seth','Fuente'
",1.0,apw5103,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5850,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, K.track_name, P.played_on
FROM tracks_played P INNER JOIN users U ON P.user_id=U.user_id
INNER JOIN track K ON P.track_id=K.track_id AND P.artist_id=K.artist_id AND P.album_id=K.album_id
INNER JOIN album A ON K.artist_id=A.artist_id AND K.album_id=A.album_id;

'1','Lynn','Schulman','Retro - John McCready FAN','Elegia','2022-12-18 03:58:53'
'5','Michael','Snead','Retro - John McCready FAN','Elegia','2022-12-24 23:11:09'
'10','Kevin','Wieland','Retro - John McCready FAN','Elegia','2022-12-06 15:10:20'
'5','Michael','Snead','Retro - John McCready FAN','In A Lonely Place','2022-12-20 16:07:09'
'5','Michael','Snead','Retro - John McCready FAN','In A Lonely Place','2022-12-24 15:18:48'
'8','Joshua','Partlow','Retro - John McCready FAN','In A Lonely Place','2022-12-09 15:37:32'
'2','Samuel','Rivera','Retro - John McCready FAN','Procession','2022-12-05 20:21:51'
'4','Bernard','Cochrane','Retro - John McCready FAN','Processi",1.0,apw5103,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5851,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, A.artist_id, A.album_id, T.time
FROM album A INNER JOIN track T ON A.album_id=T.album_id AND A.artist_id=T.artist_id
INNER JOIN artist Y ON Y.artist_id=A.artist_id
WHERE artist_name=""The Stone Roses""
ORDER BY time ASC;

'4','Your Star Will Shine','5','1','2.99'
'5','Straight To The Man','5','1','3.26'
'7','Tightrope','5','1','4.45'
'2','Ten Storey Love Song','5','1','4.50'
'6','Begging You','5','1','4.94'
'10','How Do You Sleep','5','1','4.99'
'1','Driving South','5','1','5.17'
'8','Good Times','5','1','5.67'
'11','Love Spreads','5','1','5.79'
'12','Untitled','5','1','6.43'
'3','Daybreak','5','1','6.56'
'9','Tears','5','1','6.84'
'0','Breaking Into Heaven','5','1','11.37'

",1.0,apw5103,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5852,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A.album_name, Y.artist_name
FROM album A INNER JOIN track T ON A.album_id=T.album_id AND A.artist_id=T.artist_id
INNER JOIN artist Y ON Y.artist_id=A.artist_id;

'Elegia','Retro - John McCready FAN','New Order'
'In A Lonely Place','Retro - John McCready FAN','New Order'
'Procession','Retro - John McCready FAN','New Order'
'Your Silent Face','Retro - John McCready FAN','New Order'
'Sunrise','Retro - John McCready FAN','New Order'
'Let\'s Go','Retro - John McCready FAN','New Order'
'Broken Promise','Retro - John McCready FAN','New Order'
'Dreams Never End','Retro - John McCready FAN','New Order'
'Cries And Whispers','Retro - John McCready FAN','New Order'
'All Day Long','Retro - John McCready FAN','New Order'
'Sooner Than You Think','Retro - John McCready FAN','New Order'
'Leave Me Alone','Retro - John McCready FAN','New Order'
'Lonesome Tonight','Retro - John McCready FAN','New Order'
'Every Little Counts','Retro - John McCready FAN','New Order'
'R",1.0,apw5103,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5853,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, Y.artist_id, A.album_id, T.time
FROM album A INNER JOIN track T ON A.album_id=T.album_id AND A.artist_id=T.artist_id
INNER JOIN artist Y ON Y.artist_id=A.album_id
WHERE album_name=""Second Coming"";

'0','Breaking Into Heaven','1','1','11.37'
'1','Driving South','1','1','5.17'
'2','Ten Storey Love Song','1','1','4.50'
'3','Daybreak','1','1','6.56'
'4','Your Star Will Shine','1','1','2.99'
'5','Straight To The Man','1','1','3.26'
'6','Begging You','1','1','4.94'
'7','Tightrope','1','1','4.45'
'8','Good Times','1','1','5.67'
'9','Tears','1','1','6.84'
'10','How Do You Sleep','1','1','4.99'
'11','Love Spreads','1','1','5.79'
'12','Untitled','1','1','6.43'

",1.0,apw5103,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5854,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT*
FROM artist A INNER JOIN album B ON A.artist_id=B.artist_id
WHERE artist_name=""New Order"";


'1','New Order','1','1','Retro - John McCready FAN'
'1','New Order','1','2','Substance (Disc 2)'
'1','New Order','1','3','Retro - Miranda Sawyer POP'
'1','New Order','1','4','Retro - New Order / Bobby Gillespie LIVE'
'1','New Order','1','5','Power, Corruption & Lies'
'1','New Order','1','6','Substance 1987 (Disc 1)'
'1','New Order','1','7','Brotherhood'
",1.0,apw5103,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5932,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"#**identifying female names**

CREATE TEMPORARY TABLE female_names_2 AS
SELECT first_name, COUNT(*) AS number_female
FROM actors
WHERE gender = ""F""
GROUP BY first_name;
    
SELECT*
FROM female_names_2
ORDER BY first_name;

#**identifying male names**

CREATE TEMPORARY TABLE male_names_2 AS
SELECT first_name, COUNT(*) AS number_male
FROM actors
WHERE gender = ""M""
GROUP BY first_name;

SELECT*
FROM male_names_2
ORDER BY first_name;

#**finding names shared by both male and female actors ordered by ambiguity**

SELECT 
	E.first_name
    , number_male
    , number_female
    , ABS(log(number_male / number_female)) AS ambiguity
FROM eligible_names AS E
	INNER JOIN male_names_2 AS M ON E.first_name = M.first_name
       INNER JOIN female_names_2 AS F ON F.first_name = E.first_name
GROUP BY E.first_name, number_male, number_female
ORDER BY ambiguity;


#**ALTERNATIVE QUERY YIELDS SAME RESULT** (note the attribute ""number_appears"" equals how many times th",2.0,cg4205,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
5933,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT*
FROM eligible_names
WHERE first_name NOT IN 
      (SELECT DISTINCT first_name
      FROM actors
      WHERE  gender = ""M""
	)
    ORDER BY number_appears DESC;
",1.0,cg4205,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
5934,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT*
FROM eligible_names
WHERE first_name NOT IN 
      (SELECT DISTINCT first_name
      FROM actors
      WHERE  gender = ""F""
	)
    ORDER BY number_appears DESC;",1.0,cg4205,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
5935,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"#**(note the attribute ""number_appears"" equals how many times the name shows up in the actors table for both genders combined)**

SELECT first_name, COUNT(first_name) AS number_appears
FROM actors
WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%""
GROUP BY first_name
HAVING COUNT(first_name) >= 50
ORDER BY number_appears;

CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name, COUNT(first_name) AS number_appears
	FROM actors
	WHERE first_name NOT LIKE ""%.%"" AND first_name NOT LIKE ""%(%""
	GROUP BY first_name
	HAVING COUNT(first_name) >= 50
	ORDER BY number_appears;",1.0,cg4205,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
5942,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT 
	T.artist_id
    , T.album_id
    , T.track_id, track_name
    , MIN(played_on) AS min_played_on
    , MAX(played_on) AS max_played_on
FROM track AS T
	LEFT JOIN tracks_played AS P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id;",1.0,cg4205,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
5943,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, artist_name, COUNT(album_id) AS num_albums
FROM artist AS A
	INNER JOIN album AS B ON A.artist_id = B.artist_id
GROUP BY A.artist_id;",1.0,cg4205,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
5944,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT 
	DATE(played_on) AS date_played
    ,  T.artist_id, artist_name
    , COUNT(DISTINCT user_id) AS users
    , SUM(time) AS total_time
    , COUNT(T.track_id) AS total_tracks
FROM tracks_played AS P
	INNER JOIN artist AS A ON P.artist_id=A.artist_id
       INNER JOIN track AS T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
GROUP BY DATE(played_on), T.artist_id
ORDER BY DATE(played_on);",1.0,cg4205,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
5945,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(time) AS total_time
FROM users AS U
	LEFT JOIN tracks_played AS P ON U.user_id = P.user_id
       LEFT JOIN track AS T ON P.track_id = T.track_id AND P.artist_id = T.artist_id AND P.album_id = T.album_id
GROUP BY U.user_id;


# user_id	tracks_played	total_time
1	                      167	                   774.14
2	                    	151	                   728.07
3	                    	178		            847.84
4	                    	128		            610.25
5	                    	134	                   644.97
6	                    	0	
7	                    	130	                   605.82
8	                    	135		            668.20
9	                    	0	
10		               153		     685.58
",1.0,cg4205,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
5946,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, artist_id, SUM(time) AS total_time
FROM track
GROUP BY album_id, artist_id
HAVING SUM(time) > 60
ORDER BY total_time;


# album_id	artist_id	total_time
1	                     4	         67.26
1	                     1		  70.61
1	                     3		  70.80
2	                     1		  72.81
1	                     5		  72.96
6	                     1		  74.27
4	                     1		  77.36
3	                     1		  78.22
",1.0,cg4205,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
5947,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, artist_id, COUNT(*) AS total_tracks, SUM(time) AS total_time
FROM track
GROUP BY album_id, artist_id;

**Showing the output for reference:**

# album_id	artist_id	total_tracks	total_time
1	                    1	15          	70.61
2	                    1	12	         	72.81
3	                    1	14	         	78.22
4	                    1	15	         	77.36
5	                    1	8	         	42.62
6	                    1	12	         	74.27
7	                    1	10	         	43.78
1	                    2	10	         	48.36
1	                    3	11	         	70.80
2	                    3	2	         	33.34
1	                    4	18	         	67.26
1	                    5	13	         	72.96
1	                    6	13	         	49.64
",1.0,cg4205,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
5948,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,cg4205,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
5949,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,cg4205,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
5950,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;

also

SELECT COUNT(track_id)
FROM track;",1.0,cg4205,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
5951,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(DISTINCT artist_id) AS number_artists
FROM artist;

also


SELECT COUNT(artist_id) AS number_artists
FROM artist;",1.0,cg4205,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
5952,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users AS U
	LEFT JOIN tracks_played AS P ON U.user_id = P.user_id
WHERE P.track_id IS NULL;




I could also write the code below to return the same result. I went with WHERE P.track_ID IS NULL because i wanted to specify that the track should be blank (null) since no track was listened to.

SELECT U.first_name, U.last_name
FROM users AS U
	LEFT JOIN tracks_played AS P ON U.user_id = P.user_id
WHERE P.user_id IS NULL;
",1.0,cg4205,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
5953,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, B.album_name, T.track_name, P.played_on
FROM tracks_played AS P
	INNER JOIN users AS U ON P.user_id = U.user_id
       INNER JOIN album AS B ON P.album_id = B.album_id AND P.artist_id = B.artist_id
       INNER JOIN track AS T ON P.album_id = T.album_id AND P.artist_id = T.artist_id AND P.track_id = T.track_id
ORDER BY user_id, played_on;",1.0,cg4205,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
5954,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track AS T
	INNER JOIN artist AS A ON T.artist_id = A.artist_id
WHERE T.artist_id = 5
ORDER BY T.time;",1.0,cg4205,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
5955,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, C.artist_name, B.album_name
FROM track AS T
	INNER JOIN album AS B ON T.album_id = B.album_id AND T.artist_id = B.artist_id
       INNER JOIN artist AS C ON T.artist_id = C.artist_id;",1.0,cg4205,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
5956,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id AS track_id, T.track_name AS track_name, T.artist_id, T.album_id, T.time
FROM track AS T
	INNER JOIN album AS B ON T.artist_id = B.artist_id AND T.album_id = B.album_id
WHERE T.artist_id = 5
ORDER BY track_id;",1.0,cg4205,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
5957,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT* 
FROM artist AS A
	INNER JOIN album AS B ON A.artist_id = B.artist_id
WHERE A.artist_name = ""New Order"";",1.0,cg4205,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
5964,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"** Did not use SELECT DISTINCT here because it appears Bizarre Love Triangle appeared on different albums, so I am considering it a different track **

SELECT artist_id, album_id, track_name
FROM track
WHERE track_name LIKE ""%love%"";

1	3	Bizarre Love Triangle
1	6	Bizarre Love Triangle
1	7	Bizarre Love Triangle
2	1	Do You Love Me?
2	1	Loverman
2	1	I Let Love In
2	1	Do You Love Me? (Part Two)
5	1	Ten Storey Love Song
5	1	Love Spreads
6	1	Loveboat
6	1	Under The Influence Of Love
",1.0,cg4205,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
5965,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT artist_id, track_name
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT artist_id, track_name
FROM track
WHERE artist_id IN (1,3,5);


1	Elegia
1	In A Lonely Place
1	Procession
1	Your Silent Face
1	Sunrise
1	Let's Go
1	Broken Promise
1	Dreams Never End
1	Cries And Whispers
1	All Day Long
1	Sooner Than You Think
1	Leave Me Alone
1	Lonesome Tonight
1	Every Little Counts
1	Run Wild
1	In A Lonely Place
1	Procession
1	Mesh
1	Hurt
1	The Beach
1	Confusion
1	Lonesome Tonight
1	Murder
1	Thieves Like Us
1	Kiss Of Death
1	Shame Of The Nation
1	1963
1	Fine Time
1	Temptation
1	True Faith
1	The Perfect Kiss
1	Ceremony
1	Regret
1	Crystal
1	Bizarre Love Triangle
1	Confusion
1	Round And Round
1	Blue Monday
1	Brutal
1	Slow Jam
1	Everyone Everywhere
1	Ceremony [Studio 54, Barcelona 7/7/84]
1	Procession [Polytechnic of Central London, London 6/12/85]
1	Everything's Gone Green [Tolworth Recreation Centre, London 12/3/85]
1	",1.0,cg4205,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
5966,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name
FROM album
WHERE album_name BETWEEN ""F"" AND ""S""
ORDER BY album_name;

In A Silent Way
Let Love In
Light Years
Live Around The World
Power, Corruption & Lies
Retro - John McCready FAN
Retro - Miranda Sawyer POP
Retro - New Order / Bobby Gillespie LIVE",1.0,cg4205,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
5967,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT*
FROM track
WHERE track_name < ""M""
ORDER BY track_name DESC;

4	1	8	Loving Cup	4.43
2	1	2	Loverman	6.37
6	1	4	Loveboat	4.18
5	1	11	Love Spreads	5.79
1	1	12	Lonesome Tonight	5.19
1	2	6	Lonesome Tonight	5.20
1	1	5	Let's Go	3.90
4	1	13	Let It Loose	5.31
1	5	7	Leave Me Alone	4.69
1	1	11	Leave Me Alone	4.67
2	1	8	Lay Me Low	5.15
6	1	5	Koocachoo	4.00
1	2	9	Kiss Of Death	7.05
6	1	12	Kids	4.34
2	1	3	Jangling Jack	2.78
3	1	1	Intruder	4.87
1	4	11	Intermission By Alan Wise [Olympia, Paris 12/11/01]	1.34
3	2	1	In A Silent Way/It's About That Time	16.67
3	1	0	In A Silent Way	1.81
1	4	3	In A Lonely Place [Glastonbury Festival 20/6/81]	5.55
1	2	0	In A Lonely Place	6.30
1	1	1	In A Lonely Place	6.26
6	1	11	I'm So High	3.55
2	1	5	I Let Love In	4.25
4	1	12	I Just Want To See His Face	2.90
1	2	3	Hurt	6.98
3	1	3	Human Nature	12.80
5	1	10	How Do You Sleep	4.99
4	1	9	Happy	3.08
3	1	10	Hannibal	7.37
5	1	8	Good Times	5.67
3	1	8	Full Nelson	2.81
1	4	7	Fine Time [Popul",1.0,cg4205,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
5968,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT*
FROM track
WHERE artist_id = 3 AND album_id = 2;

3	2	0	Shhh/Peaceful	16.67
3	2	1	In A Silent Way/It's About That Time	16.67",1.0,cg4205,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
5969,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT*
FROM album
WHERE artist_id = 4;


4	1	Exile On Main Street
		",1.0,cg4205,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
5970,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_name = ""The Rolling Stones"";

4	The Rolling Stones",1.0,cg4205,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
5971,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_id = 5;

5	The Stone Roses
	",1.0,cg4205,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
5972,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT*
FROM track
ORDER BY time ASC
LIMIT 10;",1.0,cg4205,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
5973,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,cg4205,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
5974,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT DISTINCT artist_name
FROM artist
ORDER BY artist_name;",1.0,cg4205,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
5975,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT*
FROM track;",1.0,cg4205,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
5976,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT*
FROM album;",1.0,cg4205,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
5977,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT*
FROM artist;",1.0,cg4205,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6006,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
  first_name,
  SUM(CASE WHEN gender = 'M' THEN quantity ELSE 0 END) AS male_freq,
  SUM(CASE WHEN gender = 'F' THEN quantity ELSE 0 END) AS female_freq
FROM eligible_names
GROUP BY first_name
HAVING COUNT(DISTINCT gender) > 1
ORDER BY ABS(LOG(male_freq/female_freq));",1.4,ef2462,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6007,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, quantity
FROM eligible_names
WHERE gender = 'F'
GROUP BY first_name, quantity
ORDER BY quantity DESC;",0.8,ef2462,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6008,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, quantity
FROM eligible_names
WHERE gender = 'M'
GROUP BY first_name, quantity
ORDER BY quantity DESC;",0.8,ef2462,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6009,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, count(last_name) as quantity, gender
FROM actors
WHERE first_name NOT REGEXP '[\.\(\)]'
GROUP BY first_name, gender
HAVING COUNT(last_name) >= 50;",0.9,ef2462,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6010,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS first_played, MAX(TP.played_on) AS last_played
FROM track T
     RIGHT JOIN tracks_played TP ON T.track_id = TP.track_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,ef2462,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6011,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name, COUNT(*) AS num_albums
FROM artist A
INNER JOIN album AL ON A.artist_id = AL.artist_id
GROUP BY A.artist_name, A.artist_id;",1.0,ef2462,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6012,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played, A.artist_id, A.artist_name, COUNT(distinct TP.user_id) AS users, SUM(T.time) AS total_time, COUNT(TP.track_id) AS total_tracks
FROM tracks_played TP
     INNER JOIN track T ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
     INNER JOIN artist A ON TP.artist_id = A.artist_id
GROUP BY date(TP.played_on), A.artist_id, A.artist_name;",1.0,ef2462,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6013,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM tracks_played TP
     RIGHT JOIN users U ON U.user_id = TP.user_id
     LEFT JOIN track T ON T.track_id = TP.track_id  AND T.album_id = TP.album_id  AND T.artist_id = TP.artist_id
GROUP BY U.user_id
ORDER BY U.user_id;",1.0,ef2462,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6014,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT AL.album_id, SUM(T.time) as length
FROM album AL
    INNER JOIN track T ON T.album_id = AL.album_id AND T.artist_id = AL.artist_id
GROUP BY AL.album_id, AL.artist_id
HAVING length>60
ORDER BY length DESC;",1.0,ef2462,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6015,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_id) AS num_tracks, SUM(time) AS length
FROM track
GROUP BY album_id;",0.8,ef2462,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
6016,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,ef2462,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6017,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time
FROM track;",1.0,ef2462,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6018,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,ef2462,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6019,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,ef2462,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6020,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT  US.first_name, US.last_name
FROM users US
     LEFT OUTER JOIN tracks_played TP ON TP.user_id = US.user_id
WHERE played_on IS NULL;",1.0,ef2462,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6021,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT  US.user_id, US.first_name, US.last_name, AL.album_name, TR.track_name, TP.played_on
FROM tracks_played TP
     INNER JOIN track TR ON TP.track_id = TR.track_id
     INNER JOIN album AL ON TR.album_id = AL.album_id
     INNER JOIN users US ON TP.user_id = US.user_id
LIMIT 5000;",0.7,ef2462,"


Answer Key







SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on






","SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on






"
6022,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT  TR.track_id, TR.track_name, TR.artist_id, TR.album_id, TR.time
FROM track TR
     INNER JOIN artist AR ON AR.artist_id = TR.artist_id
WHERE AR.artist_name = 'The Stone Roses'
ORDER BY time;",1.0,ef2462,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6023,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT  TR.track_name, AR.artist_name, AL.album_name
FROM track TR
     INNER JOIN album AL ON AL.artist_id = TR.artist_id
     INNER JOIN artist AR ON AR.artist_id = AL.artist_id;",0.7,ef2462,"


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






"
6024,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT  TR.track_id, TR.track_name, TR.artist_id, TR.album_id, TR.time
FROM track TR
     INNER JOIN album AL ON AL.artist_id = TR.artist_id
WHERE al.album_name = 'Second Coming';",0.7,ef2462,"


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






"
6025,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist AR
     INNER JOIN album AL ON AR.artist_id = AL.artist_id
WHERE AR.artist_name = 'New Order';",1.0,ef2462,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6027,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT*
FROM track
WHERE artist_id=1 OR artist_id=3 OR artist_id=5;


SELECT*
FROM track
WHERE artist_id IN (1,3,5);",1.0,ef2462,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6028,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT*
FROM album
WHERE album_name>='F' AND album_name<'S'
ORDER BY album_name;",1.0,ef2462,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
6029,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT*
FROM track
WHERE track_name<'M'
ORDER BY track_name;",1.0,ef2462,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6030,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT*
FROM track
WHERE album_id=2;
",0.8,ef2462,"


Answer Key








SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=3&nbsp;and&nbsp;album_id&nbsp;=2&nbsp;







","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,"The feedback from the TA was 


Answer Key








SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=3&nbsp;and&nbsp;album_id&nbsp;=2&nbsp;







"
6031,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT*
FROM album
WHERE artist_id=4;",1.0,ef2462,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6032,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_name='The Rolling Stones';",1.0,ef2462,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6033,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_id=5;",1.0,ef2462,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6034,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT*
FROM track
ORDER BY time
LIMIT 10;",1.0,ef2462,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6035,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,ef2462,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6036,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,ef2462,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6037,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT*
FROM track;",1.0,ef2462,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6038,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT*
FROM album;",1.0,ef2462,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6039,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT*
FROM artist;",1.0,ef2462,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6058,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT CustomerID, CompanyName, Total_Spent, Total_Discount,Total_After_Discount,
  CASE 
    WHEN Total_After_Discount >=0 AND Total_After_Discount<1000 THEN 'Low'
    WHEN Total_After_Discount >1000 AND Total_After_Discount< 5000 THEN 'Medium'
    WHEN Total_After_Discount >5000 THEN 'High'
  END AS `Group`
FROM (
  SELECT 
    c.CustomerID, c.CompanyName, 
    SUM(od.Quantity * od.UnitPrice) AS Total_Spent,
    SUM(od.Quantity * od.UnitPrice * (1 - od.Discount)) AS Total_Discount,
    SUM(od.Quantity * od.UnitPrice * (1 - od.Discount)) AS Total_After_Discount
  FROM Customers c
  LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
  LEFT JOIN OrderDetails od ON o.OrderID = od.OrderID
  WHERE YEAR(o.OrderDate) = 2016
  GROUP BY c.CustomerID, c.CompanyName
) AS CustomerSpending
ORDER BY `Group` DESC",7.0,qz2313,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
6059,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT c.CustomerID, c.CompanyName,
       SUM(od.Quantity * od.UnitPrice) AS TotalPrice,
       SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscount
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
LEFT JOIN OrderDetails od ON o.OrderID = od.OrderID
WHERE YEAR(o.OrderDate) = 2016
GROUP BY c.CustomerID, c.CompanyName
ORDER BY c.CustomerID;",10.0,qz2313,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
6060,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT Orders.CustomerID, COUNT(DISTINCT OrderDetails.ProductID) AS NumProducts, 
SUM(OrderDetails.Quantity) AS TotalUnits, 
SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) AS TotalPrice
FROM Orders
INNER JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID
GROUP BY Orders.OrderID
HAVING TotalPrice > 10000
ORDER BY TotalPrice DESC;",7.5,qz2313,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
6061,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, AVG(Freight) AS AvgFreight
FROM Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3;",7.5,qz2313,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
6062,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT Customers.CustomerID, Customers.CompanyName, COUNT(Orders.OrderID) AS NumOrders
FROM Customers
LEFT JOIN Orders
ON Customers.CustomerID = Orders.CustomerID
GROUP BY Customers.CustomerID, Customers.CompanyName
ORDER BY NumOrders DESC;",7.5,qz2313,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
6063,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT Products.ProductID, Products.ProductName, Suppliers.CompanyName
FROM Products
INNER JOIN Suppliers
ON Products.SupplierID = Suppliers.SupplierID
ORDER BY Products.ProductID;",5.0,qz2313,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
6064,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName
FROM Products
WHERE ProductName LIKE '%queso%';",5.0,qz2313,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
6065,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT  FirstName,LastName,HireDate
FROM Employees
WHERE Title='Sales Representative'
AND Country='USA'",5.0,qz2313,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
6066,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT DISTINCT p.origin,p.dest,a.state
FROM m_ticket_prices p
JOIN m_airports a ON p.origin=a.airport",5.0,qz2313,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
6077,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin,dest,MIN(fare)cheapest_fare,
MAX(fare)most_expensive_fare,
avg(fare)the_average_fare,
COUNT(DISTINCT carrier)number_of_carriers ,
SUM(passengers)total_number_of_passengers 
FROM m_ticket_prices p
group by 1,2",5.0,qz2313,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
6078,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT 
F.state,
A.TotalNumberOfPassengers,
RANK()OVER(ORDER BY A.TotalNumberOfPassengers DESC)AS national_rank,
RANK()OVER(PARTITION BY F.state ORDER BY A.TotalNumberOfPassengers DESC)AS state_rank
FROM flights.m_airports  F
JOIN passengers_per_airport A ON F.airport=A.origin;
",1.0,qz2313,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
6079,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE passengers_per_airport
SELECT 
DISTINCT
origin,
SUM(passengers) OVER m_p AS TotalNumberOfPassengers   
FROM  flights.m_ticket_prices
WINDOW 
  m_p AS (PARTITION BY origin);
  
",1.0,qz2313,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
6080,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"SELECT 
S.MemberSince,
SUM(S.TotalNumSignUps-I.TotalNumInactive)OVER W_I AS  total_active
FROM SingUpsAsOf S 
JOIN InactiveAsOf I ON S.MemberSince=I.LastUpdate
WINDOW 
  W_I AS (PARTITION BY MemberSince);
",2.0,qz2313,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
6081,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE InactiveAsOf
SELECT 
LastUpdate,
SUM(NumInactive) OVER w_t AS TotalNumInactive   
FROM InactiveOn
WINDOW 
  w_t AS (PARTITION BY LastUpdate);
  
",1.0,qz2313,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
6082,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"CREATE TEMPORARY TABLE SingUpsAsOf
SELECT 
MemberSince,
SUM(NumSignUps) OVER w_s AS TotalNumSignUps   
FROM SignUpsOn
WINDOW 
  w_s AS (PARTITION BY MemberSince);
",1.0,qz2313,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
6085,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT male_names.first_name, male_names.freq, female_names.freq, 
       ABS(LOG(male_names.freq/female_names.freq)) AS ambiguity
FROM male_names
INNER JOIN female_names ON male_names.first_name = female_names.first_name
ORDER BY ambiguity ASC;

",2.0,qz2313,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6086,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, freq
FROM female_names
WHERE first_name NOT IN(
SELECT first_name FROM male_names
)
ORDER BY freq DESC;

",1.0,qz2313,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6087,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT first_name, COUNT(*) as freq
FROM actors
WHERE gender = 'M'
    AND first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

CREATE TEMPORARY TABLE female_names AS
SELECT first_name, COUNT(*) as freq
FROM actors
WHERE gender = 'F'
    AND first_name IN (SELECT first_name FROM eligible_names)
GROUP BY first_name;

SELECT first_name, freq
FROM male_names
WHERE first_name NOT IN(
SELECT first_name FROM female_names
)
ORDER BY freq DESC;
",1.0,qz2313,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6088,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, gender
FROM actors
WHERE first_name NOT LIKE '%.%'
AND first_name NOT LIKE'%A.%'
AND first_name NOT LIKE'%J.B%'
AND first_name NOT LIKE'% (%'
AND first_name IN(
SELECT first_name FROM actors GROUP BY 1 HAVING COUNT(*) >= 50
);
",0.9,qz2313,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6089,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"use music;
SELECT t.artist_id, t.album_id,t.track_id, t.track_name,
 MIN(tp.played_on) AS min_played_on, 
  MAX(tp.played_on) AS max_played_on
FROM track t
  LEFT JOIN tracks_played tp ON t.track_id = tp.track_id 
  AND t.artist_id = tp.artist_id 
  AND t.album_id = tp.album_id
GROUP BY 
  t.artist_id, t.album_id, t.track_id, t.track_name
ORDER BY t.artist_id;

",1.0,qz2313,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6090,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT 
  r.artist_id,r.artist_name, 
  COUNT(l.album_id) AS num_albums
FROM 
  artist r 
  LEFT JOIN album l ON r.artist_id = l.artist_id
GROUP BY 
  r.artist_id
",1.0,qz2313,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6091,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT 
  date(tp.played_on) AS date_played, 
  r.artist_id, r.artist_name,
  COUNT(DISTINCT tp.user_id) AS users, 
  SUM(t.time) AS total_time,
  COUNT(tp.track_id)  AS total_tracks
  FROM tracks_played tp
  INNER JOIN track t ON tp.track_id = t.track_id AND t.artist_id = tp.artist_id AND t.album_id = tp.album_id
  INNER JOIN artist r ON r.artist_id = tp.artist_id AND r.artist_id = t.artist_id
GROUP BY date_played, r.artist_id
ORDER BY date_played and r.artist_id;


",1.0,qz2313,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6092,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, COUNT(*) AS tracks_played, sum(t.time) as Total_time
FROM users u
     LEFT JOIN tracks_played tp ON u.user_id = tp.user_id 
     LEFT JOIN track t ON t.track_id = tp.track_id and t.artist_id = tp.artist_id AND t.album_id = tp.album_id
     GROUP BY u.user_id;

",0.9,qz2313,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6093,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT track.album_id, SUM(track.time) AS total_time
FROM track
GROUP BY track.album_id
HAVING total_time > 60;",1.0,qz2313,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6094,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(*) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY album_id;
",1.0,qz2313,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6095,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS cnt_albums
FROM album
GROUP BY artist_id;
",1.0,qz2313,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6096,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT
    AVG(time) AS avg_time,
    STDDEV(time) AS std_time
FROM track;",1.0,qz2313,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6097,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS cnt_tracks
From track;",1.0,qz2313,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6098,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"USE music;
SELECT COUNT(*) AS cnt_artists
From artist;",1.0,qz2313,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6099,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT u.first_name, u.last_name
FROM users u
LEFT JOIN tracks_played tp ON u.user_id = tp.user_id
WHERE tp.user_id IS NULL;",1.0,qz2313,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6100,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT u.first_name, u.last_name, u.user_id,album_name, t.track_name, tp.played_on
FROM tracks_played tp
     INNER JOIN users u ON tp.user_id = u.user_id
     INNER JOIN track t ON tp.track_id = t.track_id
     INNER JOIN album l ON tp.album_id= l.album_id
ORDER BY u.user_id, tp.played_on;
",0.5,qz2313,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6101,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Use music;
SELECT T.track_name, T.track_id, T.time, T.album_id, R.artist_id
FROM track T
     INNER JOIN artist R ON T.artist_id = R.artist_id
WHERE R.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;
",1.0,qz2313,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6102,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, album_name, artist_name
FROM track T
     INNER JOIN album L ON T.album_id = L.album_id
     INNER JOIN artist ON L.artist_id = T.artist_id;",0.75,qz2313,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6103,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT*
FROM album
Where album_name = 'Second Coming';

SELECT*
FROM track T 
     INNER JOIN album L ON L.album_id = T.album_id AND L.artist_id = T.artist_id
WHERE L.album_name = 'Second Coming';
",1.0,qz2313,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6104,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"use music;

select*
From artist;

Select*
From album;

SELECT album_name
FROM album L
     INNER JOIN artist R ON L.artist_id = R.artist_id
WHERE R.artist_name = 'New Order';
",1.0,qz2313,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6117,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"USE music;
SELECT*
FROM track
WHERE Track_name LIKE '%Love%';",1.0,qz2313,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6118,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Boolean condition:

USE music;
SELECT*
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

IN operation:

USE music;
SELECT*
FROM track
WHERE artist_id IN (1, 3, 5);",1.0,qz2313,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6119,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"USE music;
SELECT*
FROM album
Where album_name BETWEEN 'F' and 'R' 

Result:
1	5	Power, Corruption & Lies
2	1	Let Love In
3	1	Live Around The World
3	2	In A Silent Way
6	1	Light Years
",1.0,qz2313,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
6120,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"USE music;
SELECT*
FROM track
WHERE Track_name < 'M'",1.0,qz2313,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6121,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"USE music;
SELECT*
FROM track
WHERE artist_id=3 and album_id=2

Result:
3	2	0	Shhh/Peaceful	16.67
3	2	1	In A Silent Way/It's About That Time	16.67
				",1.0,qz2313,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6122,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"USE music;
SELECT*
FROM album
WHERE artist_id=4

Result:
4	1	Exile On Main Street
",1.0,qz2313,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6123,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;
SELECT*
FROM artist
WHERE artist_name='The Rolling Stones'

Result:
4	The Rolling Stones
	",1.0,qz2313,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6124,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;
SELECT*
FROM artist;
WHERE artist_id=5

Result:
5	The Stone Roses",1.0,qz2313,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6126,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"USE music;
SELECT*
FROM album;
SELECT artist_id, album_name
FROM album;
SELECT album_name as album_title, artist_id
FROM album;
",1.0,qz2313,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6128,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"USE music;
SELECT*
FROM track;

",1.0,qz2313,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6129,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"USE music;
SELECT*
FROM album;


",1.0,qz2313,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6130,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"USE music;
SELECT*
FROM artist;

",1.0,qz2313,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6131,"Databases for Business Analytics, Spring'23","251,685",Assignment 2A: Database Navigation,"295,302",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"A track will appear on one or more albums and an album will contain one or more tracks. Each track played can be recorded by one user and users can record one or more tracks played. Each artist can create one track and each artist creates one track. Each artist can play one or more tracks. The foreign key of the entity album is artist_id. The foreign keys of the entity track are artist_id and album_id. The foreign keys of the entity tracks_played are user_id, artist_id, album_id, and track_id. ",1.0,qz2313,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
6169,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT E.first_name, M.male_freq, F.female_freq, LOG(M.male_freq / F.female_freq) AS ambiguous
FROM eligible_names E
    INNER JOIN male_names M ON E.first_name = M.first_name
    INNER JOIN female_names F ON F.first_name = M.first_name
GROUP BY E.first_name, M.male_freq, F.female_freq
ORDER BY ABS(ambiguous);",2.0,ckw7811,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6170,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT F.first_name, F.female_freq
FROM female_names F
    INNER JOIN eligible_names E ON F.first_name = E.first_name
WHERE F.first_name NOT IN(SELECT first_name FROM male_names)
ORDER BY F.female_freq DESC;",1.0,ckw7811,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6171,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
	SELECT DISTINCT A.first_name, COUNT(A.first_name) AS male_freq
	FROM actors A
	WHERE A.gender = 'M'
       GROUP BY A.first_name;
CREATE TEMPORARY TABLE female_names AS
	SELECT DISTINCT A.first_name, COUNT(A.first_name) AS female_freq
	FROM actors A
	WHERE A.gender = 'F'
       GROUP BY A.first_name;
    
SELECT M.first_name, M.male_freq
FROM male_names M
       INNER JOIN eligible_names E ON M.first_name = E.first_name
WHERE M.first_name NOT IN(SELECT first_name FROM female_names)
ORDER BY M.male_freq DESC;",1.0,ckw7811,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6172,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	SELECT A.first_name, COUNT(A.first_name) AS num_appeared
	FROM actors A
	WHERE A.first_name NOT LIKE('%.%') AND A.first_name NOT LIKE('%(%)%')
	GROUP BY A.first_name
	HAVING num_appeared > 50;",1.0,ckw7811,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6173,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on
FROM track T
	LEFT JOIN tracks_played TP ON T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name;",1.0,ckw7811,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6174,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_name, COUNT(B.album_id) AS num_albums
FROM artist A
	LEFT JOIN album B ON A.artist_id = B.artist_id
GROUP BY A.artist_name;",1.0,ckw7811,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6175,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played, S.artist_id, S.artist_name, 
	COUNT(DISTINCT TP.user_id) AS users,
    SUM(T.time) AS total_time,
    COUNT(TP.track_id ) AS total_tracks
FROM tracks_played TP
	INNER JOIN track T ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
    INNER JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
    INNER JOIN artist S ON A.artist_id = S.artist_id
GROUP BY date_played, S.artist_id, S.artist_name;",1.0,ckw7811,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6176,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.track_id) AS tracks_played, SUM(T.time) AS time_listened
FROM users U
	LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
	LEFT JOIN track T ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
GROUP BY U.user_id;",1.0,ckw7811,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6177,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT A.album_id, A.artist_id, SUM(T.time) AS total_length
FROM album A
	INNER JOIN track T ON A.artist_id = T.artist_id AND A.album_id = T.album_id
GROUP BY A.album_id, A.artist_id
HAVING total_length > 60
ORDER BY A.album_id;",1.0,ckw7811,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6178,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT A.album_id, A.artist_id, COUNT(T.track_id) AS num_track, SUM(T.time) AS total_length
FROM album A
	INNER JOIN track T ON A.artist_id = T.artist_id AND A.album_id = T.album_id
GROUP BY A.album_id, A.artist_id
ORDER BY A.album_id;",1.0,ckw7811,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6179,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT A.artist_id, COUNT(B.album_id)
FROM artist A
	LEFT JOIN album B ON A.artist_id = B.artist_id
GROUP BY A.artist_id;",1.0,ckw7811,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6180,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),6) AS avg_length, ROUND(STDDEV(time),6) AS stddev_length
FROM track;",1.0,ckw7811,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6181,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track;",1.0,ckw7811,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6182,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS num_artist
FROM artist;",1.0,ckw7811,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6198,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
	LEFT OUTER JOIN tracks_played TP ON TP.user_id = U.user_id
WHERE TP.user_id IS NULL;",1.0,ckw7811,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6199,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id,U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played TP
	INNER JOIN users U ON TP.user_id = U.user_id
       INNER JOIN track T ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = 
       T.track_id
       INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
ORDER BY U.user_id, TP.played_on;",1.0,ckw7811,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6200,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.*
FROM track T
	INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
       INNER JOIN artist B ON A.artist_id = B.artist_id
WHERE B.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,ckw7811,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6201,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A.album_name, B.artist_name
FROM track T
	INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
       INNER JOIN artist B ON A.artist_id = B.artist_id;",1.0,ckw7811,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6202,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
	INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
WHERE A.album_name = 'Second Coming';",1.0,ckw7811,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6203,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist A 
	INNER JOIN album B ON A.artist_id = B.artist_id
WHERE A.artist_name = 'New Order';",1.0,ckw7811,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6211,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"USE music;

SELECT *
FROM track
WHERE track_name LIKE '%love%';


OUTPUT:
artist_id, album_id, track_id, track_name, time
'1', '3', '7', 'Bizarre Love Triangle', '4.35'
'1', '6', '10', 'Bizarre Love Triangle', '6.74'
'1', '7', '4', 'Bizarre Love Triangle', '4.37'
'2', '1', '0', 'Do You Love Me?', '5.95'
'2', '1', '2', 'Loverman', '6.37'
'2', '1', '5', 'I Let Love In', '4.25'
'2', '1', '9', 'Do You Love Me? (Part Two)', '6.23'
'5', '1', '2', 'Ten Storey Love Song', '4.50'
'5', '1', '11', 'Love Spreads', '5.79'
'6', '1', '4', 'Loveboat', '4.18'
'6', '1', '10', 'Under The Influence Of Love', '3.40'
",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6212,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"USE music;

SELECT * 
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT *
FROM track
WHERE artist_id IN (1,3,5);


OUTPUT:
artist_id, album_id, track_id, track_name, time
'1', '1', '0', 'Elegia', '4.93'
'1', '1', '1', 'In A Lonely Place', '6.26'
'1', '1', '2', 'Procession', '4.47'
'1', '1', '3', 'Your Silent Face', '5.99'
'1', '1', '4', 'Sunrise', '6.01'
'1', '1', '5', 'Let\'s Go', '3.90'
'1', '1', '6', 'Broken Promise', '3.76'
'1', '1', '7', 'Dreams Never End', '3.20'
'1', '1', '8', 'Cries And Whispers', '3.42'
'1', '1', '9', 'All Day Long', '5.18'
'1', '1', '10', 'Sooner Than You Think', '5.21'
'1', '1', '11', 'Leave Me Alone', '4.67'
'1', '1', '12', 'Lonesome Tonight', '5.19'
'1', '1', '13', 'Every Little Counts', '4.47'
'1', '1', '14', 'Run Wild', '3.95'
'1', '2', '0', 'In A Lonely Place', '6.30'
'1', '2', '1', 'Procession', '4.46'
'1', '2', '2', 'Mesh', '3.44'
'1', '2', '3', 'Hurt', '6.98'
'1', '2', '4', 'The Beach', '7.32'
",1.0,ckw7811,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6213,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"USE music;

SELECT *
FROM album
WHERE album_name > 'E' AND album_name < 'S' AND album_name <> 'Exile On Main Street';

**Exile On Main Street would not remove from my output for some reason, so manually excluded to match prompt requirements. 

OUTPUT:
artist_id, album_id, album_name
'1','1','Retro - John McCready FAN'
'1','3','Retro - Miranda Sawyer POP'
'1','4','Retro - New Order / Bobby Gillespie LIVE'
'1','5','Power, Corruption & Lies'
'2','1','Let Love In'
'3','1','Live Around The World'
'3','2','In A Silent Way'
'6','1','Light Years'
",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
6214,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"USE music;

SELECT * 
FROM track
WHERE track_name < 'M'
ORDER BY track_name;


OUTPUT:
artist_id, album_id, track_id, track_name, time
'1','2','11','1963','5.63'
'1','5','3','5 8 6','7.52'
'1','5','0','Age Of Consent','5.26'
'1','4','4','Age Of Consent [Spectrum Arena, Warrington 1/3/86]','5.04'
'2','1','7','Ain\'t Gonna Rain Anymore','3.77'
'1','1','9','All Day Long','5.18'
'1','7','3','All Day Long','5.21'
'4','1','14','All Down The Line','3.84'
'3','1','5','Amandla','5.87'
'1','7','2','Angel Dust','3.73'
'1','7','7','As It Is When It Was','3.77'
'1','4','10','As It Is When It Was [Reading Festival 29/8/93]','3.80'
'5','1','6','Begging You','4.94'
'6','1','8','Bittersweet Goodbye','3.72'
'1','6','10','Bizarre Love Triangle','6.74'
'1','7','4','Bizarre Love Triangle','4.37'
'1','3','7','Bizarre Love Triangle','4.35'
'1','6','3','Blue Monday','7.49'
'1','3','10','Blue Monday','7.48'
'5','1','0','Breaking Into Heaven','11.37'
'1','1','6','Broken Promise','3",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6215,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"USE music;

SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;


OUTPUT:
artist_id, album_id, track_id, track_name, time
'3', '2', '0', 'Shhh/Peaceful', '16.67'
'3', '2', '1', 'In A Silent Way/It\'s About That Time', '16.67'
",1.0,ckw7811,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6216,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"USE music;

SELECT *
FROM album
WHERE artist_id = 4;


OUTPUT:
artist_id, album_id, album_name
'4', '1', 'Exile On Main Street'
",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6217,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;

SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones';


OUTPUT:
artist_id, artist_name
'4', 'The Rolling Stones'
",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6218,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;

SELECT *
FROM artist
WHERE artist_id = 5;


OUTPUT:
artist_id, artist_name
'5','The Stone Roses'


",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6219,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"USE music;

SELECT *
FROM track
ORDER BY time
LIMIT 10;",1.0,ckw7811,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6220,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"USE music;

SELECT album_name AS album_title, artist_id
FROM album;",1.0,ckw7811,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6221,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"USE music;

SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,ckw7811,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6222,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"USE music;

SELECT *
FROM track;",1.0,ckw7811,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6223,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"USE music;

SELECT *
FROM album;",1.0,ckw7811,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6224,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;

SELECT *
FROM artist;",1.0,ckw7811,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6271,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
    en.first_name,
    mn.frequency AS male_frequency,
    fn.frequency AS female_frequency,
    ABS(LOG(mn.frequency / fn.frequency)) AS ambiguity_score
FROM
    eligible_name en
LEFT JOIN
    male_name mn ON en.first_name = mn.first_name
LEFT JOIN
    female_name fn ON en.first_name = fn.first_name
WHERE
    mn.frequency IS NOT NULL AND fn.frequency IS NOT NULL
ORDER BY
    ambiguity_score ASC;",1.6,gmm9757,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6272,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_name 
AS SELECT first_name, COUNT(*) AS frequency 
FROM actors 
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'   AND gender = 'F' 
GROUP BY first_name 
HAVING COUNT(*) >= 50;

CREATE TEMPORARY TABLE male_name AS 
SELECT first_name, COUNT(*) AS frequency 
FROM actors  WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'   AND gender = 'M' 
GROUP BY first_name 
HAVING COUNT(*) >= 50;

SELECT fn.first_name, fn.frequency
FROM female_name fn
LEFT JOIN male_name mn ON fn.first_name = mn.first_name
WHERE mn.first_name IS NULL;",0.8,gmm9757,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6273,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_name 
AS SELECT first_name, COUNT(*) AS frequency 
FROM actors 
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'   AND gender = 'F' 
GROUP BY first_name 
HAVING COUNT(*) >= 50;

CREATE TEMPORARY TABLE male_name AS 
SELECT first_name, COUNT(*) AS frequency 
FROM actors  WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'   AND gender = 'M' 
GROUP BY first_name 
HAVING COUNT(*) >= 50;

SELECT mn.first_name, mn.frequency 
FROM male_name mn
LEFT JOIN female_name fn ON mn.first_name = fn.first_name 
WHERE fn.first_name IS NULL;",0.8,gmm9757,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6274,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name
FROM actors a
WHERE a.first_name NOT LIKE '%.%' AND a.first_name NOT LIKE '%(%'
GROUP BY a.first_name
HAVING COUNT(*) >= 50;",1.0,gmm9757,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6275,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.track_id, t.track_name, MIN(tp.played_on) AS min_played_on, MAX(tp.played_on) AS max_played_on
FROM track t
LEFT JOIN tracks_played tp ON t.track_id = tp.track_id
GROUP BY t.track_id;",0.8,gmm9757,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
6276,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_name, count(ab.album_id) AS num_albums
FROM artist a
INNER JOIN album ab ON a.artist_id = ab.artist_id
GROUP BY a.artist_id;",1.0,gmm9757,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6277,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT tp.played_on AS date_played, a.artist_id, a.artist_name, tp.user_id AS users, SUM(time) AS total_time, SUM(track_name) AS total_tracks
FROM tracks_played tp
INNER JOIN artist a ON tp.artist_id = a.artist_id
INNER JOIN track t ON tp.artist_id = tp.artist_id
GROUP BY tp.played_on, a.artist_id;",0.8,gmm9757,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;"
6278,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT 
  tp.user_id, 
  COUNT(*) AS tracks_played, 
  IFNULL(SUM(time), 0) AS total_time 
FROM 
  tracks_played tp
LEFT JOIN track t ON tp.track_id = t.track_id
GROUP BY user_id;",0.8,gmm9757,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
6279,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, SUM(time) AS total_length 
FROM track
GROUP BY album_id
HAVING SUM(time) > 60;",0.8,gmm9757,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
6280,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(*) AS num_tracks, SUM(time) AS total_length 
FROM track
GROUP BY album_id;",0.8,gmm9757,"



Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 



Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
6281,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,gmm9757,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6282,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time
FROM track;",1.0,gmm9757,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6283,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,gmm9757,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6284,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,gmm9757,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6291,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT u.first_name, u.last_name
FROM users u
LEFT OUTER JOIN tracks_played tp ON u.user_id = tp.user_id
WHERE tp.played_on IS NULL;",1.0,gmm9757,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6292,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT u.first_name, u.last_name, tp.user_id, a.album_name, t.track_name, tp.played_on
FROM tracks_played tp
INNER JOIN users u ON tp.user_id = u.user_id
INNER JOIN track t ON tp.track_id = t.track_id
INNER JOIN album a ON tp.album_id = a.album_id;",1.0,gmm9757,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6293,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT*
FROM track
INNER JOIN artist
WHERE artist_name = 'The Stone Roses'
ORDER BY time ASC;",0.7,gmm9757,"


Answer Key








SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
WHERE&nbsp;R.artist_name&nbsp;=&nbsp;'The&nbsp;Stone&nbsp;Roses'
ORDER&nbsp;BY&nbsp;T.time







","
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,"The feedback from the TA was 


Answer Key








SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
WHERE&nbsp;R.artist_name&nbsp;=&nbsp;'The&nbsp;Stone&nbsp;Roses'
ORDER&nbsp;BY&nbsp;T.time







"
6294,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, album_name, artist_name
FROM track
INNER JOIN album
INNER JOIN artist;",0.5,gmm9757,"


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






"
6295,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT*
FROM track
INNER JOIN album
where album_name = 'Second Coming';",0.5,gmm9757,"


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






"
6296,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT*
FROM album
INNER JOIN artist
WHERE artist_name = 'New Order';",0.5,gmm9757,"


Answer Key







SELECT R.artist_name, A.*
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
WHERE&nbsp;R.artist_name&nbsp;=&nbsp;'New&nbsp;Order'






","SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT R.artist_name, A.*
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
WHERE&nbsp;R.artist_name&nbsp;=&nbsp;'New&nbsp;Order'






"
6304,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT track_name 
FROM track
WHERE track_name LIKE '%Love%';",1.0,gmm9757,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6305,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR Boolean Condition
SELECT track_name 
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

IN Operation
SELECT track_name 
FROM track
WHERE artist_id IN (1, 3, 5);",1.0,gmm9757,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6306,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name
FROM album
WHERE album_name > 'E' AND album_name < 'S' AND NOT album_name LIKE 'E%' AND NOT album_name LIKE 'S%'
ORDER BY album_name;",1.0,gmm9757,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
6307,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name 
FROM track
WHERE track_name < 'M';",1.0,gmm9757,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6308,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT track_name 
FROM track
WHERE album_id = 2 AND artist_id = 3;",1.0,gmm9757,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6309,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT* 
FROM album
WHERE artist_id = 4;",1.0,gmm9757,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6310,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * 
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,gmm9757,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6311,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_id = 5;",1.0,gmm9757,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6313,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_name as album_title, artist_id
from album;",1.0,gmm9757,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6314,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name asc;",1.0,gmm9757,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6315,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select*
from track;",1.0,gmm9757,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6316,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select*
from album;",1.0,gmm9757,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6317,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;
show tables;
select*
from artist;",1.0,gmm9757,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6353,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_female_names AS
select * from eligible_names en
where en.first_name in (select male_names from male_names) and en.first_name in (select female_names from female_names)
order by en.first_name_count desc;

select mfn.first_name,
male_names.male_name_count,
female_names.female_name_count, 
round(abs(log(male_names.male_name_count / female_names.female_name_count)),2) as score
from male_female_names mfn
	inner join male_names on male_names.male_names = mfn.first_name
	inner join female_names on female_names.female_names = mfn.first_name
order by score asc;",2.0,ljb10042,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6354,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select * from eligible_names en
where en.first_name not in (select male_names from male_names) and en.first_name in (select female_names from female_names)
order by en.first_name_count desc;",1.0,ljb10042,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6355,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
select a.first_name as male_names, count(a.first_name) as male_name_count from actors a
where a.gender = 'M'
group by a.first_name;

CREATE TEMPORARY TABLE female_names AS
select a.first_name as female_names, count(a.first_name) as female_name_count from actors a
where a.gender = 'F'
group by a.first_name;

select * from eligible_names en
where en.first_name in (select male_names from male_names) and en.first_name not in (select female_names from female_names)
order by en.first_name_count desc;",1.0,ljb10042,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6356,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	select a.first_name, count(a.first_name) as first_name_count 
	from actors a
	where a.first_name not in (select a.first_name from actors a where a.first_name like ('%.%') or a.first_name like ('%(%'))
	group by a.first_name
	having first_name_count >= 50
	order by first_name_count asc;",1.0,ljb10042,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6357,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select tp.artist_id, tp.album_id, tp.track_id, t.track_name, min(tp.played_on) as min_played_on, max(tp.played_on) as max_played_on 
from track t
left join tracks_played tp on tp.artist_id = t.artist_id and tp.album_id = t.album_id and tp.track_id = t.track_id
group by tp.artist_id, tp.album_id, tp.track_id, t.track_name;",1.0,ljb10042,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6358,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select a.artist_id, a.artist_name, count(album_id) as num_albums 
from artist a
left join album al on al.artist_id = a.artist_id
group by a.artist_id, a.artist_name;",1.0,ljb10042,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6359,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(tp.played_on) as date_played, tp.artist_id, a.artist_name, count(distinct(user_id)) as users, sum(t.time) as total_time, count(tp.track_id) as total_tracks 
from tracks_played tp
left join artist a on a.artist_id = tp.artist_id
left join track t on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id
group by date_played, tp.artist_id, a.artist_name
order by date_played asc;",1.0,ljb10042,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6360,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(tp.track_id) as tracks_played, sum(t.time) as total_time  
from users u
left join tracks_played tp on tp.user_id = u.user_id
left join track t on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id
group by user_id;",1.0,ljb10042,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6361,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id, sum(time) as total_album_time
from track
group by artist_id, album_id
having total_album_time > 60;",1.0,ljb10042,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6362,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(track_id) as cnt_tracks, sum(time) as total_album_time
from track
group by artist_id, album_id;",1.0,ljb10042,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6363,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_id) as cnt_albums
from album
group by artist_id;",1.0,ljb10042,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6364,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time)
from track;",1.0,ljb10042,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6365,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id)
from track;",1.0,ljb10042,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6366,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(artist_id)
from artist;",1.0,ljb10042,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6367,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select 	u.first_name,
		u.last_name
from users u
		left join tracks_played tp on tp.user_id = u.user_id
		where tp.user_id is null;",1.0,ljb10042,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6368,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select 	u.user_id,
		u.first_name,
		u.last_name,
		al.album_name,
		t.track_name,
		tp.played_on
from tracks_played tp
	inner join users u on u.user_id = tp.user_id
	inner join track t on t.track_id = tp.track_id and t.album_id = tp.album_id and t.artist_id = tp.artist_id
	inner join album al on al.album_id = t.album_id and al.artist_id = t.artist_id
order by u.user_id, tp.played_on asc;",1.0,ljb10042,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6369,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select 	t.track_id,
		t.track_name,
		a.artist_id,
        al.album_id,
        t.time
from artist a
	inner join album al on al.artist_id = a.artist_id
	inner join track t on t.album_id = al.album_id and t.artist_id = al.artist_id
    where a.artist_name = 'The Stone Roses'
    order by t.time asc;",1.0,ljb10042,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6370,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select 	t.track_name,
		al.album_name,
		a.artist_name
from artist a
	inner join album al on al.artist_id = a.artist_id
	inner join track t on t.album_id = al.album_id and t.artist_id = al.artist_id;",1.0,ljb10042,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6371,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select * from album al
inner join track t on t.album_id = al.album_id and t.artist_id = al.artist_id
where al.album_name = 'Second Coming';


",1.0,ljb10042,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6372,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select * from album al
inner join artist a on a.artist_id = al.artist_id
where a.artist_name = 'New Order';",1.0,ljb10042,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6380,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT * FROM track
WHERE track_name LIKE '%Love%';",1.0,ljb10042,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6381,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT * FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;


SELECT * FROM track
WHERE artist_id IN (1,3,5);",1.0,ljb10042,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6382,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * FROM album
WHERE album_name > 'E' AND album_name < 'S';",0.7,ljb10042,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
6383,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * FROM track
WHERE track_name < 'M';",1.0,ljb10042,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6384,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,ljb10042,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6385,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * FROM album
WHERE artist_id = 4;",1.0,ljb10042,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6386,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,ljb10042,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6387,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM artist
WHERE artist_id = 5;",1.0,ljb10042,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6389,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, 
album_name AS album_title
FROM album;",1.0,ljb10042,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6390,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name FROM artist
ORDER BY artist_name ASC;",1.0,ljb10042,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6391,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,SELECT * FROM track;,1.0,ljb10042,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6392,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,SELECT * FROM album;,1.0,ljb10042,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6393,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,SELECT * FROM artist;,1.0,ljb10042,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6412,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE eligible_male_names AS
  select first_name, count(*) AS cnt_male, count(*)/69293 AS perc_male
    from actors
    where gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
    GROUP BY first_name
    HAVING cnt_male > 50
    ORDER BY cnt_male DESC;

CREATE TEMPORARY TABLE eligible_female_names AS
    select first_name, count(*) AS cnt_female, count(*)/44490 AS perc_female
    from actors
    where gender = 'F' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
    GROUP BY first_name
    HAVING cnt_female > 50
    ORDER BY cnt_female DESC;

SELECT*
FROM eligible_male_names;

SELECT*
FROM eligible_female_names;

select *
	from eligible_male_names EM JOIN eligible_female_names EF ON EM.first_name = EF.first_name;
 
#most ambiguous name
select EM.first_name, cnt_male, cnt_female, perc_male, perc_female,
	ABS(LOG(perc_male/perc_female)) AS log_odds
	from eligible_male_names EM JOIN eligible_female_names EF",1.6,cp2769,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6413,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select first_name, COUNT(*) AS cnt
from actors
where gender = 'F'
	AND first_name NOT IN (
		SELECT first_name FROM actors WHERE gender = 'M'
	)
group by first_name
order by cnt DESC;

CREATE TEMPORARY TABLE male_names AS
	SELECT DISTINCT first_name FROM actors where gender = 'M';
    
# 44,490 distinct Female names
SELECT DISTINCT first_name
	from actors
    where gender = 'F'
    group by first_name
    order by count(*) DESC;
    
    select first_name, count(*) AS cnt, count(*)/44490 AS perc_female
    from actors
    where gender = 'F'
		AND first_name NOT IN (
			SELECT first_name FROM male_names
	)
    GROUP BY first_name
    HAVING cnt > 50
    ORDER BY cnt DESC;
",0.8,cp2769,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6414,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"select first_name, COUNT(*) AS cnt
from actors
where gender = 'M'
	AND first_name NOT IN (
		SELECT first_name FROM actors WHERE gender = 'F'
	)
group by first_name
order by cnt DESC;

CREATE TEMPORARY TABLE female_names AS
	SELECT DISTINCT first_name FROM actors where gender = 'F';
    
# 69,293 distinct Male names
SELECT DISTINCT first_name
	from actors
    where gender = 'M'
    group by first_name
    order by count(*) DESC;
    
    select first_name, count(*) AS cnt, count(*)/69293 AS perc_male
    from actors
    where gender = 'M'
		AND first_name NOT IN (
			SELECT first_name FROM female_names
	)
    GROUP BY first_name
    HAVING cnt > 50
    ORDER BY cnt DESC;",0.8,cp2769,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6415,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
select first_name, gender,
COUNT(*) AS num_actors
from actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name, gender
HAVING num_actors >= 50
ORDER BY COUNT(*) ASC;",1.0,cp2769,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6416,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select A.artist_id, A.album_id, A.track_id, B.track_name, MIN(A.played_on) AS min_played_on, MAX(A.played_on) AS max_played_on
from tracks_played A
RIGHT OUTER JOIN track B
ON A.artist_id = B.artist_id AND A.album_id = B.album_id AND A.track_id = B.track_id
group by A.artist_id, A.album_id, A.track_id, B.track_name
order by A.artist_id ASC;",1.0,cp2769,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6417,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select A.artist_id, B.artist_name, COUNT(album_id) AS num_albums
from album A
INNER JOIN artist B
ON A.artist_id = B.artist_id
group by A.artist_id
order by A.artist_id ASC;",1.0,cp2769,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6418,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(played_on) AS date_played, A.artist_id, C.artist_name, COUNT(user_id) AS users, sum(time) AS total_time, COUNT(B.track_id) AS total_tracks
from tracks_played A
INNER JOIN track B
ON A.artist_id = B.artist_id AND A.album_id = B.album_id AND A.track_id = B.track_id
INNER JOIN artist C
ON A.artist_id = C.artist_id
group by date(A.played_on), A.artist_id, C.artist_name
order by date(A.played_on) ASC;",1.0,cp2769,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6419,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select user_id, COUNT(*) AS tracks_played, sum(time) AS total_time
from tracks_played A
LEFT OUTER JOIN track B
ON A.artist_id = B.artist_id AND A.album_id = B.album_id AND A.track_id = B.track_id
group by user_id
order by user_id ASC;",0.8,cp2769,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
6420,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id
from track
group by album_id
having sum(time) > 60
order by album_id ASC;",0.8,cp2769,"


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60






"
6421,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, COUNT(*) AS num_tracks, sum(time) AS total_time
from track
group by album_id
order by album_id ASC;
",0.8,cp2769,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
6422,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, COUNT(*) AS cnt_albums
from album
group by artist_id
order by artist_id;",1.0,cp2769,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6423,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select ROUND(AVG(time), 6) AS avg_time, ROUND(STDDEV(time), 6) AS std_time
from track;",1.0,cp2769,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6424,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select COUNT(*)
from track;",1.0,cp2769,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6425,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select COUNT(*)
from artist;",1.0,cp2769,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6426,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select users.first_name, users.last_name
from users
LEFT OUTER JOIN tracks_played
ON users.user_id = tracks_played.user_id
where tracks_played.user_id IS NULL;",1.0,cp2769,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6427,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select users.user_id, users.first_name, users.last_name, album.album_name, track.track_name, tracks_played.played_on
from tracks_played
INNER JOIN album
ON album.artist_id = tracks_played.artist_id AND album.album_id = tracks_played.album_id
INNER JOIN users
ON users.user_id = tracks_played.user_id
INNER JOIN track
ON track.artist_id = tracks_played.artist_id AND track.album_id = tracks_played.album_id AND track.track_id = tracks_played.track_id;",1.0,cp2769,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6428,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track.track_id, track.track_name, artist.artist_id, album.album_id, track.time
from track
INNER JOIN album
ON track.artist_id = album.artist_id
INNER JOIN artist
ON track.artist_id = artist.artist_id
where artist.artist_name = 'The Stone Roses'
order by track.time ASC;",1.0,cp2769,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6429,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track.track_name, artist.artist_name, album.album_name
from track
INNER JOIN album
ON track.artist_id = album.artist_id AND track.album_id = album.album_id
INNER JOIN artist
ON track.artist_id = artist.artist_id;",1.0,cp2769,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6430,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
from album
INNER JOIN track
ON album.album_id = track.album_id AND album.artist_id = track.artist_id
where album.album_name = 'Second Coming'
order by track.track_id ASC;",1.0,cp2769,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6431,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",2,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select*
from album
INNER JOIN artist
ON album.artist_id = artist.artist_id
where artist.artist_name = 'New Order';",1.0,cp2769,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6432,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select users.first_name, users.last_name
from users
LEFT OUTER JOIN tracks_played
ON users.user_id = tracks_played.user_id
where tracks_played.user_id IS NULL;",1.0,cp2769,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6433,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select users.user_id, users.first_name, users.last_name, album.album_name, track.track_name, tracks_played.played_on
from album
INNER JOIN tracks_played
ON album.artist_id = tracks_played.artist_id
INNER JOIN users
ON users.user_id = tracks_played.user_id
INNER JOIN track
ON album.artist_id = track.artist_id;",1.0,cp2769,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6434,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track.track_id, track.track_name, artist.artist_id, album.album_id, track.time
from track
INNER JOIN album
ON track.artist_id = album.artist_id
INNER JOIN artist
ON track.artist_id = artist.artist_id
where artist.artist_name = 'The Stone Roses'
order by track.time ASC;",1.0,cp2769,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6435,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track.track_name, artist.artist_name, album.album_name
from track
INNER JOIN album
ON track.artist_id = album.artist_id
INNER JOIN artist
ON track.artist_id = artist.artist_id;",0.7,cp2769,"



Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was 



Answer Key







SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id






"
6436,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
from album
INNER JOIN track
ON album.album_id = track.album_id AND album.artist_id = track.artist_id
where album.album_name = 'Second Coming'
order by track.track_id ASC;",1.0,cp2769,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6437,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from album
INNER JOIN artist
ON album.artist_id = artist.artist_id
where artist.artist_name = 'New Order';",1.0,cp2769,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6438,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name LIKE '%love%';",1.0,cp2769,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6439,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Variation 1
select *
from track
where artist_id = 1 OR artist_id = 3 OR artist_id = 5;

Variation 2
select *
from track
where artist_id IN (1, 3, 5);",1.0,cp2769,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6440,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
from album
where album_name > 'E' AND album_name < 'S';",0.7,cp2769,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
6441,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name < 'M';",1.0,cp2769,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6442,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from album
where album_id = 2 AND artist_id = 3;",1.0,cp2769,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6443,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id = 4;",1.0,cp2769,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6444,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name = 'The Rolling Stones';",1.0,cp2769,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6445,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",2,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;

select *
from artist
where artist_id = 5;",1.0,cp2769,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6446,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name LIKE '%love%';",1.0,cp2769,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6447,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Variation 1
select *
from track
where artist_id = 1 OR artist_id = 3 OR artist_id = 5;

Variation 2
select *
from track
where artist_id IN (1, 3, 5);",1.0,cp2769,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6448,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
from album
where album_name > 'E' AND album_name < 'S';",0.7,cp2769,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
6449,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name < 'M';",1.0,cp2769,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6450,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from album
where album_id = 2 AND artist_id = 3;",1.0,cp2769,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6451,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id = 5;",0.8,cp2769,id=4,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,The feedback from the TA was id=4
6452,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name = 'The Rolling Stones';",1.0,cp2769,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6453,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;

select *
from artist
where artist_id = 5;",1.0,cp2769,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6454,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select *
from track
order by time ASC
limit 10;",1.0,cp2769,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6455,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name AS album_title
from album;",1.0,cp2769,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6456,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name ASC;",1.0,cp2769,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6457,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select *
from track;",1.0,cp2769,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6458,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select *
from album;",1.0,cp2769,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6459,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;

select *
from artist;",1.0,cp2769,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6483,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE male_eligible AS 
SELECT first_name, COUNT(*) AS count_male
 FROM actors
WHERE gender = 'M'
AND first_name IN(
SELECT eligible_name FROM eligible_names)
GROUP BY first_name; 
    
CREATE TEMPORARY TABLE female_eligible AS 
SELECT first_name, COUNT(*) AS count_female
 FROM actors
WHERE gender = 'F'
AND first_name IN(
SELECT eligible_name FROM eligible_names)
GROUP BY first_name; 

SELECT male_eligible.first_name, count_male, count_female, abs(log(count_male/count_female)) as ambiguous
FROM male_eligible
INNER JOIN female_eligible ON
male_eligible.first_name = female_eligible.first_name
ORDER BY ambiguous
    ;",1.6,em3757,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6484,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT * FROM eligible_names
WHERE eligible_name IN(
    SELECT first_name FROM actors
    WHERE gender = 'F')
    AND eligible_name NOT IN(
    SELECT first_name FROM actors
    WHERE gender = 'M')
    ;",0.8,em3757,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6485,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT * FROM eligible_names
WHERE eligible_name IN(
    SELECT first_name FROM actors
    WHERE gender = 'M')
    AND eligible_name NOT IN(
    SELECT first_name FROM actors
    WHERE gender = 'F')
    ;",0.8,em3757,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6486,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) as count_first_name
  FROM actors AS eligible_names
  WHERE first_name NOT LIKE '%.%' 
  AND first_name NOT LIKE '%""%'
  GROUP BY first_name
  HAVING COUNT(*) > 50
  ORDER BY count_first_name DESC
;",0.8,em3757,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6487,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT track.artist_id, track.album_id, track.track_id, track.track_name, min(tracks_played.played_on), max(tracks_played.played_on)
FROM track
LEFT JOIN tracks_played on track.artist_id  = tracks_played.artist_id
   and track.album_id = tracks_played.album_id
   and track.track_id = tracks_played.track_id
   GROUP BY track.artist_id, track.album_id, track.track_id, track.track_name
;",1.0,em3757,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6488,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT artist_name, count(album.album_id) as num_albums
FROM artist
INNER JOIN album on artist.artist_id = album.artist_id
GROUP BY artist_name
;",1.0,em3757,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6489,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(played_on) as date_played, artist.artist_name, artist.artist_id, 
    count(distinct tracks_played.user_id) as users, 
    sum(track.time) as total_time, 
	count(tracks_played.track_id) as total_tracks
FROM tracks_played
INNER JOIN artist on tracks_played.artist_id = artist.artist_id
LEFT JOIN track on tracks_played.artist_id = track.artist_id 
   and tracks_played.album_id = track.album_id
   and tracks_played.track_id = track.track_id
GROUP BY date_played, artist.artist_name, artist.artist_id
;",1.0,em3757,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6490,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT users.user_id, count(distinct tracks_played.played_on) as tracks_played, sum(track.time) as total_time
FROM users
LEFT JOIN tracks_played on users.user_id = tracks_played.user_id
INNER JOIN track on tracks_played.artist_id = track.artist_id
   and tracks_played.album_id = track.album_id
   and tracks_played.track_id = track.track_id
GROUP BY users.user_id
;",0.8,em3757,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id"
6491,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT COUNT(distinct track.track_id), SUM(time) as album_length
FROM album
LEFT JOIN track ON album.album_id = track.album_id 
and album.artist_id = track.artist_id
GROUP BY album.artist_id, album.album_id
HAVING album_length > 60
;",1.0,em3757,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6492,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT COUNT(distinct track.track_id), SUM(time)
FROM album
LEFT JOIN track ON album.album_id = track.album_id 
and album.artist_id = track.artist_id
GROUP BY album.artist_id, album.album_id
;",1.0,em3757,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6493,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, count(distinct album_id)
FROM album
GROUP BY artist_id
;",1.0,em3757,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6494,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),6), ROUND(STD(time),6)
FROM track
;",1.0,em3757,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6495,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(distinct artist_id, album_id, track_id)
FROM track
;",1.0,em3757,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6496,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(distinct artist_id)
FROM artist
;",1.0,em3757,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6497,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT users.first_name, users.last_name
FROM users
LEFT JOIN tracks_played ON users.user_id = tracks_played.user_id
WHERE tracks_played.played_on IS NULL
;",1.0,em3757,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6498,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT users.first_name, users.last_name, users.user_id, album.album_name, track.track_name, tracks_played.played_on
FROM tracks_played
LEFT JOIN users on tracks_played.user_id = users.user_id
LEFT JOIN album on tracks_played.album_id = album.album_id and tracks_played.artist_id = album.artist_id
LEFT JOIN track on tracks_played.album_id = track.album_id 
    and tracks_played.artist_id = track.artist_id 
    and tracks_played.track_id = track.track_id
    ;",1.0,em3757,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6499,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT track.*
FROM track
INNER JOIN artist on track.artist_id = artist.artist_id
WHERE artist_name = 'The Stone Roses'
ORDER BY track.time
;",1.0,em3757,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6500,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track.track_name, album.album_name, artist.artist_name
FROM track
INNER JOIN album on track.album_id = album.album_id and track.artist_id = album.artist_id
INNER JOIN artist on album.artist_id = artist.artist_id
;",1.0,em3757,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6501,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT track.* 
FROM track
INNER JOIN album on track.album_id = album.album_id and track.artist_id = album.artist_id
WHERE album_name = 'Second Coming'
;",1.0,em3757,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6502,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist 
INNER JOIN album ON artist.artist_id = album.artist_id
WHERE artist_name = 'New Order'
;",1.0,em3757,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6503,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%love%';",1.0,em3757,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6504,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 1 or artist_id = 3 or artist_id = 5;

SELECT *
FROM track
WHERE artist_id IN (1,3,5);",1.0,em3757,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6505,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name > 'E' AND album_name < 'S';",0.7,em3757,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
6506,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M';",1.0,em3757,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6507,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,em3757,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6508,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * 
FROM album
WHERE artist_id = 4;",1.0,em3757,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6509,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * 
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,em3757,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6510,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM
artist
WHERE artist_id = 5;",1.0,em3757,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6511,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_name, time
FROM track
ORDER BY time
LIMIT 10;",1.0,em3757,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6512,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_name AS album_title, artist_id
FROM album;",1.0,em3757,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6513,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,em3757,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6514,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,em3757,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6515,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,em3757,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6516,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,em3757,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6535,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT C.CustomerID, C.CompanyName, SUM(O2.UnitPrice * O2.Quantity) AS total_order_price, SUM(O2.UnitPrice * O2.Quantity*O2.Discount) AS total_discount_applied
FROM Customers C
LEFT JOIN Orders O1 ON C.CustomerID = O1.CustomerID
LEFT JOIN OrderDetails O2 ON O1.OrderID = O2.OrderID
WHERE YEAR(OrderDate) = '2016' 
GROUP BY  C.CustomerID
ORDER BY C.CustomerID
;",10.0,cl6968,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
6536,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"SELECT O1.OrderID, O1.CustomerID, COUNT(O2.ProductID) AS num_product, SUM(O2.Quantity) AS total_units, SUM(O2.UnitPrice * O2.Quantity) AS total_order_price
FROM Orders O1
JOIN OrderDetails O2 ON O1.OrderID = O2.OrderID
GROUP BY O1.OrderID
HAVING total_order_price > 10000
ORDER BY total_order_price DESC
;",7.5,cl6968,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
6537,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS avg_freight
FROM Orders
GROUP BY ShipCountry
ORDER BY avg_freight DESC
LIMIT 3
;",7.5,cl6968,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
6538,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"SELECT C.CustomerID, COUNT(DISTINCT OrderID) AS num_order
FROM Customers C
LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
GROUP BY C.CustomerID
;",7.5,cl6968,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
6539,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P
JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID
;",5.0,cl6968,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
6540,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"SELECT ProductID, ProductName 
FROM Products
WHERE ProductName LIKE '%queso%'
;",5.0,cl6968,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
6541,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"SELECT FirstName, LastName, HireDate
FROM Employees
WHERE Title = 'Sales Representative' AND Country = 'USA'
;",5.0,cl6968,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
6542,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"SELECT origin, dest, M2.state
FROM m_ticket_prices M1
JOIN m_airports M2 ON M1.origin = M2.airport
JOIN m_airports M3 ON M1.dest = M3.airport
WHERE M2.state = M3.state
GROUP BY origin, dest
;",7.5,cl6968,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
6543,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT  M2.state, COUNT(DISTINCT origin) AS num_origin, COUNT(DISTINCT carrier) AS num_carrier, SUM(passengers) AS num_passengers, AVG(fare_per_mile)
FROM m_ticket_prices M1
JOIN m_airports M2 ON M1.origin = M2.airport
GROUP BY  M2.state
;",7.5,cl6968,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
6544,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT carrier, COUNT(origin) AS num_route, COUNT(DISTINCT origin) AS num_origin_airport, AVG(fare_per_mile)
FROM m_ticket_prices 
GROUP BY carrier
HAVING SUM(passengers)>20000
;",10.0,cl6968,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
6555,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"SELECT origin, dest, MIN(fare) AS min_fare, MAX(fare) AS max_fare, AVG(fare) AS avg_fare, COUNT(DISTINCT carrier) AS num_carrier, SUM(passengers) AS num_passengers
FROM m_ticket_prices M1
GROUP BY origin, dest
HAVING num_carrier >=3 AND num_passengers > 10000
;",7.5,cl6968,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
6603,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"SELECT P.*,M.state, RANK()OVER(ORDER BY P.num_passenger) AS national_rank,RANK()OVER(PARTITION BY M.state ORDER BY P.num_passenger) AS state_rank
FROM passengers_per_airport P
LEFT JOIN m_airports M ON P.origin = M.airport;",4.0,cl6968,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
6604,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"DROP TABLE IF EXISTS passengers_per_airport;
CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS num_passenger
FROM m_ticket_prices
GROUP BY origin
;",1.0,cl6968,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
6605,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"--  ID# 834641, Tunga Mbia & ID# 834639 Sky Gaven both have MemberSince: 2006-01-19 00:00:00, but LastUpdate:2006-01-18 00:00:00, which causes 2006-01-18 total_active_users: -2.

SELECT S.date, S.cumulative_sum_users - I.cumulative_sum_inactive AS total_active_users 
FROM SingUpsAsOf S
JOIN InactiveAsOf I ON S.date = I.date;",4.0,cl6968,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
6606,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS InactiveAsOf;
CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT date , num_inactive, SUM(num_inactive) OVER(ORDER BY date) AS cumulative_sum_inactive
FROM InactiveOn;",2.0,cl6968,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
6607,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS SingUpsAsOf;
CREATE TEMPORARY TABLE  SingUpsAsOf AS
SELECT date , num_signup, SUM(num_signup) OVER(ORDER BY date) AS cumulative_sum_users
FROM SignUpsOn;",2.0,cl6968,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
6608,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"DROP TABLE IF EXISTS InactiveOn;
CREATE TEMPORARY TABLE  InactiveOn AS
SELECT Date(LastUpdate) AS date, Count(DISTINCT ProfileID) AS num_inactive
FROM Profiles
GROUP BY date
;",1.0,cl6968,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
6609,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOn AS
SELECT Date(MemberSince) AS date, Count(DISTINCT ProfileID) AS num_signup
FROM Profiles
GROUP BY date
;",1.0,cl6968,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
6610,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"DROP TABLE IF EXISTS mutual_name;
CREATE TEMPORARY TABLE mutual_name AS
SELECT * 
FROM eligible_names E
WHERE E.first_name  IN (SELECT first_name FROM male_names) AND E.first_name  IN (SELECT first_name FROM female_names)
;

DROP TABLE IF EXISTS pivot;
CREATE TEMPORARY TABLE pivot AS
SELECT T.first_name, SUM(CASE WHEN T.gender = 'M' THEN T.frequency  ELSE 0 END) AS male_freq, SUM(CASE WHEN T.gender = 'F' THEN T.frequency ELSE 0 END) AS female_freq
FROM
(SELECT DISTINCT M.first_name, A.gender, COUNT(A.id)OVER(PARTITION BY A.first_name,A.gender ) AS frequency
FROM mutual_name M
JOIN actors A ON M.first_name = A.first_name) T
GROUP BY T.first_name
;

SELECT *, ABS(log( male_freq / female_freq )) AS ambiguous
FROM pivot
ORDER BY ambiguous 
;",2.0,cl6968,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6611,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT E.first_name AS eligible_first_name, COUNT(A.id) AS frequencies
FROM eligible_names E
JOIN actors A ON E.first_name = A.first_name
WHERE E.first_name NOT IN (SELECT first_name FROM male_names) AND E.first_name IN (SELECT first_name FROM female_names)
GROUP BY eligible_first_name 
ORDER BY frequencies DESC
;",1.0,cl6968,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6612,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT * 
FROM actors 
WHERE GENDER = 'M'
;
DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS
SELECT * 
FROM actors 
WHERE GENDER = 'F'
;
SELECT E.first_name AS eligible_first_name, COUNT(A.id) AS frequencies 
FROM eligible_names E
JOIN actors A ON E.first_name = A.first_name
WHERE E.first_name IN (SELECT first_name FROM male_names) AND E.first_name NOT IN (SELECT first_name FROM female_names)
GROUP BY eligible_first_name 
ORDER BY frequencies DESC
;",1.0,cl6968,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6613,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
	SELECT A.first_name, COUNT(DISTINCT A.id) AS cnt_actor
	FROM actors A
	WHERE A.first_name NOT LIKE '%(%' AND  A.first_name NOT LIKE '%)%'  AND  A.first_name NOT LIKE '%.%' 
	GROUP BY A.first_name
    HAVING cnt_actor >= 50
	ORDER BY cnt_actor
;",1.0,cl6968,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6614,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id,  T.album_id, T.track_id, T.track_name, MIN(TP.played_on) AS min_played_on, MAX(TP.played_on) AS max_played_on
FROM track T
LEFT JOIN tracks_played TP ON TP.track_id = T.track_id AND TP.artist_id = T.artist_id AND TP.album_id = T.album_id
GROUP BY T.artist_id,  T.album_id, T.track_id;",1.0,cl6968,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6615,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A1.artist_id, A1.artist_name, COUNT(album_id) AS num_albums
FROM artist A1
JOIN album A2 ON A1.artist_id = A2.artist_id
GROUP BY A1.artist_id;",1.0,cl6968,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6616,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played, A.artist_id, A.artist_name, COUNT(DISTINCT TP.user_id) AS users, SUM(T.time) AS total_time, COUNT(TP.track_id) AS total_tracks
FROM tracks_played TP
JOIN artist A ON TP.artist_id = A.artist_id 
JOIN track T ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",1.0,cl6968,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6617,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.played_on) AS tracks_played, SUM(T.time) AS total_time
FROM users U
LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
LEFT JOIN track T ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
GROUP BY U.user_id;",1.0,cl6968,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6618,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT A.album_id, A. artist_id,  SUM(T.time) AS sum_length
FROM album A
LEFT JOIN track T ON A.album_id = T.album_id AND A.artist_id = T.artist_id
GROUP BY A.album_id, A. artist_id
HAVING sum_length > 60
ORDER BY sum_length;",1.0,cl6968,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6619,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT A.album_id, A. artist_id, COUNT(T.track_id) AS cnt_tracks, SUM(T.time) AS sum_length
FROM album A
LEFT JOIN track T ON A.album_id = T.album_id AND A.artist_id = T.artist_id
GROUP BY A.album_id, A. artist_id;",1.0,cl6968,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6620,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT A1.artist_id, COUNT(A2.album_id) AS cnt_albums
FROM artist A1
JOIN album A2 ON A1.artist_id = A2.artist_id
GROUP BY A1.artist_id;",1.0,cl6968,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6621,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, ROUND(STD(time),6) AS std_time
FROM track;",1.0,cl6968,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6622,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(DISTINCT track_id, album_id, artist_id)
FROM track;",1.0,cl6968,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6623,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(DISTINCT artist_id)
FROM artist;",1.0,cl6968,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6631,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
WHERE played_on IS NULL;",1.0,cl6968,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6632,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played TP
INNER JOIN track T ON T.artist_id = TP.artist_id AND T.album_id = TP.album_id AND T.track_id = TP.track_id
INNER JOIN users U ON U.user_id = TP.user_id
INNER JOIN album A ON A.album_id = TP.album_id AND A.artist_id = TP.artist_id
ORDER BY U.user_id, TP.played_on;
",1.0,cl6968,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6633,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, A2.artist_id, A1.album_id, T.time
FROM track T
INNER JOIN album A1 ON T.artist_id = A1.artist_id AND T.album_id = A1.album_id
INNER JOIN artist A2 ON T.artist_id = A2.artist_id 
WHERE artist_name = 'The Stone Roses'
ORDER BY time;",1.0,cl6968,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6634,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A2.artist_name, A1.album_name
FROM track T
INNER JOIN album A1 ON T.artist_id = A1.artist_id AND T.album_id = A1.album_id
INNER JOIN artist A2 ON T.artist_id = A2.artist_id ;",1.0,cl6968,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6635,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT  T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM album A
INNER JOIN track T
ON A.album_id = T.album_id and A.artist_id = T.artist_id
WHERE album_name= 'Second Coming';",1.0,cl6968,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6636,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT A2.*, A1.*
FROM album A1
INNER JOIN artist A2
ON A1.artist_id = A2.artist_id
WHERE artist_name= 'New Order';",1.0,cl6968,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6637,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,SELECT  * FROM track WHERE track_name LIKE '%love%';,1.0,cl6968,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6638,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT  * FROM track WHERE artist_id = 1 or artist_id = 3 or artist_id = 5;
SELECT  * FROM track WHERE artist_id IN (1,3,5);",1.0,cl6968,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6639,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,SELECT  * FROM album WHERE album_name > 'F' AND album_name < 'S' ORDER BY album_name; ,0.5,cl6968,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
6640,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,SELECT  * FROM track WHERE track_name < 'M' ORDER BY track_name ;    ,1.0,cl6968,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6641,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,SELECT  * FROM track WHERE artist_id = 3 and album_id = 2;   ,1.0,cl6968,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6642,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,SELECT  * FROM album WHERE artist_id = 4;     ,1.0,cl6968,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6643,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,SELECT * FROM artist WHERE artist_name = 'The Rolling Stones';,1.0,cl6968,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6644,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,SELECT * FROM artist WHERE artist_id = 5;,1.0,cl6968,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6645,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,SELECT * FROM track ORDER BY time LIMIT 10 ;,1.0,cl6968,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6646,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title FROM album;",1.0,cl6968,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6647,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,SELECT artist_name FROM artist ORDER BY artist_name;,1.0,cl6968,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6648,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,SELECT  * FROM track; ,1.0,cl6968,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6649,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,SELECT * FROM album;  ,1.0,cl6968,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6650,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,SELECT * FROM artist;,1.0,cl6968,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6703,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"#Q2 male only names
drop table if exists M_only;
CREATE TEMPORARY TABLE M_only AS
Select  first_name, count(first_name) from eligible_names 
where first_name not in (
	select first_name 
	from actors
    where gender='F'
)
group by first_name
order by count(first_name) desc;


#question 3 female only names
drop table if exists F_only;
CREATE TEMPORARY TABLE F_only AS
Select  first_name, count(first_name) from eligible_names 
where first_name not in (
	select first_name 
	from actors
    where gender='M'
)
group by first_name
order by count(first_name) desc;

#remove female only name from eligible name
drop table if exists remove_F_only;
CREATE TEMPORARY TABLE remove_F_only AS
select* from eligible_names  
where first_name not in (
	select first_name from F_only);
    
#remove male only name from remove_F_only
drop table if exists both_gender;
CREATE TEMPORARY TABLE both_gender AS
select * from remove_F_only
where first_name not in (
	select first_na",2.0,al8100,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6704,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Select  first_name, count(first_name) from eligible_names 
where first_name not in (
	select first_name 
	from actors
    where gender='M'
)
group by first_name
order by count(first_name) desc;
",1.0,al8100,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6705,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"Select  first_name, count(first_name) from eligible_names 
where first_name not in (
	select first_name 
	from actors
    where gender='F'
)
group by first_name
order by count(first_name) desc;

",1.0,al8100,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6706,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"drop table if exists eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
select * from actors
where first_name in (
	select first_name from actors
	where first_name not like'%.%'
        and first_name not like '%(%'
        and first_name not like '%)%'
    group by first_name
	having count(first_name)> 50);",1.0,al8100,"


Answer Key







DROP TABLE IF EXISTS eligible_names;&nbsp;
CREATE TEMPORARY TABLE eligible_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name NOT LIKE '%.%'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; AND first_name NOT LIKE '%(%'
&nbsp; &nbsp; &nbsp; &nbsp; AND first_name NOT LIKE '%)%'
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; HAVING cnt &gt;= 50
&nbsp; &nbsp; ORDER BY cnt DESC;






","DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,"The feedback from the TA was 


Answer Key







DROP TABLE IF EXISTS eligible_names;&nbsp;
CREATE TEMPORARY TABLE eligible_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name NOT LIKE '%.%'&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; AND first_name NOT LIKE '%(%'
&nbsp; &nbsp; &nbsp; &nbsp; AND first_name NOT LIKE '%)%'
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; HAVING cnt &gt;= 50
&nbsp; &nbsp; ORDER BY cnt DESC;






"
6707,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select P.artist_id, P.album_id, P.track_id, T.track_name, min(P.played_on) as min_played_on, max(P.played_on) max_played_on
 from track T left join tracks_played P on T.track_id= P.track_id AND T.album_id= P.album_id AND T.artist_id= P.artist_id
 group by P.artist_id, P.album_id, P.track_id, T.track_name;",1.0,al8100,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6708,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question," select AR.artist_id, AR.artist_name, count(album_id)
 from artist AR inner join album Al on AR.artist_id=Al.artist_id
 group by artist_id, artist_name;",1.0,al8100,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6709,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(P.played_on) as DATE, AR.artist_name, AR.artist_id
,count(Distinct user_id),sum(T.time), count(distinct P.track_id)
 from tracks_played P inner join artist AR on P.artist_id=AR.artist_id
 inner join track T on P.track_id = T.track_id and P.artist_id = T.artist_id and P.album_id = T.album_id
 group by DATE, AR.artist_name, AR.artist_id
 order by DATE, AR.artist_id;",1.0,al8100,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6710,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question," select U.user_id, count(P.track_id) as tracks_played, sum( T.time)
from users U left join tracks_played as P  on U.user_id=P.user_id
left join track T on P.track_id = T.track_id and P.artist_id = T.artist_id and P.album_id = T.album_id
group by U.user_id
order by user_id;",1.0,al8100,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6711,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id
, sum(time) as total_time
from track
group by album_id
having total_time>60;",0.8,al8100,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60","SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,"The feedback from the TA was SELECT artist_id, album_id, SUM(time) AS total_time
FROM&nbsp;track
GROUP&nbsp;BY&nbsp;artist_id,&nbsp;album_id
HAVING&nbsp;SUM(time)&nbsp;&gt;&nbsp;60"
6712,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id
, count(track_id) as num_track
, sum(time) as total_time
from track
group by album_id;",0.8,al8100,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
6713,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_id)as cnt_albums
from album										   
group by artist_id;",1.0,al8100,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6714,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select AVG(time) as avg_time, STDDEV(time) as std_time
 from track;",1.0,al8100,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6715,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id)
 from track;",1.0,al8100,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6716,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count( artist_id)
from artist;",1.0,al8100,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6732,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
    from users U left join tracks_played P on U.user_id =P. user_id
    where P.played_on is null ;",1.0,al8100,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6733,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"Select U.user_id,U.first_name, U.last_name, A.album_name,T.track_name, P.played_on
from tracks_played P inner join track T on T.track_id= P.track_id
	inner join users U on U.user_id =P. user_id
    inner join album A on A.artist_id=P.artist_id;",1.0,al8100,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6734,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Select T. track_id, T.track_name, T.artist_id, T. album_id, T.time
from track T inner join artist A on A.artist_id= T.artist_id
where A.artist_name='The Stone Roses'
order by T.time;",1.0,al8100,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6735,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"Select T.track_name, A. artist_name, AB. album_name
from track T inner join artist A on A.artist_id= T.artist_id
	inner join album AB on AB.artist_id= T.artist_id;",0.7,al8100,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
6736,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"Select T. track_id, T.track_name, T.artist_id, T. album_id, T.time
	from album AB
	inner join track T on AB.artist_id= T.artist_id
Where AB. album_name='Second Coming';",1.0,al8100,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6737,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist A inner join album AB on A.artist_id= AB.artist_id
Where artist_name = 'New Order';",1.0,al8100,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6745,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"Select * 
from track
where track_name like '%love%';",1.0,al8100,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6746,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR Boolean condition :
Select * 
from track
where artist_id=1 or artist_id=3 or artist_id=5;


IN operation :
Select * 
from track
where artist_id in (1,3,5);",1.0,al8100,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6747,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select*
from album
where album_name>'E' and album_name<'S'
order by album_name;",0.8,al8100,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
6748,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name<'M'
order by track_name;",1.0,al8100,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6749,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from track
where artist_id =3 AND album_id=2;",1.0,al8100,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6750,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"Select *
from album
where artist_id=4;",1.0,al8100,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6751,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name = 'The Rolling Stones';",1.0,al8100,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6752,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select *
from artist
where artist_id=5;",1.0,al8100,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6753,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"
Select *
from track
order by time
limit 10;
",1.0,al8100,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6754,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"Select artist_id, album_name as album_title
from album;",1.0,al8100,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6755,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"Select artist_name
from artist
order by artist_name;",1.0,al8100,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6756,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"Select *
from track;",1.0,al8100,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6757,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"Select *
from album;",1.0,al8100,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6758,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"Select *
from artist;",1.0,al8100,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6817,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",2,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"
SELECT
  e.first_name,
  m.frequency AS male_freq,
  f.frequency AS female_freq,
  ROUND(ABS(LOG(m.frequency / f.frequency)),2) AS ambiguity_score
FROM eligible_names e
LEFT JOIN
  (SELECT first_name, COUNT(*) AS frequency
  FROM actors
  WHERE gender = 'M'
  GROUP BY
    first_name) m ON e.first_name = m.first_name

LEFT JOIN
  (SELECT first_name, COUNT(*) AS frequency
  FROM actors
  WHERE gender = 'F'
  GROUP BY
    first_name) f ON e.first_name = f.first_name;",1.6,av3341,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6818,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",2,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TEMPORARY TABLE IF EXISTS female_freq;
CREATE TEMPORARY TABLE female_freq AS
SELECT DISTINCT first_name, name_freq
FROM eligible_names
WHERE first_name NOT IN (
  SELECT DISTINCT first_name
  FROM actors
  WHERE gender = 'M'
)
GROUP BY first_name, name_freq;

SELECT *
FROM female_freq
ORDER BY name_freq DESC;",0.8,av3341,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6819,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",2,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TEMPORARY TABLE IF EXISTS male_freq;
CREATE TEMPORARY TABLE male_freq AS
SELECT DISTINCT first_name, name_freq
FROM eligible_names
WHERE first_name NOT IN (
  SELECT DISTINCT first_name
  FROM actors
  WHERE gender = 'F'
)
GROUP BY first_name, name_freq;

SELECT *
FROM male_freq
ORDER BY name_freq DESC;",0.8,av3341,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6820,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",2,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TABLE IF EXISTS eligible_names;
CREATE temporary table eligible_names AS
SELECT first_name, COUNT(*) as name_freq, gender
FROM actors A
	INNER JOIN roles R on R.actor_id = A.id
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%' AND first_name NOT LIKE '%)%' 
GROUP BY first_name, gender
HAVING name_freq >= 50;

SELECT *
FROM eligible_names;",0.8,av3341,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6825,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select TP.played_on, T.track_name, min(TP.played_on) as first_played, max(TP.played_on) as last_played
from track T
	inner join tracks_played TP
on T.track_id = TP.track_id
group by TP.played_on, T.track_name;",0.8,av3341,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
6826,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select artists_name, count(distinct albums_id) as num_albums
from artist
left join albums on artist_id = albums.artist_id
group by artists_name;",0.8,av3341,"SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name","#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,"The feedback from the TA was SELECT&nbsp;R.artist_id,&nbsp;R.artist_name,&nbsp;COUNT(*)&nbsp;AS&nbsp;num_albums
FROM&nbsp;artist&nbsp;R&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.artist_id&nbsp;=&nbsp;R.artist_id
GROUP&nbsp;BY&nbsp;R.artist_id,&nbsp;R.artist_name"
6827,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select TP.played_on as date_played, TP.artist_id, count(TP.user_id) as num_listeners, sum(TP.user_id) as total_listeners, A.artist_name
from tracks_played TP
	inner join artist A
on TP.artist_id = A.artist_id
group by TP.played_on, TP.artist_id, TP.user_id, A.artist_name;",0.7,av3341,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;"
6828,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select U.user_id, count(TP.track_id), count(TP.played_on)
from users U
	inner join tracks_played TP
on U.user_id = TP.user_id
group by U.user_id;

select date(played_on) as date_played, count(played_on)
from tracks_played
group by date(played_on);",0.7,av3341,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

"
6829,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"Select album_id, artist_id, count(*) as num_tracks, sum(time) as total_length
from track
group by album_id, artist_id
having sum(time) > 60;",1.0,av3341,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6830,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"Select album_id, count(*) as num_tracks, sum(time) as total_length
from track
group by album_id;",0.8,av3341,"GROUP BY artist_id, album_id","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was GROUP BY artist_id, album_id"
6831,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) as cnt_albums
from album
group by artist_id;",1.0,av3341,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6832,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_length, stddev(time) AS stddev_length
from track;",1.0,av3341,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6833,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id)
from track;
",1.0,av3341,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6834,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(artist_name)
from artist;

",1.0,av3341,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6835,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select first_name, last_name
from users UR
	left outer join tracks_played TP on UR.user_id = TP.user_id
where TP.user_id is null;  ",1.0,av3341,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6836,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.first_name, U.last_name, TP.user_id, TP.played_on, A.album_name, T.track_name
from tracks_played TP
	inner join users U
on TP.user_id = U.user_id
	inner join album A
 on TP.artist_id = A.artist_id
	inner join track T
on   T.artist_id = A.artist_id;",1.0,av3341,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6837,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select TR.track_id, TR.track_name, TR.album_id, TR.time, A.artist_id
from track TR
	inner join artist A
on TR.artist_id = A.artist_id
where artist_name = 'The Stone Roses'
order by time asc;",1.0,av3341,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6838,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select tn.track_name, an.artist_name, a.album_name
from track tn
	inner join album a
on tn.artist_id = a.artist_id and tn.album_id = a.album_id
		inner join artist an
        on an.artist_id = a.artist_id and an.artist_id = tn.artist_id;",1.0,av3341,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6839,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select *
from album as A
inner join track as T
on A.album_id = T.album_id
where album_name = 'Second Coming';

",0.7,av3341,"


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






","SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;T.*
FROM&nbsp;track&nbsp;T&nbsp;
&nbsp; &nbsp; &nbsp;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&nbsp;A.album_name&nbsp;=&nbsp;'Second&nbsp;Coming'






"
6840,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SHOW databases;

USE music;

select *
from album as AL
inner join artist as AR
on AL.artist_id = AR.artist_id
where artist_name = 'New Order';",1.0,av3341,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6841,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2A: Database Navigation,"301,292",2,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"The Music database has several entities -- artists, albums, tracks, tracks played, and users. Entities are stored in the database as tables, and have associated attributes. For example, the entity ""artist"" has the attributes ""artist id"" and ""artist name."" Foreign keys relate the entities to each other. For example, the attribute ""artist id"" is a foreign key that connects artist to album, indicating that each album is created by a unique artist.

The Artist ID relates the artist's name to an album, track, and list of tracks played. 
Album ID connects albums with artists, tracks, and tracks played. 
Track ID connects albums and artists and tracks played too. 
User ID connects users with tracks played. 

",1.0,av3341,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
6847,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name like '%Love%';",1.0,av3341,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6848,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select *
from track
where artist_id = 1 or 3 or 5;

select *
from track
where artist_id in (1, 3, 5);",0.7,av3341,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5"
6849,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name > 'E' AND album_name < 'S';",0.7,av3341,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
6850,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"Select *
from track
where track_name < 'M'
order by track_name ASC;",1.0,av3341,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6851,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"Select *
from track
where artist_id = 3 and album_id = 2;",1.0,av3341,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6852,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id = 4",1.0,av3341,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6853,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"Select *
from artist
where artist_name = 'The Rolling Stones';",1.0,av3341,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6854,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"Select *
from artist
where artist_id = 5;",1.0,av3341,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6855,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"Select track_id, track_name, artist_id, album_id, time
from track
order by time asc
limit 10;",1.0,av3341,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6856,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title
from album;",1.0,av3341,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6857,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"Select artist_name
from artist
order by artist_name ASC;",1.0,av3341,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6858,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"Select *
From track;",1.0,av3341,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6859,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"Select *
From album;",1.0,av3341,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6860,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"Select *
From artist;",1.0,av3341,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6861,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2A: Database Navigation,"301,292",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"The Music database has several entities -- artists, albums, tracks, tracks played, and users. Entities are stored in the database as tables, and have associated attributes. For example, the entity ""artist"" has the attributes ""artist id"" and ""artist name."" Foreign keys relate the entities to each other. For example, the attribute ""artist id"" is a foreign key that connects artist to album, indicating that each album is created by a unique artist. ",1.0,av3341,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
6877,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,729","Hard question. Requires use of subqueries and CASE WHEN.
We want to create groups of customers based on their total amount spent after discounts, in 2016. We will create three groups:

Low, for customers spending between 0 and 1000
Medium, for customers spending between 1000 and 5000,
High, for customers spending above 5000

The output should list the CustomerID, the CompanyName, the total amount spent before discounts, the total discount applied, and the grouping
You will need to use the results from the question &quot;Total amount spent per customer in 2016&quot; as a subquery, and then use the CASE WHEN structure to define the three groups. Do not worry about edge cases for the three groups (ie for amounts spent equal to 1000 and 5000).",Long Answer Question,"SELECT 
  CS.CustomerID, 
  CS.CompanyName, 
  CS.TotalPrice, 
  CS.TotalDiscount,
  CS.TotalSpentAfterDiscount,
  CASE 
    WHEN CS.TotalSpentAfterDiscount BETWEEN 0 AND 1000 THEN 'Low' 
    WHEN CS.TotalSpentAfterDiscount BETWEEN 1000 AND 5000 THEN 'Medium' 
    ELSE 'High' 
  END AS SpendingGroup 
FROM 
  (
    SELECT 
      C.CustomerID, 
      C.CompanyName, 
      SUM(OD.Quantity * OD.UnitPrice) AS TotalPrice, 
      SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TotalDiscount, 
      SUM(OD.Quantity * OD.UnitPrice * (1 - OD.Discount)) AS TotalSpentAfterDiscount 
    FROM 
      Customers C
      LEFT JOIN Orders O ON C.CustomerID = O.CustomerID 
      LEFT JOIN OrderDetails OD ON O.OrderID = OD.OrderID 
    WHERE 
      YEAR(O.OrderDate) = 2016 
    GROUP BY 
      C.CustomerID, C.CompanyName 
  ) AS CS
ORDER BY 
  CS.CustomerID;",10.0,qc876,,"WITH total_spent AS (
SELECT C.CustomerID, C.CompanyName
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
&#160; &#160; , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM&#160;
&#160; &#160; Customers C&#160;
&#160; &#160; LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
&#160; &#160; LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID &#160;
GROUP BY C.CustomerID
)
SELECT T.*,&#160;
&#160; &#160; CASE&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 0 AND 1000 THEN &#39;Low&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount BETWEEN 1000 AND 5000 THEN &#39;Medium&#39;&#160;
&#160; &#160; &#160; &#160; WHEN T.total_price-T.total_discount &gt;= 5000 THEN &#39;High&#39;&#160;
&#160; &#160; END AS TargetGroup
FROM total_spent T
ORDER BY T.total_price-T.total_discount",True,"['northwind', 'flights']",10.0,
6878,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,714","For each customer, we want to calculate how much they spent within 2016.
Show the:

CustomerID and CompanyName for each customer
The total price for their orders, ignoring the discount (use Quantity and UnitPrice fields in the OrderDetails table; the amount paid for each product is Quantity * UnitPrice. )&#160;
the total discount applied to the order (consider the Discount field in the OrderDetails table, together with Quantity and UnitPrice fields; the applied discount is Quantity * UnitPrice * Discount)

Limit the analysis only to orders placed in 2016.
Order the results by CustomerID.
",Long Answer Question,"SELECT 
  C.CustomerID, 
  C.CompanyName, 
  SUM(OC.Quantity * OC.UnitPrice) AS TotalPrice, 
  SUM(OC.Quantity * OC.UnitPrice * OC.Discount) AS TotalDiscount 
FROM 
  Customers C
  JOIN Orders O ON C.CustomerID = O.CustomerID 
  JOIN OrderDetails OC ON O.OrderID = OC.OrderID 
WHERE 
  YEAR(O.OrderDate) = 2016 
GROUP BY 
  C.CustomerID, C.CompanyName 
ORDER BY 
  C.CustomerID;",10.0,qc876,,"SELECT C.CustomerID, C.CompanyName
    , COALESCE(SUM(D.Quantity * D.UnitPrice ),0) AS total_price
    , COALESCE(SUM(D.Quantity * D.UnitPrice * D.Discount ),0) AS total_discount
FROM 
    Customers C 
    LEFT JOIN Orders O ON C.CustomerID = O.CustomerID AND YEAR(O.OrderDate) = 2016
    LEFT JOIN OrderDetails D ON O.OrderID = D.OrderID  
GROUP BY C.CustomerID
There is no need for the COALESCE part to get full credit.",True,"['northwind', 'flights']",10.0,
6879,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,713","For each order, show the customerID who placed the order, and list the number of products in the order, the total units in the order (each order may contain multiple units of a product as reported in the &quot;Quantity&quot; field or OrderDetails), and the total order price for all the products (using the Quantity and UnitPrice fields in the OrderDetails table; ignore the Discount field).&#160;
Sort the results by decreasing total price and display only orders where the total price is above 10,000.",Long Answer Question,"select O.OrderID, O.CustomerID,
	count(distinct P.ProductID) as num_products, 
    sum(OC.Quantity) as total_units,
    sum(OC.Quantity*OC.UnitPrice) as total_order_price 
from  Orders O
inner join OrderDetails OC on OC.OrderID = O.OrderID
inner join Products P on P.ProductID = OC.ProductID
group by O.OrderID
having total_order_price > 10000
order by total_order_price desc;",7.5,qc876,,"SELECT O.OrderID, O.CustomerID
&#160; &#160; , SUM(D.Quantity * D.UnitPrice) AS total_price
&#160; &#160; , COUNT(DISTINCT D.ProductID) AS num_products
&#160; &#160; , SUM(D.Quantity) AS total_units
FROM Orders O JOIN OrderDetails D ON O.OrderID = D.OrderID
GROUP BY O.OrderID
HAVING total_price &gt; 10000
ORDER BY total_price DESC",True,"['northwind', 'flights']",10.0,
6880,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,711","We want to identify the ship countries with the highest average freight charges. Return the top-three ship countries with the highest average freight overall, in descending order by average freight. You only need the Orders table.",Long Answer Question,"select ShipCountry, round(avg(Freight),2) as avg_Freight
from Orders
group by ShipCountry
order by avg_Freight desc
limit 3;",7.5,qc876,,"SELECT ShipCountry, ROUND(AVG(Freight),2) AS AvgFreight
FROM &#160;Orders
GROUP BY ShipCountry
ORDER BY AvgFreight DESC
LIMIT 3",True,"['northwind', 'flights']",7.5,
6881,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,710",For every customer in the database list the number of orders they have placed.,Long Answer Question,"select C.CustomerID, count(*) as cnt
from Customers C 
left join Orders O on O.CustomerID = C.CustomerID
group by C.CustomerID;",7.5,qc876,,"SELECT C.CustomerID, COUNT(O.OrderID) AS orders
FROM Customers C
&#160; &#160; &#160; &#160; &#160; &#160; LEFT JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID&#160;",True,"['northwind', 'flights']",10.0,
6882,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,708","We would like to know, for each product, the associated Supplier. Show the ProductID, ProductName, and the CompanyName of the Supplier. Sort the results by ProductID.",Long Answer Question,"select P.ProductID, P.ProductName, S.CompanyName
from Products P
inner join Suppliers S on P.SupplierID = S.SupplierID
order by P.ProductID;",5.0,qc876,,"SELECT P.ProductID, P.ProductName, S.CompanyName
FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID
ORDER BY P.ProductID",True,"['northwind', 'flights']",7.5,
6883,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,707","From the Products table, we want to see the ProductID and ProductName for those products where the ProductName includes the string &quot;queso&quot;",Long Answer Question,"select ProductID, ProductName
from Products
where ProductName like '%queso%';",5.0,qc876,,"SELECT ProductID, ProductName
FROM Products&#160;
WHERE ProductName LIKE &#39;%queso%&#39;",True,"['northwind', 'flights']",5.0,
6884,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,969,706","We would like to see just the FirstName, LastName, and HireDate of all the employees with the title of Sales Representative who are also in the United States",Long Answer Question,"use northwind;
select FirstName, LastName,HireDate
from Employees
where Title = 'Sales Representative' and Country = 'USA';",5.0,qc876,,"SELECT FirstName, LastName, HireDate
FROM Employees&#160;
WHERE Title = &#39;Sales Representative&#39; AND Country = &#39;USA&#39;",True,"['northwind', 'flights']",5.0,
6885,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,678","Using the flights.m_ticket_prices and the m_airports table, find the distinct routes (route is a distinct origin-destination pair) where the origin and the destination are part of the same state; in the output show the origin, dest, and the state of the airports.",Long Answer Question,"use flights;
SELECT DISTINCT
  T.origin,
  T.dest,
  A1.state_name
FROM
  flights.m_ticket_prices T
  JOIN flights.m_airports A1 ON T.origin = A1.airport
  JOIN flights.m_airports A2 ON T.dest = A2.airport
WHERE
  A1.state = A2.state;",7.5,qc876,,"SELECT DISTINCT T.origin, T.dest, O.state
FROM flights.m_ticket_prices T
&#160; &#160; JOIN m_airports O ON O.airport = T.origin
&#160; &#160; JOIN m_airports D ON D.airport = T.dest
WHERE O.state_name=D.state_name
ORDER BY O.state",True,"['northwind', 'flights']",7.5,
6886,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,293","Flights: For each state of the origin airport, calculate the following metrics: the number of origin airports in the state, the number of carriers operating flights that originate from the state, the total number of passengers originating from the state, and the average fare per mile. Use the m_ticket_prices and the m_airports tables to find the information that you need.&#160;
Hint: 52 rows",Long Answer Question,"SELECT
  A.state,
  COUNT(DISTINCT T.origin) AS num_origin_airports,
  COUNT(DISTINCT T.carrier) AS num_carriers,
  SUM(T.passengers) AS total_passengers,
  AVG(T.fare_per_mile) AS avg_fare_per_mile
FROM
  flights.m_ticket_prices T
  JOIN flights.m_airports A ON T.origin = A.airport
GROUP BY A.state;",7.5,qc876,,"SELECT state
&#160; &#160; , COUNT(DISTINCT T.origin) AS airports
&#160; &#160; , COUNT(DISTINCT T.carrier) AS carriers
&#160; &#160; , SUM(T.passengers) AS passengers
&#160; &#160; , AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_airports A JOIN m_ticket_prices T ON A.airport = T.origin
GROUP BY A.state",True,"['northwind', 'flights']",7.5,
6887,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,956,290","Flights: Using the table flights.m_ticket_prices, for each carrier, report the number of routes they maintain, the number of airports their flights leave from, and their average fare per mile. Report results only for carriers having more than 20,000 passengers across all their flights.
Hint: 11 rows in the outcome",Long Answer Question,"SELECT
  T.carrier,
  COUNT(DISTINCT CONCAT(T.origin, '-', T.dest)) AS num_routes,
  COUNT(DISTINCT T.origin) AS num_origin_airports,
  ROUND(AVG(T.fare_per_mile),2) AS avg_fare_per_mile
FROM
  flights.m_ticket_prices T
GROUP BY
  T.carrier
HAVING
  SUM(T.passengers) > 20000;",10.0,qc876,,"SELECT carrier, COUNT(*) AS routes, COUNT(DISTINCT origin) AS origins, AVG(fare_per_mile) AS avg_fare_per_mile
FROM m_ticket_prices
GROUP BY carrier
HAVING SUM(passengers)&gt;20000;",True,"['northwind', 'flights']",10.0,
6898,"Databases for Business Analytics, Spring'23","251,685",Final Exam,"294,358",1,"4,338,658","Use the table flights.m_ticket_prices. For each route (origin-destination pair), list the following statistics:

cheapest fare
most expensive fare
the average fare
number of carriers serving the route
total number of passengers for the route

Report results only for routes with at least 3 carriers and more than&#160; 10,000 total passengers.&#160;",Long Answer Question,"  select origin,dest,
	min(fare) as cheapest_fare,
    max(fare) as most_expensive_fare,
    round(avg(fare),2) as average_fare,
    count(distinct carrier) as num_carrier,
    sum(passengers) as total_passengers
  from m_ticket_prices
  group by origin, dest
  having num_carrier >=3 and total_passengers >10000;",7.5,qc876,,"SELECT origin, dest
&#160; &#160; , MIN(fare) AS cheapest_fare
&#160; &#160; , MAX(fare) AS max_fare
&#160; &#160; , AVG(fare) AS avg_fare
&#160; &#160; , COUNT(DISTINCT carrier) AS carriers
&#160; &#160; , SUM(passengers) AS passengers
FROM flights.m_ticket_prices
GROUP BY origin, dest
HAVING COUNT(*) &gt;= 3 &#160;AND passengers &gt; 10000
ORDER BY origin, dest;",True,"['northwind', 'flights']",7.5,
6899,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,443","Using the passengers_per_airport table from the previous question, calculate each airport&#39;s national rank&#160;and&#160;state rank&#160;in terms of departing passengers. The m_airports table contains the state of each airport. (Note: The number 1 airport nationally will have the most passengers nationwide, while the number 1 per state will have the most passengers within the state.)",Long Answer Question,"select P.*, M.state,
	rank() over (order by total_passengers desc) as national_rank,
    rank() over (partition by state order by total_passengers desc) as state_rank
from passengers_per_airport P
join m_airports M on M.airport = P.origin
order by national_rank,state_rank;",4.0,qc876,,"SELECT origin, State, total_passengers
&#160; &#160; , RANK() OVER (ORDER BY total_passengers DESC) AS national_rank
&#160; &#160; , RANK() OVER (PARTITION BY State ORDER BY total_passengers DESC) AS state_rank
FROM passengers_per_airport P
&#160; &#160; JOIN m_airports A ON P.origin = A.airport
ORDER BY national_rank&#160;",True,flights,4.0,
6900,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,442","Create the passengers_per_airport temporary table, which contains&#160; the total number of passengers departing from each airport.&#160; Use the m_ticket_prices table; we are interested in the origin and the passengers attributes.",Long Answer Question,"CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT
  origin,
  SUM(passengers) AS total_passengers
FROM
  m_ticket_prices
GROUP BY
  origin;",1.0,qc876,,"DROP TABLE IF EXISTS passengers_per_airport;

CREATE TEMPORARY TABLE passengers_per_airport AS
SELECT origin, SUM(passengers) AS total_passengers
FROM m_ticket_prices
GROUP BY origin;",True,flights,1.0,
6901,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,441","Using the SingUpsAsOf and InactiveAsOf, calculate the total_active users for each date. We define total active users as the total signups up to that date, minus the total users that have been inactive up to that date.",Long Answer Question,"select S.SignupDate,S.total_signup,I.InactiveDate,I.total_Inactive,
	S.total_signup - IFNULL(I.total_Inactive, 0) as total_active_users
from SingUpsAsOf S 
left join InactiveAsOf I on S.SignupDate = I.InactiveDate
order by S.SignupDate;",4.0,qc876,,"WITH&#160;
SingUpsAsOf AS (
&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn
),
InactiveAsOf AS (
&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;
)

SELECT MemberSince
&#160; &#160; &#160; &#160; , total_signups
&#160; &#160; &#160; &#160; , total_inactive
&#160; &#160; &#160; &#160; , total_signups-total_inactive AS total_active
FROM SingUpsAsOf S&#160;
&#160; &#160; JOIN InactiveAsOf A ON S.MemberSince=A.LastUpdate",True,flights,4.0,
6902,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,440","InactiveAsOf: Using the InactiveOn&#160;table, calculate the total number of users who are inactive as of a given date (again,&#160; up to each date in the MemberSince. Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS InactiveAsOf;
CREATE TEMPORARY TABLE InactiveAsOf AS
SELECT
  I.*,
  SUM(I.InactiveCount) OVER (ORDER BY S.SignupDate) AS total_Inactive
FROM
  SignUpsOn S
JOIN
  InactiveOn I
ON
  S.SignupDate = I.InactiveDate;
select *
from InactiveAsOf;",2.0,qc876,,"&#160; &#160; SELECT LastUpdate
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY LastUpdate) AS total_inactive
&#160; &#160; FROM InactiveOn&#160;",True,flights,2.0,
6903,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,439","SingUpsAsOf: Using the SignUpsOn table, calculate the total number of users signed up for Facebook up to each date listed in the MemberSince column. (In other words, calculate the cumulative sum of users from the SignUpsOn table.) Use a SUM() function together with a window specification.",Long Answer Question,"DROP TABLE IF EXISTS SingUpsAsOf;
CREATE TEMPORARY TABLE SingUpsAsOf AS
SELECT *,
       SUM(SignUpsCount) OVER (ORDER BY SignupDate) AS total_signup
FROM SignUpsOn;
SELECT *
FROM SingUpsAsOf;

",2.0,qc876,,"&#160; &#160; SELECT MemberSince
&#160; &#160; &#160; &#160; , SUM(cnt) OVER (ORDER BY MemberSince) AS total_signups
&#160; &#160; FROM SignUpsOn",True,flights,2.0,
6904,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,438","Setup: Create a temporary table InactiveOn, that shows the number of people that became inactive that day (using the LastUpdate attribute)",Long Answer Question,"CREATE TEMPORARY TABLE InactiveOn AS
SELECT DATE(LastUpdate) AS InactiveDate, COUNT(*) AS InactiveCount
FROM Profiles
GROUP BY InactiveDate
order by InactiveDate;",1.0,qc876,,"DROP TABLE IF EXISTS InactiveOn ;
CREATE TEMPORARY TABLE InactiveOn&#160; AS
SELECT LastUpdate, COUNT(*) AS cnt
FROM Profiles
WHERE LastUpdate IS NOT NULL
GROUP BY LastUpdate;",True,flights,1.0,
6905,"Databases for Business Analytics, Spring'23","251,685",Assignment 6: Window queries,"295,541",1,"5,168,437","Setup: Create a&#160;temporary table SignUpsOn, that shows the number of people that signed up on that day (using the MemberSince attribute)",Long Answer Question,"use facebook;

CREATE TEMPORARY TABLE SignUpsOn AS
SELECT DATE(MemberSince) AS SignupDate, COUNT(*) AS SignUpsCount
FROM Profiles
GROUP BY SignupDate
order by SignupDate;",1.0,qc876,,"DROP TABLE IF EXISTS SignUpsOn;
CREATE TEMPORARY TABLE SignUpsOnAS
SELECT MemberSince, COUNT(*) AS cnt
FROM Profiles
GROUP BY MemberSince;",True,flights,1.0,
6906,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"DROP TABLE IF EXISTS both_names;
CREATE TEMPORARY TABLE both_names AS     
select *
from eligible_names 
where first_name not in (select first_name from female_names) and first_name not in (select first_name from male_names)
; 

select B.first_name, 
	 count(case when A.gender = 'M' then 1 end) as male_freq,
        count(case when A.gender = 'F' then 1 end) as female_freq,
        abs(log(count(case when A.gender = 'M' then 1 end)/count(case when A.gender = 'F' then 1 end))) as ambiguous
from both_names B
join actors A on A.first_name = B.first_name
group by B.first_name
order by ambiguous;",2.0,qc876,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6907,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS     
select *
from eligible_names
where first_name not in (	select first_name
    from actors
    where gender = 'M');

select *
from female_names;",1.0,qc876,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6908,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS     
select *
from eligible_names
where first_name not in (	select first_name
    from actors
    where gender = 'F');

select *
from male_names;",1.0,qc876,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6909,"Databases for Business Analytics, Spring'23","251,685",Assignment 5: Subqueries,"295,406",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS 
	select first_name,count(*) as cnt
    from actors 
    where first_name not like '%.%' and first_name not like '%(%'
    group by first_name
    having cnt >= 50
    order by cnt desc;
    ",1.0,qc876,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6910,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id,T.album_id, T.track_id, T.track_name, 
	min(P.played_on) as min_played_on,
    max(P.played_on) as max_played_on
from track T
	left join tracks_played P on T.track_id = P.track_id and T.album_id = P.album_id and T.artist_id = P.artist_id
group by T.artist_id,T.album_id, T.track_id;",1.0,qc876,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6911,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select R.artist_id, R.artist_name, count(L.album_id) as num_albums
from artist R
	inner join album L on R.artist_id = L.artist_id
group by R.artist_id;",1.0,qc876,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6912,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(P.played_on) as date_played,	
    A.artist_id,
    A.artist_name,
    count(distinct P.user_id) as users,
    sum(T.time) as total_time,
    count(P.track_id) as total_tracks
from tracks_played P
	inner join track T on T.track_id = P.track_id and T.album_id = P.album_id and T.artist_id = P.artist_id
    inner join artist A on A.artist_id = P.artist_id
group by date(P.played_on),A.artist_id
order by date(P.played_on);",1.0,qc876,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6913,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select U.user_id,
	count(P.track_id) as tracks_played,
    sum(T.time) as total_time
from users U
	left join tracks_played P on U.user_id = P.user_id
    left join track T on T.track_id = P.track_id and T.album_id = P.album_id and T.artist_id = P.artist_id
group by U.user_id
order by U.user_id;",1.0,qc876,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6914,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id, artist_id, sum(time) as total_lenth
from track
group by album_id,artist_id
having total_lenth > 60;",1.0,qc876,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6915,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, artist_id,count(track_id) as cnt_tracks, sum(time) as total_lenth
from track
group by album_id,artist_id;",1.0,qc876,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6916,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_id) as cnt_albums
from album
group by artist_id;",1.0,qc876,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6917,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_tracklength,stddev(time) as dev_tracklength
from track;",1.0,qc876,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6918,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id)
from track;",1.0,qc876,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6919,"Databases for Business Analytics, Spring'23","251,685",Assignment 4: Aggregations,"295,369",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"use music;

select count(*)
from artist;",1.0,qc876,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6920,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
from users U
left outer join tracks_played P on U.user_id = P.user_id
where P.user_id is null;",1.0,qc876,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6921,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select P.user_id, U.first_name, U.last_name, L.album_name, T.track_name, P.played_on
from tracks_played P
 inner join users U on U.user_id = P.user_id
 inner join album L on L.album_id = P.album_id and P.artist_id = L.artist_id
 inner join track T on T.track_id = P.track_id and T.album_id = P.album_id and T.artist_id = P.artist_id
 limit 5000;",1.0,qc876,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6922,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select T.*
from track T
inner join artist A on A.artist_id = T.artist_id
where A.artist_name = 'The Stone Roses'
order by T.time;",1.0,qc876,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6923,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select T.track_name, A.artist_name, L.album_name
from track T
inner join album L on T.album_id = L.album_id and T.artist_id = L.artist_id
inner join artist A on A.artist_id = T.artist_id;",1.0,qc876,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6924,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select T.*
from track T
inner join album L on T.album_id = L.album_id and T.artist_id = L.artist_id
where L.album_name = 'Second Coming';",1.0,qc876,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6925,"Databases for Business Analytics, Spring'23","251,685",Assignment 3: Joins,"295,367",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist A 
inner join album L on L.artist_id = A.artist_id
where A.artist_name = 'New Order';",1.0,qc876,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6926,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"use music;
select *
from track
where track_name like '%Love%';",1.0,qc876,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6927,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"/*No.1*/
use music;
select *
from track
where artist_id = 1 or artist_id = 3 or artist_id = 5;

/*N0.2*/
use music;
select *
from track
where artist_id in (1,3,5);",1.0,qc876,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6928,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"use music;
select *
from album
where album_name >'E' and album_name < 'S' and not album_name like 'E%';",1.0,qc876,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
6929,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"use music;
select *
from track
where track_name < 'M';",1.0,qc876,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6930,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"use music;
select *
from track
where artist_id = 3 and album_id = 2;",1.0,qc876,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6931,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"/* The id of Rolling Stones from Question C.2 is 4*/

use music;
select *
from album
where artist_id = 4;",1.0,qc876,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6932,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"use music;
select *
from artist
where artist_name = 'The Rolling Stones';",1.0,qc876,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6933,"Databases for Business Analytics, Spring'23","251,685",Assignment 2C: Filtering Queries,"295,343",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"use music;
select *
from artist
where artist_id = 5;",1.0,qc876,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6934,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"use music;
select *
from track
order by time
limit 10;",1.0,qc876,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6935,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"use music;
select artist_id, album_name as album_title
from album;",1.0,qc876,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6936,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"use music;
select artist_name
from artist
order by artist_name;",1.0,qc876,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6937,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,648",Show all the tracks.,Long Answer Question,"use music;
show tables;
select *
from track;",1.0,qc876,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6938,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,647",Show all the albums.,Long Answer Question,"use music;
show tables;
select *
from album;",1.0,qc876,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6939,"Databases for Business Analytics, Spring'23","251,685",Assignment 2B: Selection Queries,"295,300",1,"5,119,646","Show all the artists.

Show all the albums.
Show all the tracks.
List all the names of the artists, without the artist ids, sorted alphabetically.
Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.
List the ten shortest tracks in terms of playing time.
",Long Answer Question,"use music;
show tables;
select *
from artist;",1.0,qc876,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6958,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select m.first_name, m.cnt_m as male_freq, f.cnt_f as female_freq, abs(log(m.cnt_m / f.cnt_f)) as corr
from male_names as m
join female_names as f
on m.first_name = f.first_name
order by corr asc;",1.6,xcc2006,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6959,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"/*female_only*/

create temporary table female_only as
select f.first_name, f.cnt_f
from (
select e.first_name, count(*) as cnt_f
from eligible_names as e
inner join actors as a
on e.first_name = a.first_name
where a.gender = 'F'
group by e.first_name ) as f
left join male_names as m
on f.first_name = m.first_name
where m.first_name is NULL
order by f.cnt_f desc;",0.8,xcc2006,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
6960,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"/*male_only*/

create temporary table male_only as
select m.first_name, m.cnt_m
from (
select e.first_name, count(*) as cnt_m
from eligible_names as e
inner join actors as a
on e.first_name = a.first_name
where a.gender = 'M'
group by e.first_name
) as m
left join female_names as f
on m.first_name = f.first_name
where f.first_name is NULL
order by m.cnt_m desc;",0.8,xcc2006,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
6961,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"/*eligible_names*/

create temporary table eligible_names as
select first_name, count(*) as cnt
from imdb.actors
where first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%'
group by first_name
having count(*) >= 50;",1.0,xcc2006,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
6962,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select t.artist_id, t.album_id, p.track_id, t.track_name, min(p.played_on) as min_played_on, max(p.played_on) as max_played_on
from music.track as t
left outer join music.tracks_played as p
on (t.artist_id = p.artist_id
and t.album_id = p.album_id
and t.track_id = p.track_id)
group by p.track_id, t.track_name, t.artist_id, t.album_id
order by t.artist_id, t.album_id, p.track_id;",1.0,xcc2006,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
6963,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select a.artist_id, a.artist_name, count(b.album_id) as num_albums
from music.artist as a
inner join music.album as b
on a.artist_id = b.artist_id
group by a.artist_id;",1.0,xcc2006,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
6964,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date_format(p.played_on,'%Y-%m-%d') as date_played, a.artist_id, a.artist_name, count(distinct p.user_id) as users, sum(t.time) as total_time, count(artist_name) as total_tracks
from tracks_played as p
inner join music.track as t
on (t.track_id = p.track_id
and t.artist_id = p.artist_id
and t.album_id = p.album_id)
inner join music.artist as a
on a.artist_id = p.artist_id
group by p.artist_id, date_played
order by date_played, a.artist_id asc;",1.0,xcc2006,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
6965,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, coalesce(p2.tracks_played,0) as tracks_played, coalesce(p2.total_time,0) as total_time
from music.users as u
left outer join (
	select p1.user_id, count(track_name) as tracks_played, sum(t.time) as total_time
	from music.track as t
	inner join (
	select u.user_id, p.artist_id, p.album_id, p.track_id
	from music.users as u
	inner join music.tracks_played as p
	on u.user_id = p.user_id
	) as p1
	on (t.artist_id = p1.artist_id
	and t.album_id = p1.album_id
	and t.track_id = p1.track_id)
	group by p1.user_id
	order by p1.user_id
       ) as p2
on u.user_id = p2.user_id;",1.0,xcc2006,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
6966,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select bum.album_id as 'Album ID', bum.artist_id as 'Artist ID', bname.sum as 'Track Sum'
from music.album as bum
left join (
	select b.album_name,count(track_name) as cnt,sum(time) as sum
    from music.album as b
    left join music.track as t
    on (b.album_id = t.album_id
    and b.artist_id = t.artist_id)
    group by b.album_name
    ) as bname 
on bum.album_name = bname.album_name
where bname.sum > 60;",1.0,xcc2006,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
6967,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select bum.album_id as 'Album ID', bum.artist_id as 'Artist ID', bname.cnt as 'Count', bname.sum as 'Total Length'
from music.album as bum
left join (
    select b.album_name,count(track_name) as cnt,sum(time) as sum
    from music.album as b
    left join music.track as t
    on (b.album_id = t.album_id
    and b.artist_id = t.artist_id)
    group by b.album_name
    ) as bname 
on bum.album_name = bname.album_name;",1.0,xcc2006,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
6968,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select a.artist_id,count(album_id) as 'cnt_albums'
from music.artist as a
inner join music.album as b
on a.artist_id = b.artist_id
group by artist_id;",1.0,xcc2006,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
6969,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as 'Average', std(time) as 'Standard Deviation' from music.track;",1.0,xcc2006,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
6970,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) as 'Number of Tracks' from music.track;,1.0,xcc2006,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
6971,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(artist_id) as 'Number of Artists' from music.artist;,1.0,xcc2006,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
6972,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select first_name, last_name
from music.users as u
left join music.tracks_played as p
on u.user_id = p.user_id
where p.played_on is null;",1.0,xcc2006,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
6973,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select p.user_id, u.first_name, u.last_name, b.album_name, t.track_name, p.played_on
from music.tracks_played as p
inner join music.users as u
on p.user_id = u.user_id
inner join music.track as t
on (p.artist_id = t.artist_id
and p.album_id = t.album_id
and p.track_id = t.track_id)
inner join music.album as b
on (p.album_id = b.album_id
and p.artist_id = b.artist_id)
order by user_id, played_on asc;",1.0,xcc2006,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
6974,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select t.track_id, t.track_name, t.artist_id, b.album_id, t.time
from music.track as t
inner join music.album as b
on (t.artist_id = b.artist_id
and t.album_id = b.album_id)
where t.artist_id = 5
order by time asc;",1.0,xcc2006,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
6975,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name, artist_name, album_name
from music.track as t
inner join music.album as b
on (t.artist_id = b.artist_id
and t.album_id = b.album_id)
inner join music.artist as a
on t.artist_id = a.artist_id;",1.0,xcc2006,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
6976,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select track_id, track_name, t.artist_id, b.album_id, time
from music.album as b
inner join music.track as t
on (b.album_id = t.album_id
and b.artist_id = t.artist_id)
where album_name = 'Second Coming';",1.0,xcc2006,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
6977,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select a.artist_id, a.artist_name, b.artist_id, b.album_id, album_name
from music.album as b
inner join music.artist as a
on b.artist_id = a.artist_id
where artist_name = 'New Order';",1.0,xcc2006,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
6978,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from music.track 
where track_name like '%love%';",1.0,xcc2006,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
6979,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select * from music.track 
where (artist_id = 1
or artist_id = 3
or artist_id = 5)
order by artist_id asc;


select * from music.track where artist_id in (1,3,5);",1.0,xcc2006,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
6980,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from music.album 
where album_name > 'e' 
and album_name < 's' 
order by album_name asc;",0.7,xcc2006,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
6981,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from music.track 
where track_name < 'm' 
order by track_name asc;",1.0,xcc2006,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
6982,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,select * from music.track where (artist_id = 3 AND album_id = 2);,1.0,xcc2006,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
6983,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,select * from music.album where artist_id = 4;,1.0,xcc2006,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
6984,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select artist_id, artist_name from music.artist where artist_name = 'The Rolling Stones';",1.0,xcc2006,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
6985,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select artist_id, artist_name from music.artist where artist_id = 5;",1.0,xcc2006,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
6986,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select track_id, track_name, artist_id, album_id, time 
from music.track 
order by time asc 
limit 10;",1.0,xcc2006,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
6987,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as 'album_title' from music.album;",1.0,xcc2006,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
6988,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name from music.artist 
order by artist_name asc;",1.0,xcc2006,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
6989,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from music.track;,1.0,xcc2006,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
6990,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,select * from music.album;,1.0,xcc2006,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
6991,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,select * from music.artist;,1.0,xcc2006,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
6998,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT en.first_name, COUNT(mn.first_name) AS male_freq, COUNT(fn.first_name) AS female_freq
FROM eligible_names en
   INNER JOIN male_names mn ON en.first_name=mn.first_name
   INNER JOIN female_names fn ON en.first_name=fn.first_name
GROUP BY en.first_name
ORDER BY ABS(log(male_freq/female_freq));




     ",1.6,ra3914,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
6999,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT *
FROM eligible_names 
WHERE first_name NOT IN( SELECT first_name FROM male_names) AND first_name IN (SELECT first_name FROM female_names)
ORDER BY cnt DESC;
",0.9,ra3914,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7000,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS 
    SELECT DISTINCT first_name 
    FROM actors 
    WHERE gender='M';
DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS 
    SELECT DISTINCT first_name 
    FROM actors 
    WHERE gender='F';

SELECT *
FROM eligible_names 
WHERE first_name NOT IN( SELECT first_name FROM female_names) AND first_name IN (SELECT first_name FROM male_names)
ORDER BY cnt DESC;


",0.9,ra3914,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7001,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS 
              SELECT DISTINCT first_name, COUNT(*) AS cnt
              FROM actors
              WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE ' %(%)% '
              GROUP BY first_name
              HAVING cnt>50
              ORDER BY cnt DESC;
    ",0.9,ra3914,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7002,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t_p.artist_id, t_p.album_id, t.track_id, t.track_name, MIN(t_p.played_on), MAX(t_p.played_on)
FROM track t
 LEFT OUTER JOIN tracks_played t_p ON t.track_id=t_p.track_id AND t.artist_id=t_p.artist_id AND  t.album_id=t_p.album_id
GROUP BY t_p.artist_id, t_p.album_id, t.track_id, t.track_name;",1.0,ra3914,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7003,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT a.artist_name, COUNT(album_id)
FROM artist a 
  INNER JOIN album al ON a.artist_id=al.artist_id
GROUP BY a.artist_name;",1.0,ra3914,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7004,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT date_format(t_p.played_on, '%Y-%m-%d') AS date_played, a.artist_id, a.artist_name, COUNT(DISTINCT t_p.user_id) AS users, SUM(t.time) AS total_time,COUNT(t_p.track_id) AS total_tracks
FROM tracks_played t_p 
   INNER JOIN track t ON t_p.artist_id=t.artist_id AND t_p.album_id=t.album_id AND t_p.track_id=t.track_id 
    INNER JOIN artist a ON t_p.artist_id=a.artist_id
 GROUP BY  t_p.artist_id, date_played
ORDER BY date_played, a.artist_id ASC;
",1.0,ra3914,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7005,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT u.user_id, COUNT(t_p.track_id) AS tracks_played, SUM(time) AS total_time
FROM users u
   LEFT OUTER JOIN tracks_played t_p ON u.user_id=t_p.user_id
   LEFT OUTER JOIN track t ON t_p.artist_id=t.artist_id AND t_p.album_id=t.album_id AND  t_p.track_id=t.track_id
GROUP BY user_id;",1.0,ra3914,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7006,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, SUM(time) AS length
FROM track
GROUP BY album_id, artist_id
HAVING SUM(time) > 60 
ORDER BY album_id;
",1.0,ra3914,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7007,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_id) AS Number_of_Tracks, SUM(time) AS total_length
FROM track
GROUP BY album_id;",1.0,ra3914,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7008,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id;
",1.0,ra3914,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7009,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, ROUND(STDDEV(time),6) AS stddev_time
FROM track;
",1.0,ra3914,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7010,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*)
FROM track;",1.0,ra3914,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7011,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*)
FROM artist;",1.0,ra3914,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7012,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT u.first_name, u.last_name
FROM users u 
   LEFT OUTER JOIN tracks_played t_p ON u.user_id=t_p.user_id
WHERE t_p.user_id IS NULL;

 ",1.0,ra3914,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7013,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT u.user_id, u.first_name, u.last_name, al.album_name, t.track_name, t_p.played_on
FROM tracks_played t_p
   INNER JOIN users u ON t_p.user_id=u.user_id
   INNER JOIN album al ON al.album_id=t_p.album_id AND al.artist_id=t_p.artist_id
   INNER JOIN track t ON t_p.album_id=t.album_id AND t_p.artist_id=t.artist_id AND t_p.track_id=t.track_id
   ORDER BY u.user_id, t_p.played_on;",1.0,ra3914,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7014,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question," SELECT t.track_id, t.track_name, t.artist_id, t.album_id, t.time 
FROM track t
  INNER JOIN album al ON t.artist_id=al.artist_id AND t.album_id=al.album_id
WHERE al.album_name = 'Second Coming'
ORDER BY t.time;",1.0,ra3914,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7015,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT t.track_name, a.artist_name, al.album_name
FROM track t
 INNER JOIN album al ON t.artist_id=al.artist_id AND t.album_id=al.album_id
 INNER JOIN artist a ON t.artist_id=a.artist_id;",1.0,ra3914,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7016,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT t.track_id, t.track_name, t.artist_id, t.album_id, t.time 
FROM track t
  INNER JOIN album al ON t.artist_id=al.artist_id AND t.album_id=al.album_id
WHERE al.album_name = 'Second Coming';",1.0,ra3914,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7017,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"USE music;
SELECT *
FROM artist A
  INNER JOIN album AL
  ON A.artist_id=AL.artist_id
WHERE A.artist_name='New Order';",1.0,ra3914,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7018,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE ""%love%""; ",0.9,ra3914,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7019,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Version 1:

SELECT *
FROM track
WHERE artist_id = 1 OR artist_id=3 OR artist_id=5;


Version 2:

SELECT *
FROM track
WHERE artist_id IN (1,3,5);",0.9,ra3914,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7020,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name> 'E' AND album_name<'S'
ORDER BY album_name;",0.9,ra3914,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
7021,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M'
ORDER BY track_name;",0.9,ra3914,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7022,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id=3 AND album_id=2;",0.9,ra3914,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7023,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id=4;",0.9,ra3914,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7024,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;
SELECT *
FROM artist
WHERE artist_name='The Rolling Stones';",0.9,ra3914,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7025,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;
SELECT *
FROM artist
WHERE artist_id=5;",0.9,ra3914,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7026,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time
LIMIT 10;",0.9,ra3914,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7027,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_name AS album_title, artist_id
FROM album;",0.9,ra3914,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7028,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"USE music;
SELECT artist_name
FROM artist
ORDER BY artist_name;",0.9,ra3914,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7029,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",0.9,ra3914,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7030,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",0.9,ra3914,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7031,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;
SELECT *
FROM artist;",0.9,ra3914,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7084,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names_1 AS
SELECT first_name, gender
FROM actors
WHERE first_name NOT LIKE '%.%' 
  AND first_name NOT LIKE '%.'
  AND first_name NOT LIKE '%(%)%';

CREATE TEMPORARY TABLE eligible_names_2 AS
SELECT first_name, COUNT(*) AS cnt
FROM eligible_names_1
GROUP BY first_name
HAVING COUNT(first_name)>50;

CREATE TEMPORARY TABLE eligible_names AS
SELECT A.first_name, A.gender
FROM eligible_names_1 A
	INNER JOIN eligible_names_2 B ON A.first_name = B.first_name;

SELECT first_name, gender, COUNT(*) AS cnt, ABS(LOG(COUNT(*))) AS log_cnt
FROM eligible_names
GROUP BY first_name,gender
ORDER BY log_cnt;",1.4,kn2382,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7085,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
SELECT DISTINCT first_name, COUNT(*)AS cnt
FROM actors
WHERE first_name NOT IN (
	SELECT DISTINCT first_name FROM actors
    WHERE gender ='M'
    )
GROUP BY first_name
ORDER BY cnt DESC;
",0.7,kn2382,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7086,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT DISTINCT first_name, COUNT(*)AS cnt
FROM actors
WHERE first_name NOT IN (
	SELECT DISTINCT first_name FROM actors
    WHERE gender ='F'
    )
GROUP BY first_name
ORDER BY cnt DESC;",0.7,kn2382,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7087,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE first_name NOT LIKE '%.%' 
  AND first_name NOT LIKE '%.'
  AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING COUNT(first_name) > 50;",1.0,kn2382,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7088,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id,T.track_name, MIN(P.played_on) AS min_played_on, MAX(P.played_on) AS max_played_on
FROM track T
	LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id;",1.0,kn2382,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7089,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, artist_name, COUNT(AB.album_id) AS num_albums
FROM artist A 
	INNER JOIN album AB on A.artist_id = AB.artist_id
GROUP BY A.artist_id, A.artist_name;",1.0,kn2382,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7090,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(P.played_on) AS date_played, P.artist_id, A.artist_name, COUNT(DISTINCT P.user_id) AS user, SUM(T.time) AS total_time, SUM(T.album_id AND T.artist_id) AS total_tracks
FROM tracks_played P
	INNER JOIN artist A ON P.artist_id = A.artist_id
    INNER JOIN users U ON P.user_id = U.user_id
    INNER JOIN track T ON P.track_id = T.track_id AND P.album_id=T.album_id AND T.artist_id = P.artist_id
GROUP BY date_played, P.artist_id, A.artist_name
ORDER BY date_played;",1.0,kn2382,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7091,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(P.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
	LEFT JOIN tracks_played P ON U.user_id = P.user_id
    LEFT JOIN track T ON P.track_id = T.track_id AND P.album_id=T.album_id AND T.artist_id = P.artist_id
GROUP BY U.user_id;",1.0,kn2382,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7092,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT T.artist_id, T.album_id, COUNT(track_id) AS num_tracks, SUM(time) AS total_length
FROM track T 
	INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
GROUP BY T.artist_id, T.album_id
HAVING total_length > 60;",1.0,kn2382,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7093,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT T.artist_id, T.album_id, COUNT(track_id) AS num_tracks, SUM(time) AS total_length
FROM track T 
	INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
GROUP BY T.artist_id, T.album_id;",1.0,kn2382,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7094,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(artist_id) AS cnt_albums
FROM album
GROUP BY artist_id;",1.0,kn2382,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7095,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, ROUND(STDDEV(time),6) AS std_time
FROM track;",1.0,kn2382,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7096,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track;",1.0,kn2382,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7097,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS num_artists
FROM artist;",1.0,kn2382,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7121,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
	LEFT JOIN tracks_played TP ON U.user_id = TP.user_id
WHERE TP.track_id IS NULL;",1.0,kn2382,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7122,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played TP
	INNER JOIN users U ON U.user_id = TP.user_id
    INNER JOIN album A ON TP.album_id = A.album_id AND TP.artist_id = A.artist_id
    INNER JOIN track T ON TP.artist_id = T.artist_id AND TP.album_id = T.album_id AND TP.track_id = T.track_id
ORDER BY U.user_id;",1.0,kn2382,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7123,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT TR.track_id, TR.track_name, TR.artist_id, TR.album_id, TR.time
FROM track TR
	INNER JOIN artist AR ON TR.artist_id = AR.artist_id
WHERE AR.artist_name = 'The Stone Roses'
ORDER BY TR.time;",1.0,kn2382,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7124,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT TR.track_name, AR.artist_name, AL.album_name
FROM track TR
	INNER JOIN artist AR ON TR.artist_id = AR.artist_id
	INNER JOIN album AL ON AL.album_id = TR.album_id AND AL.artist_id = TR.artist_id;",1.0,kn2382,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7125,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT TR.track_id, TR.track_name, TR.artist_id, TR.album_id, TR.time
FROM track TR
	INNER JOIN album AL ON TR.artist_id = AL.artist_id
WHERE AL.album_name = 'Second Coming';",1.0,kn2382,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7126,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT *
FROM artist AR
	INNER JOIN album AL on AR.artist_id=AL.artist_id
WHERE AR.artist_name = 'New Order';",1.0,kn2382,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7134,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%love%';",1.0,kn2382,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7135,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT *
FROM track
WHERE artist_id IN ('1','3','5');",1.0,kn2382,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7136,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name>'F%' AND album_name<'S%';",1.0,kn2382,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
7137,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M%';",1.0,kn2382,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7138,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3;

SELECT *
FROM album
WHERE artist_id = 2;",0.7,kn2382,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=3&nbsp;and&nbsp;album_id&nbsp;=2&nbsp;","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=3&nbsp;and&nbsp;album_id&nbsp;=2&nbsp;"
7139,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4;",1.0,kn2382,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7140,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name ='The Rolling Stones';",1.0,kn2382,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7141,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5;",1.0,kn2382,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7142,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time LIMIT 10;",1.0,kn2382,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7143,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;",1.0,kn2382,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7144,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT *
FROM artist
ORDER BY artist_name;",1.0,kn2382,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7145,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM track;",1.0,kn2382,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7146,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,kn2382,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7147,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT *
FROM artist;",1.0,kn2382,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7183,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE eligible_male_names 
    AS select first_name, count(*) 
    AS cnt_male, count(*)/69293 
    AS perc_male
FROM actors
WHERE gender = 'M' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING cnt_male > 50
ORDER BY cnt_male DESC;

CREATE TEMPORARY TABLE eligible_female_names AS
    SELECT first_name, count(*) 
    AS cnt_female, count(*)/44490 
    AS perc_female
FROM actors
WHERE gender = 'F' AND first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING cnt_female > 50
ORDER BY cnt_female DESC;

SELECT* FROM eligible_male_names;

SELECT* FROM eligible_female_names;

SELECT* FROM eligible_male_names EM JOIN eligible_female_names EF 
ON EM.first_name = EF.first_name;
 
SELECT EM.first_name, cnt_male, cnt_female, 
    perc_male, perc_female,
    ABS(LOG(perc_male/perc_female)) 
    AS log_odds
FROM eligible_male_names EM JOIN eligible_female_names EF 
    ON EM.first_name ",1.6,xh746,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7184,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE gender = 'F'
	AND first_name NOT IN (
	SELECT first_name FROM actors WHERE gender = 'M'
	)
GROUP BY first_name
ORDER BY cnt DESC;

CREATE TEMPORARY TABLE male_names AS
	SELECT DISTINCT first_name FROM actors where gender = 'M';
    
SELECT DISTINCT first_name
    FROM actors
    WHERE gender = 'F'
    GROUP BY first_name
    ORDER BY count(*) DESC;
    
    SELECT first_name, count(*) AS cnt, count(*)/44490 AS perc_female
    FROM actors
    WHERE gender = 'F'
		AND first_name NOT IN (
		SELECT first_name FROM male_names
	        )
    GROUP BY first_name
    HAVING cnt > 50
    ORDER BY cnt DESC;
",0.8,xh746,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7185,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS cnt
FROM actors
WHERE gender = 'M'
	AND first_name NOT IN (
	SELECT first_name FROM actors WHERE gender = 'F'
	)
GROUP BY first_name
ORDER BY cnt DESC;

CREATE TEMPORARY TABLE female_names AS
	SELECT DISTINCT first_name FROM actors where gender = 'F';
    
SELECT DISTINCT first_name
    FROM actors
    WHERE gender = 'M'
    GROUP BY first_name
    ORDER BY count(*) DESC;
    
    SELECT first_name, count(*) AS cnt, count(*)/69293 
    AS perc_male
    FROM actors
    WHERE gender = 'M'
		AND first_name NOT IN (
		SELECT first_name FROM female_names
	)
    GROUP BY first_name
    HAVING cnt > 50
    ORDER BY cnt DESC;
",0.8,xh746,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7186,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"SELECT first_name, gender,
COUNT(*) AS num_actors
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name, gender
HAVING num_actors >= 50
ORDER BY count(*);",1.0,xh746,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7187,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select A.artist_id, A.album_id, A.track_id, B.track_name, min(A.played_on) as min_played_on, max(A.played_on) as max_played_on
from tracks_played A
right outer join track B
on A.artist_id = B. artist_id and A.album_id = B.album_id and A.track_id = B.track_id
group by A.artist_id, A.album_id, A.track_id, B.track_name
order by A.artist_id;",1.0,xh746,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7188,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select A.artist_id, B.artist_name, count(album_id) as num_albums
from album A
inner join artist B on A.artist_id = B.artist_id
group by A.artist_id
order by A.artist_id;",1.0,xh746,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7189,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(A.played_on) as date_played, A.artist_id, C.artist_name, count(user_id) as users, sum(time) as total_time, count(B.track_id) as total_tracks
from tracks_played A
inner join track B on A.artist_id = B.artist_id and A.album_id = B.album_id and A.track_id = B.track_id
inner join artist C on A.artist_id = C.artist_id
group by date_played, A.artist_id, C.artist_name
order by date_played;",1.0,xh746,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7190,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select A.user_id, count(*) as num_tracks, sum(time) as total_time
from tracks_played A
left outer join track B
on A.artist_id = B.artist_id and A.album_id = B.album_id and A.track_id = B.track_id
group by A.user_id
having total_time =0 or total_time !=0
order by A.user_id;",0.8,xh746,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
7191,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id, artist_id, sum(time) as total_length
from track
group by album_id, artist_id
having total_length > 60;",1.0,xh746,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7192,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, count(*) as num_tracks, sum(time) as total_length
from track
group by album_id;",0.8,xh746,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
7193,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) as num_albums
from album
group by artist_id;",1.0,xh746,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7194,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time)
from track;",1.0,xh746,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7195,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(*)
from track;",1.0,xh746,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7196,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(*)
from artist;",1.0,xh746,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7197,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select U.first_name, U.last_name
from users U
left outer join tracks_played P on U.user_id = P.user_id
where P.user_id is null;
",1.0,xh746,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7198,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.first_name, U.last_name, U.user_id, A.album_name, K.track_name, P.played_on
from tracks_played P
inner join users U on P.user_id = U.user_id
inner join album A on A.artist_id = P.artist_id and A.album_id = P.album_id
inner join track K on P.album_id = K.album_id and P.artist_id = K.artist_id and P.track_id = K.track_id;
",1.0,xh746,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7199,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select *
from track K
inner join artist T on K.artist_id = T.artist_id
where T.artist_name = 'The Stone Roses'
order by K.time;",1.0,xh746,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7200,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select K.track_name, A.album_name, T.artist_name
from track K
inner join album A on A.artist_id = K.artist_id and A.album_id = K.album_id
inner join artist T on K.artist_id = T.artist_id;",1.0,xh746,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7201,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select*
from album A
inner join track K on A.album_id = K.album_id and A.artist_id = K.artist_id
where A.album_name = 'Second Coming';",1.0,xh746,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7202,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select*
from album A
inner join artist T on A.artist_id = T.artist_id
where T.artist_name = 'New Order';",1.0,xh746,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7227,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select *
from track
order by time 
limit 10;",1.0,xh746,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7228,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select album_id, album_name as album_title
from album;",1.0,xh746,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7229,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name;",1.0,xh746,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7230,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select *
from track;",1.0,xh746,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7231,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select *
from album;",1.0,xh746,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7232,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;

select *
from artist;",1.0,xh746,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7233,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name like '%love%';",1.0,xh746,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7234,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select *
from track
where artist_id = 1 or artist_id = 3 or artist_id = 5;


select *
from track
where artist_id in (1, 3, 5);",1.0,xh746,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7235,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
from album
where album_name >= 'F%' and album_name < 'S%';",1.0,xh746,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
7236,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name < 'M%'; 


(does not include M)",1.0,xh746,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7237,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from track
where artist_id = 3 and album_id = 2;",1.0,xh746,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7238,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id = 4;",1.0,xh746,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7239,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name = 'The Rolling Stones';",1.0,xh746,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7240,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select *
from artist
where artist_id = 5;",1.0,xh746,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7259,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"CREATE TEMPORARY TABLE ambi_name AS
select DISTINCT first_name
FROM eligible_names
where first_name IN 
(select first_name FROM male_names
GROUP by first_name) AND first_name IN 
(select first_name FROM female_names
GROUP by first_name);

select A.first_name, M.cnt as male_freq, F.cnt as female_freq,
abs (log (M.cnt/F.cnt)) as ambiguous_rank
FROM ambi_name as A
INNER JOIN male_names as M
ON A.first_name = M.first_name
INNER JOIN female_names as F
ON A.first_name = F.first_name
ORDER by ambiguous_rank;",1.6,bw2581,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7260,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
select DISTINCT first_name, count(*) AS cnt
FROM actors
WHERE gender = 'F'
GROUP BY first_name
order by count(*) DESC;

CREATE TEMPORARY TABLE male_names AS
select DISTINCT first_name, count(*) AS cnt
FROM actors
WHERE gender = 'M'
GROUP BY first_name
order by count(*) DESC;

select E.first_name, E.cnt
FROM eligible_names as E
INNER JOIN female_names as F
ON E.first_name = F.first_name
where F.first_name NOT IN (
select first_name FROM male_names
GROUP by first_name);",0.7,bw2581,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7261,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
select DISTINCT first_name, count(*) AS cnt
FROM actors
WHERE gender = 'F'
GROUP BY first_name
order by count(*) DESC;

CREATE TEMPORARY TABLE male_names AS
select DISTINCT first_name, count(*) AS cnt
FROM actors
WHERE gender = 'M'
GROUP BY first_name
order by count(*) DESC;

select E.first_name, E.cnt
FROM eligible_names as E
INNER JOIN male_names as M
ON E.first_name = M.first_name
where M.first_name NOT IN (
select first_name FROM female_names
GROUP by first_name);",0.8,bw2581,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7262,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"USE imdb;
CREATE TEMPORARY TABLE eligible_names AS
select Distinct first_name, count(*) AS cnt 
From actors
where first_name NOT LIKE '% (%' AND
first_name NOT LIKE '%.%' 
group by first_name
Having cnt >50;",1.0,bw2581,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7263,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"show databases;
USE music;
select T.artist_id,
T.album_id, T.track_id, T.track_name, 
min(P.played_on) as min_played_on,
max(P.played_on) as max_played_on
FROM track as T
LEFT OUTER JOIN tracks_played as P
on T.artist_id = P.artist_id and T.album_id = P.album_id and T.track_id = P.track_id
Group by T.artist_id, T.album_id, T.track_id;",1.0,bw2581,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7264,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"show databases;
USE music;
select A.artist_id, A.artist_name, count(album_id) as num_albums
FROM artist as A
INNER JOIN album as B
on A.artist_id = B.artist_id
Group by A.artist_id;",1.0,bw2581,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7265,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"show databases;
USE music;
select date(P.played_on) as date_played, 
A.artist_id, A.artist_name, 
count(distinct P.user_id) as users, 
sum(T.time) as total_time,
count(T.track_id) as total_tracks
FROM tracks_played as P
LEFT OUTER JOIN artist as A
on P.artist_id = A.artist_id
LEFT OUTER JOIN track as T
on P.artist_id = T.artist_id and P.album_id = T.album_id and P.track_id = T.track_id
Group by date_played, A.artist_id
order BY date_played;",1.0,bw2581,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7266,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"show databases;
USE music;
select U.user_id, count(P.played_on) as tracks_played, sum(T.time) as total_time
From users as U
LEFT OUTER JOIN tracks_played as P
on U.user_id = P.user_id
LEFT OUTER JOIN track as T
on P.artist_id = T.artist_id and P.album_id = T.album_id and P.track_id = T.track_id
GROUP by U.user_id;",1.0,bw2581,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7267,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"show databases;
USE music;
select A.album_id, A.artist_id
FROM album as A
LEFT OUTER JOIN track as T
on A.album_id = T.album_id and A.artist_id = T.artist_id
Group by A.artist_id, A.album_id
Having sum(T.time) > 60;",1.0,bw2581,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7268,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"show databases;
USE music;
select A.album_id, A.artist_id, sum(T.time) as total_length
FROM album as A
LEFT OUTER JOIN track as T
on A.album_id = T.album_id and A.artist_id = T.artist_id
Group by A.artist_id, A.album_id;",1.0,bw2581,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7269,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"show databases;
USE music;
select artist_id, COUNT(*) AS cnt_albums
FROM album
group by artist_id;",1.0,bw2581,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7270,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"show databases;
USE music;
select round(AVG(Time),6) as avg_time, round(STDDEV(Time),6) as std_time
FROM track;",1.0,bw2581,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7271,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"show databases;
USE music;
select count(*)
FROM track;",1.0,bw2581,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7272,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"show databases;
USE music;
select count(*)
FROM artist;",1.0,bw2581,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7273,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"show databases;
USE music;
select U.first_name, U.last_name
FROM users as U
left outer join tracks_played as P
on U.user_id = P.user_id
WHERE track_id is NULL;



",1.0,bw2581,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7274,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"show databases;
USE music;
select U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played as P
inner join users as U
on P.user_id = U.user_id
inner join album as A
on P.album_id = A.album_id AND P.artist_id = A.artist_id
inner join track as T
on P.album_id = T.album_id AND P.artist_id = T.artist_id AND P.track_id = T.track_id
order by user_id, played_on;

",1.0,bw2581,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7275,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"show databases;
USE music;
select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track AS T
inner join artist as A
on T.artist_id = A.artist_id
where artist_name = ""The Stone Roses""
ORDER BY T.time
;

",1.0,bw2581,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7276,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"show databases;
USE music;
select T.track_name, A.artist_name, B.album_name
FROM track AS T
inner join artist as A
on T.artist_id = A.artist_id
inner join album as B
on T.album_id = B.album_id AND T.artist_id = B.artist_id
;

",1.0,bw2581,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7277,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"show databases;
USE music;
select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track AS T
inner join album as B
on T.album_id = B.album_id AND T.artist_id = B.artist_id
WHERE album_name = ""Second Coming"";",1.0,bw2581,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7278,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"show databases;
USE music;
select *
FROM artist AS A
inner join album as B
on A.artist_id = B.artist_id
WHERE artist_name = ""New Order"";",1.0,bw2581,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7279,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"show databases;
USE music;
SELECT *
FROM track
WHERE track_name LIKE ""%love%"";",1.0,bw2581,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7280,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"show databases;
USE music;
SELECT *
FROM track
WHERE artist_id = 1 or artist_id = 3 or artist_id =5;

show databases;
USE music;
SELECT *
FROM track
WHERE artist_id IN (1,3,5);",1.0,bw2581,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7281,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"show databases;
USE music;
SELECT *
FROM album
WHERE album_name BETWEEN ""F"" AND ""S"";",1.0,bw2581,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
7283,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"show databases;
USE music;
SELECT *
FROM track
WHERE artist_id = 3 AND album_id=2;",1.0,bw2581,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7284,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"show databases;
USE music;
SELECT *
FROM album
WHERE artist_id = 4;",1.0,bw2581,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7285,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"show databases;
USE music;
SELECT *
FROM artist
WHERE artist_name = ""The Rolling Stones"";",1.0,bw2581,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7286,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"show databases;
USE music;
SELECT *
FROM artist
WHERE artist_id =5;",1.0,bw2581,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7287,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"show databases;
USE music;
SELECT track_id, track_name, artist_id, album_id, time
FROM track
ORDER BY time ASC
LIMIT 10;",1.0,bw2581,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7288,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"show databases;
USE music;
SELECT artist_id, album_name AS album_title
FROM album;",1.0,bw2581,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7289,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"show databases;
USE music;
SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,bw2581,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7290,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"show databases;
USE music;
SELECT*
FROM track;",1.0,bw2581,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7291,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"show databases;
USE music;
SELECT*
FROM album;",1.0,bw2581,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7292,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"show databases;
USE music;
SELECT*
FROM artist;",1.0,bw2581,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7333,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
    en.first_name, male_frequency,female_frequency,
    ABS(LOG(male_frequency / female_frequency)) AS ambiguity_score
FROM eligible_names AS en
INNER JOIN
    (SELECT first_name, COUNT(*) AS male_frequency
    FROM actors
    WHERE first_name IN (SELECT first_name FROM actors) AND gender = 'M'
    GROUP BY
first_name) AS male_actors
ON
    en.first_name = male_actors.first_name
INNER JOIN
    (SELECT first_name,COUNT(*) AS female_frequency
    FROM actors
    WHERE first_name IN (SELECT first_name FROM actors)AND gender = 'F'
    GROUP BY
first_name) AS female_actors
ON
    en.first_name = female_actors.first_name
ORDER BY ambiguity_score;",2.0,lc3948,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7334,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE female_names AS
SELECT first_name as f_first_name, frequency as female_frequency 
FROM eligible_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM actors
    WHERE gender = 'M')
order by frequency desc;",1.0,lc3948,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7335,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT first_name as m_first_name, frequency as male_frequency 
FROM eligible_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM actors
    WHERE gender = 'F')
order by frequency desc;",1.0,lc3948,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7336,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) AS frequency
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name
HAVING frequency >= 50;

",1.0,lc3948,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7337,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select track_name, min(played_on), max(played_on)
from track as t
left outer join tracks_played as tp on t.track_id = tp.track_id and t.album_id = tp.album_id and t.artist_id = tp.artist_id
group by track_name;",0.8,lc3948,"


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id






"
7338,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select a.artist_id, artist_name, count(a.album_id) as num_albums
from album as a
inner join artist as ar on a.artist_id = ar.artist_id
group by a.artist_id;",1.0,lc3948,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7339,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(played_on), a.artist_id, artist_name,count(distinct tp.user_id) as users, sum(time) as total_time,count(t.track_id) as total_tracks
from tracks_played as tp
inner join track as t on t.artist_id = tp.artist_id and t.album_id = tp.album_id and t.track_id = tp.track_id
inner join album as a on a.artist_id = t.artist_id and a.album_id = t.album_id
inner join artist as ar on ar.artist_id = a.artist_id
group by date(played_on),artist_name,a.artist_id
order by date(played_on), a.artist_id; ",1.0,lc3948,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7340,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(played_on), sum(time)
from users as u
left outer join tracks_played as tp on u.user_id = tp.user_id 
left outer join track as t on t.artist_id = tp.artist_id and t.track_id = tp.track_id and t.album_id = tp.album_id
GROUP BY u.user_id;",1.0,lc3948,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7341,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id
from track
group by album_id,artist_id
Having sum(time) > 60;",1.0,lc3948,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7342,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, artist_id, Count(track_id), SUM(time)
from track
group by album_id,artist_id;",1.0,lc3948,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7343,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, Count(album_id)
from album
group by artist_id;",1.0,lc3948,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7344,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time
from track;",1.0,lc3948,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7345,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select Count(*)
from track;",1.0,lc3948,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7346,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select Count(*)
from artist;",1.0,lc3948,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7347,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select u.first_name, u.last_name
from users u 
left outer join tracks_played tp on u.user_id = tp.user_id
where tp.user_id is null
order by u.user_id;",1.0,lc3948,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7348,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id, first_name, last_name, album_name, track_name, played_on
from tracks_played as tp
inner join users as u on u.user_id = tp.user_id
inner join track as t on t.track_id = tp.track_id and t.album_id = tp.album_id and t.artist_id = tp.artist_id
inner join album as a on a.album_id = t.album_id and a.artist_id = t.artist_id
order by u.user_id asc;",1.0,lc3948,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7349,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track_id, track_name, ar.artist_id, a.album_id, time
from album as a
inner join track as t on a.artist_id = t.artist_id
inner join artist as ar on a.artist_id = ar.artist_id
where artist_name = 'The Stone Roses'
Order by t.time asc;",1.0,lc3948,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7350,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name, artist_name, album_name
from album as a
inner join track as t on a.artist_id = t.artist_id AND a.album_id = t.album_id
inner join artist as ar on a.artist_id = ar.artist_id;",1.0,lc3948,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7351,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select t.track_id, t.track_name, a.artist_id, a.album_id, t.time
from album as a
inner join track as t on a.artist_id = t.artist_id
where album_name = 'Second Coming'; ",1.0,lc3948,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7352,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist as ar
inner join album as a on a.artist_id = ar.artist_id
where ar.artist_name = 'New Order';",1.0,lc3948,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7353,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name like '%LOVE%';",1.0,lc3948,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7354,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select track_name, artist_id
from track
where artist_id = 1 or artist_id = 3 or artist_id = 5;


select track_name, artist_id
from track
where artist_id IN (1,3,5);",1.0,lc3948,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7355,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
from album
where album_name BETWEEN 'F' AND 'R';



",0.7,lc3948,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
7356,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name < 'M';",1.0,lc3948,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7357,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from track
where artist_id = 3 AND album_id = 2;",1.0,lc3948,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7358,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id = 4;",1.0,lc3948,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7359,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name = 'The Rolling Stones';",1.0,lc3948,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7360,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select *
from artist
where artist_id = 5;",1.0,lc3948,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7361,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
order by time ASC, track_name
LIMIT 10;",1.0,lc3948,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7362,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album;

",1.0,lc3948,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7363,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name
from artist
order by artist_name;",1.0,lc3948,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7364,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select *
from track;",1.0,lc3948,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7365,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select *
from album;",1.0,lc3948,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7366,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select *
from artist;",1.0,lc3948,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7373,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"DROP TEMPORARY TABLE male_names;
CREATE TEMPORARY TABLE male_names AS 
SELECT first_name, count(*) AS male_cnt
FROM actors
WHERE first_name not like '%.%' and first_name not like '%(%)%'
GROUP BY first_name, gender
HAVING gender = 'M'AND male_cnt > 50
ORDER BY male_cnt DESC;

Select * from male_names;

Drop temporary table if exists female_names;
Create temporary table female_names as 
	Select first_name, gender, Count(first_name) as female_cnt, Count(*)/@allactors as frequency
    From actors A
    Where first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
Group By first_name, gender
    Having gender = 'F' AND female_cnt >=50
    Order By female_cnt desc;

Select * from female_names;

SELECT A.first_name, COUNT(A.first_name) AS total_cnt, 
MN.male_cnt,COUNT(A.first_name)-MN.male_cnt AS female_cnt,
(COUNT(A.first_name)-MN.male_cnt)/COUNT(A.first_name) AS female_percent,
(MN.male_cnt)/COUNT(A.first_name) AS male_percent,
ABS(LOG10(((((MN.male_cnt)/COUNT(A",1.8,dek8225,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7374,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Drop temporary table if exists female_names;
Create temporary table female_names as 
	Select first_name, gender, Count(*) as num_female,  Count(*)/@allactors AS frequency
     From actors A
    Where first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
Group By first_name, gender
    Having gender = 'F' AND num_female >=50
    Order By num_female desc;
    
Select * from female_names;",0.8,dek8225,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7375,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"Drop temporary table if exists male_names;
Create temporary table male_names as 
	Select first_name, gender, Count(*) as num_male, Count(*)/@allactors AS frequency
    From actors A
    Where first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
Group By first_name, gender
    Having gender = 'M' AND num_male >=50
    Order By num_male desc;
    
Select * from male_names;",0.8,dek8225,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7376,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"    Use imdb;

    Select count(*) 
    from actors;

#Create variable

       Set @allactors = Set @everyone = (Select Count(distinct A.id) from actors A);

#Break down gender

    Select gender, Count(*)
     from actors A
     Group By gender;


Drop table if exists eligible_names;
Create temporary table eligible_names as 
	Select gender, first_name, Count(*) as cnt 
    From actors A
    Where first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
    Group by gender, first_name
Having cnt >= 50
Order by cnt desc;

Select * from eligible_names;",1.0,dek8225,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7377,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id,T.album_id,P.track_id,T.track_name, min(P.played_on), max(P.played_on)
from track T
	left outer join tracks_played P on T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id =P.track_id
Group By T.artist_id, T.album_id, T.track_name, P.track_id
Order By T.artist_id, T.album_id, P.track_id;",1.0,dek8225,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7378,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select A.artist_id, A.artist_name, Count(*) num_albums
from album B 
	Inner Join artist A on A.artist_id = B.artist_id
Group By artist_id;",1.0,dek8225,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7379,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"Select TP.artist_id, DATE(played_on) as date_played, Count(*)
from tracks_played as TP
Inner Join track T on T.track_id = TP.track_id AND T.artist_id = TP.artist_id AND T.album_id =TP.album_id
    Inner Join artist A on A.artist_id = TP.artist_id
group by date_played, TP.artist_id;",1.0,dek8225,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7380,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"Select U.user_id, P.artist_id, P.album_id, P.track_id, SUM(T.time) as total_time 
from tracks_played P
	Inner Join track T on T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
    Inner Join users U on U.user_id = P.user_id
Group By U.user_id, P.artist_id, album_id, track_id, T.time
Order By U.user_id, P.artist_id, album_id, track_id, T.time;	",0.8,dek8225,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id







","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id







"
7381,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"Select B.album_name, COUNT(track_name) as num_track, SUM(time) as total_time
From album B
	left outer join track T on B.album_id = T.album_id AND B.artist_id = T.artist_id
Group By B.album_name
Having sum(time) > 60;",1.0,dek8225,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7382,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"Select B.album_id, COUNT(track_name) as num_tracks, sum(time) as total_time
from album as B
	left join track T on B.album_id = T.album_id AND B.artist_id = T.artist_id
Group By B.album_id;",0.8,dek8225,"


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id






"
7383,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"Select artist_id,Count(*) as num_albums
From album
Group By artist_id
Order By artist_id;


This returns to us the number of albums for each artist_id in the database. ",1.0,dek8225,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7384,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"Select AVG(time) as avg_time, STDDEV(time) as stddev_time
From track;


This query returns for us that the avg_time is 5.24 and the std_time is 2.16. If we want, we can put in the ROUND function to limit to 2 decimal places

Select Round(AVG(time),2) as avg_time, ROUND(STDDEV(time),2) as stddev_time
From track;

But this is not strictly necessary here. ",1.0,dek8225,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7385,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"Select Count(*)
From track;


This returns that there are 153 tracks in the database.",1.0,dek8225,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7386,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"Select Count(*)
From artist;


This returns that there are 6 artists in the database.",1.0,dek8225,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7387,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"Select first_name,last_name
from users U
	Left Outer Join tracks_played TP on TP.user_id = U.user_id
Where played_on is NULL;",1.0,dek8225,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7388,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"Select *
from tracks_played TP
	Left Outer Join users U on TP.user_id = U.user_id
    Left Outer Join album A on TP.album_id = A.album_id AND TP.artist_id = A.artist_id
Order By TP.user_id",1.0,dek8225,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7389,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Select *
from artist 
	Inner Join album on album.artist_id = artist.artist_id
    Inner Join track on track.artist_id = album.artist_id AND track.album_id = album.album_id
Where artist_name = 'The Stone Roses'
Order By track.time;",1.0,dek8225,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7390,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"Select track_name,artist_name,album_name
From track T
	Inner Join album B on T.artist_id = B.artist_id AND T.album_id = B.album_id
	Inner Join artist A on A.artist_id = B.artist_id;

",1.0,dek8225,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7391,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"Select *
From track T
	Inner Join album A on T.artist_id = A.artist_id AND T.album_id = A.album_id
Where A.album_id =1 AND T.artist_id =5;

",1.0,dek8225,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7392,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"Use music;

Select *
from album B
	Inner Join artist A on A.artist_id = B.artist_id
Where artist_name = 'New Order';",1.0,dek8225,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7409,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT*
FROM track
WHERE track_name like 'Love%' OR track_name like '%Love%' OR track_name like 'Love';",1.0,dek8225,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7410,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id ='1' OR artist_id ='3' OR artist_id='5';

SELECT *
FROM track
WHERE artist_id IN('1','3','5');",1.0,dek8225,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7411,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT*
FROM album
WHERE album_name >= 'F' AND album_name < 'S';",1.0,dek8225,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
7412,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT*
FROM track
WHERE track_name <'M';

",1.0,dek8225,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7413,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * 
FROM track
WHERE album_id='2'AND artist_id='3';


This query gives us two results: Shhh/Peaceful and In A Silent Way/It's About That Time",1.0,dek8225,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7414,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM artist
WHERE artist_name='The Rolling Stones';


This query returns for us the album name Exile on Main Street",1.0,dek8225,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7415,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name='The Rolling Stones';",1.0,dek8225,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7416,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;

SELECT *
FROM artist
WHERE artist_id='5';",1.0,dek8225,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7417,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time ASC
LIMIT 10;",1.0,dek8225,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7418,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id,album_name AS album_title
FROM album;",1.0,dek8225,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7419,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,dek8225,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7420,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT *
FROM tracks;

",1.0,dek8225,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7421,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT *
FROM album;",1.0,dek8225,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7422,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;

SELECT *
FROM artist;",1.0,dek8225,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7460,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT first_name, last_name
FROM users AS A
	LEFT OUTER JOIN tracks_played AS B
    ON A.user_id = B.user_id
WHERE B.user_id IS NULL


Melissa	Mitchell
Seth	Fuente",1.0,rh3721,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7461,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"Use music;

SELECT B.user_id, first_name, last_name, album_name, track_name, played_on
FROM tracks_played AS A
	INNER JOIN users AS B
    INNER JOIN album AS C
    INNER JOIN track AS D
    ON A.user_id = B.user_id
    AND A.track_id = D.track_id
    AND A.album_id = C.album_id
ORDER BY user_id
LIMIT 5000

1	Lynn	Schulman	Retro - John McCready FAN	Sweet Virginia	2022-12-11 14:49:13
1	Lynn	Schulman	Let Love In	Sweet Virginia	2022-12-11 14:49:13
1	Lynn	Schulman	Live Around The World	Sweet Virginia	2022-12-11 14:49:13
1	Lynn	Schulman	Exile On Main Street	Sweet Virginia	2022-12-11 14:49:13
1	Lynn	Schulman	Second Coming	Sweet Virginia	2022-12-11 14:49:13
1	Lynn	Schulman	Light Years	Sweet Virginia	2022-12-11 14:49:13
1	Lynn	Schulman	Retro - John McCready FAN	Torn & Frayed	2022-12-11 22:39:56
1	Lynn	Schulman	Let Love In	Torn & Frayed	2022-12-11 22:39:56
1	Lynn	Schulman	Live Around The World	Torn & Frayed	2022-12-11 22:39:56
1	Lynn	Schulman	Exile On Main Street	Torn & Fra",0.7,rh3721,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on","SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,"The feedback from the TA was SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&nbsp;
&nbsp; &nbsp; JOIN users U ON U.user_id = P.user_id
&nbsp; &nbsp; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&nbsp; &nbsp; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on"
7462,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Use music;
SELECT track_id, track_name, A.artist_id, album_id, time
FROM track as A
	INNER JOIN artist as B
    ON A.artist_id = B.artist_id
WHERE artist_name = 'The Stone Roses'
ORDER BY time ASC


4	Your Star Will Shine	5	1	2.99
5	Straight To The Man	5	1	3.26
7	Tightrope	5	1	4.45
2	Ten Storey Love Song	5	1	4.50
6	Begging You	5	1	4.94
10	How Do You Sleep	5	1	4.99
1	Driving South	5	1	5.17
8	Good Times	5	1	5.67
11	Love Spreads	5	1	5.79
12	Untitled	5	1	6.43
3	Daybreak	5	1	6.56
9	Tears	5	1	6.84
0	Breaking Into Heaven	5	1	11.37",1.0,rh3721,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7463,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"Use music;
SELECT track_name, artist_name, album_name
FROM track as A
	INNER JOIN artist as B
    INNER JOIN album as C
    ON A.artist_id = B.artist_id
    AND B.artist_id = C.artist_id
    AND A.album_id = C.album_id
 
Elegia	New Order	Retro - John McCready FAN
In A Lonely Place	New Order	Retro - John McCready FAN
Procession	New Order	Retro - John McCready FAN
Your Silent Face	New Order	Retro - John McCready FAN
Sunrise	New Order	Retro - John McCready FAN
Let's Go	New Order	Retro - John McCready FAN
Broken Promise	New Order	Retro - John McCready FAN
Dreams Never End	New Order	Retro - John McCready FAN
Cries And Whispers	New Order	Retro - John McCready FAN
All Day Long	New Order	Retro - John McCready FAN
Sooner Than You Think	New Order	Retro - John McCready FAN
Leave Me Alone	New Order	Retro - John McCready FAN
Lonesome Tonight	New Order	Retro - John McCready FAN
Every Little Counts	New Order	Retro - John McCready FAN
Run Wild	New Order	Retro - John McCready FAN",1.0,rh3721,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7464,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"Use music;
SELECT *
FROM track as A
	INNER JOIN album as B
    ON A.album_id = B.album_id AND A.artist_id = B.artist_id
WHERE album_name = 'Second Coming'


5	1	0	Breaking Into Heaven	11.37
5	1	1	Driving South	5.17
5	1	2	Ten Storey Love Song	4.50
5	1	3	Daybreak	6.56
5	1	4	Your Star Will Shine	2.99
5	1	5	Straight To The Man	3.26
5	1	6	Begging You	4.94
5	1	7	Tightrope	4.45
5	1	8	Good Times	5.67
5	1	9	Tears	6.84
5	1	10	How Do You Sleep	4.99
5	1	11	Love Spreads	5.79
5	1	12	Untitled	6.43",1.0,rh3721,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7465,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"Use music;
SELECT *
FROM album as A
	INNER JOIN artist as B
    ON A.artist_id = B.artist_id
WHERE artist_name = 'New Order'


1	1	Retro - John McCready FAN	1	New Order
1	2	Substance (Disc 2)	1	New Order
1	3	Retro - Miranda Sawyer POP	1	New Order
1	4	Retro - New Order / Bobby Gillespie LIVE	1	New Order
1	5	Power, Corruption & Lies	1	New Order
1	6	Substance 1987 (Disc 1)	1	New Order
1	7	Brotherhood	1	New Order",1.0,rh3721,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7477,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT male_names.first_name, male_names.frequency AS male_frequency, female_names.frequency AS female_frequency FROM male_names
JOIN female_names ON male_names.first_name = female_names.first_name
ORDER BY ABS(LOG(male_names.frequency / female_names.frequency)) ASC;
",1.8,ky2449,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7478,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT female_names.first_name, female_names.frequency FROM female_names
LEFT JOIN male_names ON female_names.first_name = male_names.first_name
WHERE male_names.first_name IS NULL
ORDER BY female_names.frequency DESC;
",1.0,ky2449,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7479,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"CREATE TEMPORARY TABLE male_names AS
SELECT en.first_name, COUNT(*) AS frequency
FROM eligible_names en
JOIN actors a ON en.first_name = a.first_name
WHERE a.gender = 'M'
GROUP BY en.first_name;

CREATE TEMPORARY TABLE female_names AS
SELECT en.first_name, COUNT(*) AS frequency
FROM eligible_names en
JOIN actors a ON en.first_name = a.first_name
WHERE a.gender = 'F'
GROUP BY en.first_name;

SELECT male_names.first_name, male_names.frequency FROM male_names
LEFT JOIN female_names ON male_names.first_name = female_names.first_name
WHERE female_names.first_name IS NULL
ORDER BY male_names.frequency DESC;",1.0,ky2449,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7480,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, COUNT(*) AS name_count
FROM actors WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%)%'
GROUP BY first_name HAVING name_count >= 50;
",1.0,ky2449,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7481,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, 
MIN(P.played_on) AS min_played_on, MAX(P.played_on) AS max_played_on FROM track T
LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name;
",1.0,ky2449,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7482,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT R.artist_id, R.artist_name, 
COUNT(*) AS num_albums FROM artist R
JOIN album A ON A.artist_id = R.artist_id
GROUP BY R.artist_id, R.artist_name;",1.0,ky2449,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7483,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name, 
COUNT(DISTINCT user_id) AS users, SUM(T.time) AS total_time FROM tracks_played P
JOIN artist A ON P.artist_id = A.artist_id
JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id ORDER BY date_played, A.artist_id;",1.0,ky2449,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7484,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time FROM users U
LEFT JOIN tracks_played P ON U.user_id = P.user_id
LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id ORDER BY U.user_id;

10 users in total; users 6 and 9 have not played any track.",1.0,ky2449,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7485,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, SUM(time) AS total_time FROM track GROUP BY artist_id, album_id 
HAVING SUM(time) > 60;",1.0,ky2449,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7486,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track GROUP BY artist_id, album_id;",1.0,ky2449,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7487,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_id) as cnt_albums FROM album GROUP BY artist_id;
",1.0,ky2449,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7488,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) as avg_time, stddev(time) as std_time FROM track;
",1.0,ky2449,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7489,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(track_id) FROM track;
",1.0,ky2449,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7490,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_id) FROM artist;
",1.0,ky2449,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7491,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U. last_name FROM users U 
LEFT JOIN tracks_played P ON U.user_id = P.user_id
WHERE P.user_id IS NULL;",1.0,ky2449,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7492,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P JOIN users U ON U.user_id = P.user_id
JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on;",1.0,ky2449,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7493,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T. * FROM track T
JOIN artist R ON T.artist_id = R.artist_id WHERE R.artist_name = 'The Stone Roses'
ORDER BY T.time;",1.0,ky2449,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7494,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, artist_name, album_name FROM track T JOIN artist R ON T.artist_id = R.artist_id
JOIN album A ON A.album_id = T.album_id AND A.artist_id = T.artist_id;",1.0,ky2449,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7495,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select track_id, track_name, artist_id, album_id, time from track where album_id = 1 AND artist_id = 5;

or w/ join:

SELECT T.* FROM track T JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id WHERE A.album_name = 'Second Coming';",1.0,ky2449,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7497,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT track_name FROM track WHERE track_name LIKE '%Love%';
",1.0,ky2449,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7498,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"using OR:

SELECT * FROM track WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

SELECT track_name FROM track WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;


using IN:

SELECT track_name FROM track WHERE artist_id IN (1, 3, 5);

",1.0,ky2449,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7499,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name FROM album WHERE album_name > 'E' AND album_name < 'S' AND NOT album_name LIKE 'E%';
",1.0,ky2449,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
7500,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name FROM track WHERE track_name < 'M';
",1.0,ky2449,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7501,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * FROM track WHERE album_id = 2 AND artist_id = 3;

or

SELECT track_name FROM track WHERE album_id = 2 AND artist_id = 3;
",1.0,ky2449,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7502,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * FROM album WHERE artist_id= 4;

Exile On Main Street",1.0,ky2449,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7503,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * FROM artist WHERE artist_name = 'The Rolling Stones';
",1.0,ky2449,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7504,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * FROM artist WHERE artist_id = 5;
",1.0,ky2449,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7505,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT track_id, track_name, artist_id, album_id, time FROM track ORDER BY time ASC LIMIT 10;
",1.0,ky2449,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7506,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title FROM album;",1.0,ky2449,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7507,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,SELECT artist_name FROM artist ORDER BY artist_name ASC;,1.0,ky2449,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7508,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select track_name from track;

to get the hint output use:

select track_id, track_id as track_name,  track_name as artist_id, artist_id as album_id, album_id as time, time as "" "" from track;",1.0,ky2449,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7509,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,select album_name from album;,1.0,ky2449,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7510,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,select artist_name from artist;,1.0,ky2449,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7546,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"Temporary table created:
DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS
SELECT *
FROM eligible_names
WHERE gender = 'F';

SELECT first_name, name_count
FROM female_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM male_names
  )
GROUP BY first_name, name_count;


",0.8,kgb8897,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7547,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"Temporary MALE table created:
DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT *
FROM eligible_names
WHERE gender = 'M';


SELECT first_name, name_count
FROM male_names
WHERE first_name NOT IN (
    SELECT first_name
    FROM female_names
  )
GROUP BY first_name, name_count;


",1.0,kgb8897,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7548,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"DROP TABLE IF EXISTS eligible_names;

CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, gender, COUNT(*) AS name_count
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name, gender
HAVING COUNT(*) >= 50
ORDER BY name_count DESC;",1.0,kgb8897,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7549,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, 
	MAX(TP.played_on) AS max_played_on, 
    MIN(TP.played_on) AS min_played_on
FROM track T
LEFT JOIN tracks_played TP ON T.track_id - TP.track_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name
ORDER BY T.track_id ASC;",1.0,kgb8897,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7550,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, artist_name, COUNT(*) AS num_albums
FROM album AL
	INNER JOIN artist A ON A.artist_id = AL.artist_id
GROUP BY artist_id, artist_name;",1.0,kgb8897,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7551,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(played_on) AS date_played, COUNT(*)
FROM tracks_played
GROUP BY DATE(played_on);",0.9,kgb8897,"


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;






"
7552,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(*) AS tracks_played, SUM(time) AS total_time
FROM tracks_played TP
	INNER JOIN 	users U ON U.user_id = TP.user_id
    INNER JOIN  track T ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
GROUP BY user_id
ORDER BY user_id ASC;",0.8,kgb8897,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
7553,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, artist_id, SUM(time) AS total_length
FROM track
GROUP BY album_id, artist_id
HAVING total_length > 60;",1.0,kgb8897,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7554,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, artist_id,  COUNT(*) AS num_tracks, SUM(time) AS total_length
FROM track
GROUP BY album_id, artist_id;",1.0,kgb8897,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7555,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id,  COUNT(*) AS cnt_album
FROM album
GROUP BY artist_id;",1.0,kgb8897,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7556,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_Trklength,
STDDEV(time) AS stddev_Trklength
FROM track;",1.0,kgb8897,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7557,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track;",1.0,kgb8897,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7558,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(artist_name) AS num_artist
FROM artist;",1.0,kgb8897,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7559,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT SELECT first_name, last_name
FROM users U
LEFT JOIN tracks_played T ON U.user_id = T.user_id
WHERE T.track_id IS NULL
ORDER BY U.first_name AND U.last_name;",1.0,kgb8897,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7560,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select U.user_id, first_name, last_name, album_name, track_name, played_on
FROM tracks_played P
	INNER JOIN users U ON U.user_id = P.user_id
    INNER JOIN track T 
    ON T.track_id = P.track_id AND T.album_id = P.album_id AND T.artist_id = P.artist_id
    INNER JOIN album A ON A.album_id = T.album_id;",1.0,kgb8897,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7561,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT track_id, track_name, A.artist_id, album_id, time
FROM track T
INNER JOIN artist A ON A.artist_id = T.artist_id
WHERE A.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,kgb8897,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7562,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, A.artist_name,  AL.album_name
FROM track T
INNER JOIN artist A ON T.artist_id = A.artist_id
INNER JOIN album AL ON AL.album_id = T.album_id AND AL.artist_id = T.artist_id;",1.0,kgb8897,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7563,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM  track T
INNER JOIN album AL ON AL.artist_id = T.artist_id AND AL.album_id = T.album_id
WHERE AL.album_name = 'Second Coming';",1.0,kgb8897,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7564,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
FROM artist A
LEFT JOIN album AL on AL.artist_id = A.artist_id 
WHERE A.artist_name = 'New Order';",1.0,kgb8897,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7565,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
FROM track
WHERE track_name LIKE '%Love%';",1.0,kgb8897,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7566,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;

    -AND-

select *
FROM track
WHERE artist_id IN (1,3,5);",1.0,kgb8897,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7567,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
FROM album
WHERE album_name > 'F' AND album_name < 'R';

   -OR-

select *
FROM album
WHERE album_name BETWEEN 'F' AND 'R';",0.7,kgb8897,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S






"
7568,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
FROM track
WHERE track_name < 'M';",1.0,kgb8897,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7569,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,kgb8897,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7570,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
FROM album
WHERE artist_id = 4
ORDER BY album_name;",1.0,kgb8897,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7571,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,kgb8897,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7572,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select *
FROM artist
WHERE artist_id = 5;",1.0,kgb8897,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7573,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time ASC
LIMIT 10;",1.0,kgb8897,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7574,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select distinct artist_id, album_name AS album_title
from album;",1.0,kgb8897,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7575,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT DISTINCT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,kgb8897,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7576,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select *
FROM track;",1.0,kgb8897,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7577,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select *
FROM album;",1.0,kgb8897,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7578,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select *
FROM artist;",1.0,kgb8897,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7597,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
  e.name,
  m.count AS male_freq,
  f.count AS female_freq,
  ABS(LOG(m.count / f.count)) AS ambiguity
FROM eligible_names e
JOIN male_names m ON e.name = m.name
JOIN female_names f ON e.name = f.name
ORDER BY ambiguity ASC;",1.6,rh1780,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7598,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT female_names.name, female_names.count
FROM actors
LEFT JOIN male_names ON female_names.name = male_names.name
WHERE male_names.name IS NULL;


",0.8,rh1780,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7599,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT name, count
FROM eligible_names
WHERE name IN (
    SELECT name
    FROM actors
    WHERE gender = 'M'
);


SELECT name, count
FROM eligible_names
WHERE name IN (
    SELECT name
    FROM actors
    WHERE gender = 'F'
);


SELECT male_names.name, male_names.count
FROM male_names
LEFT JOIN female_names ON male_names.name = female_names.name
WHERE female_names.name IS NULL;",0.8,rh1780,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7600,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"SELECT first_name, last_name, COUNT(first_name) AS eligible_names
FROM actors
WHERE first_name NOT LIKE '%.%' AND first_name NOT LIKE '%(%'
GROUP BY first_name, last_name;",0.8,rh1780,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7601,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.artist_id, t.album_id, t.track_id,t.track_name, MIN(tp.played_on) AS min_played, MAX(tp.played_on) AS max_played
FROM track t
LEFT OUTER JOIN tracks_played tp ON t.track_id = tp.track_id AND t.artist_id = tp.artist_id AND t.album_id = tp.album_id
GROUP BY t.artist_id, t.album_id, t.track_id,t.track_name;",1.0,rh1780,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7602,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT  a.artist_id, a.artist_name AS artist_name, COUNT(*) AS num_albums
FROM artist a
JOIN album al ON a.artist_id = al.artist_id
GROUP BY a.artist_id, a.artist_name;",1.0,rh1780,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7603,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select tp.played_on, a.artist_id, MAX(a.artist_name), user_id as users, sum(t.time)as total_time, count(distinct tp.track_id)as total_tracks
from tracks_played as tp
left join track as t on tp.track_id = t.track_id
left join artist as a on t.artist_id = a.artist_id
group by tp.played_on;",0.8,rh1780,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;","SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,"The feedback from the TA was SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(DISTINCT user_id) AS users
&nbsp; &nbsp; &nbsp; &nbsp; , SUM(T.time) AS total_time
&nbsp; &nbsp; &nbsp; &nbsp; , COUNT(*) AS total_tracks
FROM tracks_played P
&nbsp; &nbsp; JOIN artist A ON P.artist_id = A.artist_id
&nbsp; &nbsp; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;"
7604,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(tp.track_id) as tracks_played , sum(t.time) as total_time
from users as u 
left join tracks_played tp on tp.user_id = u.user_id
left join track t on t.track_id = tp.track_id and t.album_id = tp.album_id and t.artist_id = tp.artist_id
group by u.user_id;",1.0,rh1780,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7605,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select album_id
from track
group by album_id, artist_id
having sum(time)>60;
",1.0,rh1780,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7606,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select album_id, artist_id, count(*) as num_track, sum(time) as tol_time
from track
group by album_id, artist_id;",1.0,rh1780,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7607,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(*) as cnt_albums
from album
group by artist_id;",1.0,rh1780,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7608,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select Round(avg(time),6) as avg_time, Round(stddev(time),6) as std_time
from track;",1.0,rh1780,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7609,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id)
from track;",1.0,rh1780,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7610,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(artist_id)
from artist;",1.0,rh1780,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7611,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select u.first_name, u.last_name
from users as u
left join tracks_played as t on u.user_id = t.user_id
where t.track_id is null; ",1.0,rh1780,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7612,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select u.user_id, u.first_name, u.last_name, a.album_name, t.track_name, p.played_on
from tracks_played as p
inner join album as a on a.album_id = p.album_id and a.artist_id = p.artist_id
inner join users as u on u.user_id = p.user_id 
inner join track as t on t.track_id = p.track_id and t.artist_id = p.artist_id and t.album_id = p.album_id;",1.0,rh1780,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7613,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select *
from artist
where artist_name = 'The Stone Roses';


select *
from track
where artist_id = 5
order by time; 
",1.0,rh1780,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7614,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select t.track_name, a.artist_name, b.album_name
from track as t
inner join artist as a on t.artist_id = a.artist_id 
inner join album as b on b.artist_id = a.artist_id
where t.album_id = b.album_id and t.artist_id = b.artist_id;",1.0,rh1780,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7615,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select album_id
from album
where album_name = 'Second Coming';

select t.track_id, t.track_name, t.artist_id, t.time, b.album_id
from track as t
inner join album as b
on t.album_id = b.album_id and t.artist_id = b.artist_id
where t.album_id = 1 and t.artist_id = 5;",1.0,rh1780,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7616,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select a.artist_id, a.artist_name, b.album_id, b.album_name
from album as b
inner join artist as a
on artist_name = 'New Order';",1.0,rh1780,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7623,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select* 
FROM track 
WHERE track_name LIKE '%Love%';",1.0,rh1780,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7624,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT * 
FROM track 
WHERE artist_id IN (1, 3, 5);

SELECT * 
FROM track 
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5;",1.0,rh1780,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7625,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * 
FROM album
WHERE album_name > 'E' AND album_name < 'S';",0.7,rh1780,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
7626,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * 
FROM tracks 
WHERE name < 'M';",1.0,rh1780,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7627,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * 
FROM track 
WHERE album_id = 2 AND artist_id = 3;",1.0,rh1780,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7628,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select*
from album
where artist_id = 4;",1.0,rh1780,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7629,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select*
from artist
where artist_name = ""The Rolling Stones"";",1.0,rh1780,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7630,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select*
from artist
where artist_id = 5;",1.0,rh1780,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7631,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select track_id,track_name,artist_id, album_id, time
from track
order by time ASC;",1.0,rh1780,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7632,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title
from album;",1.0,rh1780,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7633,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
order by artist_name ASC;",1.0,rh1780,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7634,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select track_id, track_name, artist_id, album_id, time
from track;",1.0,rh1780,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7635,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"select artist_id, album_id, album_name
from album;",1.0,rh1780,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7636,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"select*
from artist;

SELECT artist_id,artist_name
FROM artist;",1.0,rh1780,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7661,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT
m.first_name, 
m.male_freq, 
f.female_freq, 
log(male_freq/female_freq) as amb,
ABS(log(male_freq/female_freq)) as amb_freq
FROM 
male_names m 
INNER JOIN 
female_names f 
on m.first_name = f.first_name
GROUP BY m.first_name, m.male_freq, f.female_freq
ORDER BY amb_freq ASC;



TEMPORARY TABLES:

CREATE TEMPORARY TABLE male_names AS 
select first_name, frequency, gen_freq, gen_freq/frequency as male_freq FROM eligible_names where gender = 'M'
GROUP BY first_name, frequency, gen_freq, male_freq;

select * from male_names;

CREATE TEMPORARY TABLE female_names AS 
select first_name, frequency, gen_freq, gen_freq/frequency as female_freq FROM eligible_names where gender = 'F'
GROUP BY first_name, frequency, gen_freq, female_freq;

select * FROM female_names;
",2.0,myc9095,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7662,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select 
f.first_name, f.frequency 
from female_names f WHERE first_name NOT IN (
select first_name from male_names)
ORDER BY f.frequency DESC;


TEMPORARY TABLE LISTED IN Q2",1.0,myc9095,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7663,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"select 
m.first_name, m.frequency 
from male_names m WHERE first_name NOT IN (
select first_name from female_names)
ORDER BY m.frequency DESC;

OR

select 
m.first_name, m.frequency 
from male_names m
LEFT JOIN female_names f on m.first_name=f.first_name WHERE f.first_name IS NULL
ORDER BY m.frequency DESC;


TEMPORARY TABLES:
1. male_names

Query:
CREATE TEMPORARY TABLE male_names AS
select first_name, frequency, gen_freq, gen_freq/frequency as male_freq FROM eligible_names where gender = 'M'
GROUP BY first_name, frequency, gen_freq, male_freq;

select * from male_names;

2. female_names

Query:
CREATE TEMPORARY TABLE female_names AS
select first_name, frequency, gen_freq, gen_freq/frequency as female_freq FROM eligible_names where gender = 'F'
GROUP BY first_name, frequency, gen_freq, female_freq;

select * FROM female_names;
",0.8,myc9095,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7664,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
select a.first_name, a.gender,
b.frequency, COUNT(a.first_name) as gen_freq from actors a
LEFT JOIN (
select first_name, COUNT(*) as frequency from actors GROUP BY first_name) b
on a.first_name=b.first_name
where a.first_name NOT LIKE '%.%' and a.first_name NOT LIKE '%(%)%'
GROUP BY a.first_name, a.gender, b.frequency
HAVING b.frequency >= 50
ORDER BY frequency;


To see output:

select * from eligible_names;",1.0,myc9095,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7665,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select 
t.artist_id, 
t.album_id, 
t.track_id, 
t.track_name, 
MIN(tp.played_on) as min_played_on, 
MAX(tp.played_on) as max_played_on
FROM track t
LEFT JOIN tracks_played tp 
ON t.artist_id=tp.artist_id AND t.album_id=tp.album_id AND t.track_id=tp.track_id
GROUP BY t.artist_id, t.album_id, t.track_id, t.track_name;
",1.0,myc9095,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7666,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select 
a.artist_id,
a.artist_name, 
COUNT(al.album_name) as num_albums 
FROM artist a
LEFT JOIN album al 
ON a.artist_id = al.artist_id
GROUP BY a.artist_id, a.artist_name;

OR

select 
a.artist_name, 
COUNT(al.album_name) as num_albums 
FROM artist a
LEFT JOIN album al 
ON a.artist_id = al.artist_id
GROUP BY a.artist_name;",1.0,myc9095,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7667,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select LEFT(tp.played_on,10) as date_played, 
a.artist_id, 
a.artist_name, 
COUNT(DISTINCT u.user_id) as users, 
SUM(t.time) as total_time, 
COUNT(track_name) as total_tracks
FROM tracks_played tp
LEFT JOIN users u on tp.user_id=u.user_id
LEFT JOIN track t on tp.artist_id=t.artist_id AND tp.album_id=t.album_id AND tp.track_id=t.track_id
LEFT JOIN album al on t.artist_id=al.artist_id and t.album_id=al.album_id 
LEFT JOIN artist a on al.artist_id=a.artist_id
GROUP BY date_played, a.artist_id, a.artist_name
ORDER BY date_played;",1.0,myc9095,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7668,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select 
u.user_id, 
count(tr.track_name) as tracks_played, 
sum(time) as total_time
FROM users u
LEFT JOIN tracks_played tp 
ON u.user_id=tp.user_id
LEFT JOIN track tr 
ON tp.artist_id=tr.artist_id 
and tp.album_id=tr.album_id 
AND tp.track_id=tr.track_id
GROUP BY user_id;",1.0,myc9095,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7669,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select 
a.artist_id, 
a.album_id, 
sum(time) 
FROM album a 
LEFT JOIN track t 
ON a.album_id=t.album_id and a.artist_id=t.artist_id
GROUP BY a.artist_id, a.album_id 
HAVING SUM(time)>60; ",1.0,myc9095,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7670,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select 
a.artist_id, 
a.album_id, 
count(track_name) as num_tracks,
sum(time) as total_length
FROM album a
LEFT JOIN track t 
ON a.artist_id = t.artist_id and a.album_id=t.album_id 
GROUP BY a.artist_id, a.album_id;

Total albums = 13 albums",1.0,myc9095,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7671,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select 
artist_id, 
count(*) as cnt_albums 
FROM album 
GROUP BY 1;",1.0,myc9095,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7672,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time), stddev(time) from track;

OR

select 
avg(time) as avg_time, 
ROUND(stddev(time),6) as std_time 
FROM track;",1.0,myc9095,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7673,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) from track;,1.0,myc9095,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7674,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(*) from artist;,1.0,myc9095,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7682,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select 
first_name, 
last_name 
FROM users u 
LEFT JOIN tracks_played t 
ON u.user_id=t.user_id 
WHERE t.played_on IS NULL;",1.0,myc9095,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7683,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select
tp.user_id,
u.first_name, 
u.last_name,
a.album_name, 
tr.track_name, 
tp.played_on 
FROM tracks_played tp
LEFT JOIN users u 
ON tp.user_id=u.user_id 
LEFT JOIN track tr 
ON tp.artist_id=tr.artist_id
AND tp.album_id=tr.album_id 
AND tp.track_id=tr.track_id
LEFT JOIN album a 
ON tp.artist_id=a.artist_id and tp.album_id=a.album_id
ORDER BY u.user_id, tp.played_on;",1.0,myc9095,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7684,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select 
t.track_id, 
t.track_name, 
t.artist_id, 
t.album_id, 
t.time 
FROM track t 
LEFT JOIN artist a 
ON t.artist_id=a.artist_id 
WHERE a.artist_name='The Stone Roses' 
ORDER BY time;

OR

select 
t.track_id, 
t.track_name, 
t.artist_id, 
t.album_id, 
t.time 
FROM artist a
LEFT JOIN album alb
ON a.artist_id=alb.artist_id
LEFT JOIN track t
ON a.artist_id=t.artist_id 
WHERE a.artist_name='The Stone Roses' 
ORDER BY time;

OR

select 
t.track_id, 
t.track_name, 
t.artist_id, 
t.album_id, 
t.time 
FROM artist a
LEFT JOIN track t
ON a.artist_id=t.artist_id 
WHERE a.artist_name='The Stone Roses' 
ORDER BY time;",1.0,myc9095,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7685,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select 
t.track_name, 
a.artist_name, 
alb.album_name 
FROM track t
LEFT JOIN album alb
ON t.album_id=alb.album_id AND t.artist_id=alb.artist_id
LEFT JOIN artist a 
ON t.artist_id=a.artist_id;

OR

select 
t.track_name, 
a.artist_name, 
alb.album_name 
FROM track t
LEFT JOIN album alb
ON t.album_id=alb.album_id AND t.artist_id=alb.artist_id
LEFT JOIN artist a 
ON alb.artist_id=a.artist_id;",1.0,myc9095,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7686,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select 
t.track_id, 
t.track_name, 
t.artist_id, 
t.album_id, 
t.time 
FROM track t 
WHERE t.artist_id=5 and t.album_id=1;

OR

select 
t.track_id, 
t.track_name, 
t.artist_id, 
t.album_id, 
t.time 
FROM album a 
LEFT JOIN track t 
ON a.artist_id = t.artist_id 
WHERE a.artist_id=5 and a.album_id=1;

Note:
(Second Coming> artist_id = 5 & album_id=1)",1.0,myc9095,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7687,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select 
a.artist_id, 
a.artist_name, 
alb.artist_id, 
alb.album_id, 
alb.album_name 
FROM artist a 
LEFT JOIN album alb 
ON a.artist_id=alb.artist_id 
WHERE a.artist_name='New Order';",1.0,myc9095,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7695,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select track_name from track where track_name like '%love%';

Output:
track_name
Bizarre Love Triangle
Bizarre Love Triangle
Bizarre Love Triangle
Do You Love Me?
Loverman
I Let Love In
Do You Love Me? (Part Two)
Ten Storey Love Song
Love Spreads
Loveboat
Under The Influence Of Love
",1.0,myc9095,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7696,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select artist_id, track_name from track where artist_id in (1,3,5);
OR
select artist_id, track_name from track where artist_id=1 OR artist_id=3 OR artist_id=5;

Output:
artist_id	track_name
1	Elegia
1	In A Lonely Place
1	Procession
1	Your Silent Face
1	Sunrise
1	Let's Go
1	Broken Promise
1	Dreams Never End
1	Cries And Whispers
1	All Day Long
1	Sooner Than You Think
1	Leave Me Alone
1	Lonesome Tonight
1	Every Little Counts
1	Run Wild
1	In A Lonely Place
1	Procession
1	Mesh
1	Hurt
1	The Beach
1	Confusion
1	Lonesome Tonight
1	Murder
1	Thieves Like Us
1	Kiss Of Death
1	Shame Of The Nation
1	1963
1	Fine Time
1	Temptation
1	True Faith
1	The Perfect Kiss
1	Ceremony
1	Regret
1	Crystal
1	Bizarre Love Triangle
1	Confusion
1	Round And Round
1	Blue Monday
1	Brutal
1	Slow Jam
1	Everyone Everywhere
1	Ceremony [Studio 54, Barcelona 7/7/84]
1	Procession [Polytechnic of Central London, London 6/12/85]
1	Everything's Gone Green [Tolworth Recreation Centre",1.0,myc9095,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7697,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select album_name from album where album_name > 'E' and album_name < 'S' AND album_name not like 'E%' ORDER BY album_name; 

Output:

album_name
In A Silent Way
Let Love In
Light Years
Live Around The World
Power, Corruption & Lies
Retro - John McCready FAN
Retro - Miranda Sawyer POP
Retro - New Order / Bobby Gillespie LIVE
",1.0,myc9095,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
7698,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select track_name from track where track_name < 'M' ORDER BY track_name; 

Output:
track_name
1963
5 8 6
Age Of Consent
Age Of Consent [Spectrum Arena, Warrington 1/3/86]
Ain't Gonna Rain Anymore
All Day Long
All Day Long
All Down The Line
Amandla
Angel Dust
As It Is When It Was
As It Is When It Was [Reading Festival 29/8/93]
Begging You
Bittersweet Goodbye
Bizarre Love Triangle
Bizarre Love Triangle
Bizarre Love Triangle
Blue Monday
Blue Monday
Breaking Into Heaven
Broken Promise
Broken Promise
Brutal
Butterfly
Casino Boogie
Ceremony
Ceremony
Ceremony [Studio 54, Barcelona 7/7/84]
Confusion
Confusion
Confusion
Cries And Whispers
Crystal
Crystal [Big Day Out, Gold Coast 20/1/02]
Daybreak
Disco Down
Do You Love Me?
Do You Love Me? (Part Two)
Dreams Never End
Driving South
Ecstasy
Elegia
Elegia [Glastonbury Festival 19/6/87]
Every Little Counts
Every Little Counts
Everyone Everywhere
Everything's Gone Green
Everything's Gone Green [Tolwo",1.0,myc9095,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7699,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * from track where artist_id=3 and album_id=2;

Output:

artist_id	album_id	track_id	track_name	                                              time
     3	     2	          0	        Shhh/Peaceful	                                     16.67
     3	     2	          1	        In A Silent Way/It's About That Time	 16.67

Tracks (2):
Shhh/Peaceful
In A Silent Way/It's About That Time",1.0,myc9095,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7700,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album where artist_id=4;

Output:

artist_id	album_id	album_name
     4	     1	       Exile On Main Street

Album Name=Exile On Main Street",1.0,myc9095,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7701,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist where artist_name=""The Rolling Stones"";

Output:

artist_id	    artist_name
     4	The Rolling Stones
",1.0,myc9095,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7702,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * from artist where artist_id=5;

Output:

artist_id	   artist_name
      5	  The Stone Roses
 ",1.0,myc9095,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7703,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select track_id, track_name, artist_id, album_id, time from track ORDER BY time limit 10;",1.0,myc9095,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7704,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title from album; ",1.0,myc9095,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7705,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,select artist_name from artist ORDER BY 1;,1.0,myc9095,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7706,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select track_id, track_name, artist_id, album_id, time from track;",1.0,myc9095,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7707,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,myc9095,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7708,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,select * from artist;,1.0,myc9095,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7709,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2A: Database Navigation,"301,292",1,"5,119,657","&#160;Write a short paragraph describing the entities stored in the database and their relationships. Explain which are the foreign keys used to implement the relationships. (You will need this understanding for later assignments, especially for joining tables correctly).",Long Answer Question,"The entities stored in the music database are users, tracks_played, artist, album, and track. There is a relationship between:
- user and the tracks_played (foreign key = user_id in tracks played table)
a. users play tracks
- tracks_played and album (foreign key = album_id in tracks played table)
a. tracks belong to an album
- album and artist (foreign key = artist_id in album table)
a. an album created by artist
- album and track (foreign key = album_id in track table)
a. an album contains tracks
- artist and track (foreign key = artist_id in track table)
a. each track has an artist",1.0,myc9095,,"Entities:

Artist
Album
Track
User

Relationships:

Artist-Album: One-to-many. Each artist may have many albums; each album has one artist as the creator. The artist_id foreign key in the Album table implements the one-to-many relationship.
Album-Track: One-to-many. Each album has many tracks; each track belongs to a single album.&#160;The foreign key in the track album is the pair (artist_id, album_id).&#160;The key connects each track to the album with a primary key (artist_id, album_id).
User-Track: Many-to-many. Each user listens to many tracks, and each track is listened to by many people.&#160;We have the bridge table tracks played with two foreign keys: user_id, which connects with the table users, and the (artist_id, album_id, track_id) composite foreign key that points to the track table and the corresponding primary key for the track. Notice that the relation",True,music,1.0,
7744,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"select
    E.first_name, male_freq, female_freq, abs(log(male_freq / female_freq)) as ambiguity
from eligible_names E
inner join (
	select first_name, count(*) AS male_freq
    from actors
    where first_name in (select first_name from actors) and gender = 'M'
    group by first_name
) as male_actors
on E.first_name = male_actors.first_name
inner join (
	select first_name, count(*) AS female_freq
    from actors
    where first_name in (select first_name from actors) and gender = 'F'
    group by first_name
) as female_actors
on E.first_name = female_actors.first_name
order by ambiguity asc;",2.0,rkj2020,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7745,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select distinct first_name, count(*) as cnt
from female_names
where first_name not in (select first_name from male_names)
group by first_name
order by cnt desc;",0.8,rkj2020,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7746,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"drop table if exists male_names;
create temporary table male_names as
	select first_name, gender
	from actors
	where gender = ""M"" and first_name not in (
		select first_name
		from actors
		where first_name like '%.%' or first_name like ""%(%)%"" 
		group by first_name
		having count(*) >= 50
	);
    
drop table if exists female_names;
create temporary table female_names as
	select first_name, gender
	from actors
	where gender = ""F"" and first_name not in (
		select first_name
		from actors
		where first_name like '%.%' or first_name like ""%(%)%""  
		group by first_name
		having count(*) >= 50
	);

select distinct first_name, count(*) as cnt
from male_names
where first_name not in (select first_name from female_names)
group by first_name
order by cnt desc;",0.8,rkj2020,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7747,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"create temporary table eligible_names as
	select first_name
	from actors
	where first_name not like '%.%' and first_name not like ""%(%)%""
    group by first_name
    having count(*) >= 50;",1.0,rkj2020,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7748,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select T.artist_id, T.album_id, T.track_id, track_name, 
min(TP.played_on) as min_played_on, max(TP.played_on) as max_played_on
from track T
	left outer join tracks_played TP
    on T.track_id = TP.track_id and T.album_id = TP.album_id and T.artist_id = TP.artist_id
group by T.artist_id, T.album_id, T.track_id, track_name;",1.0,rkj2020,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7749,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select R.artist_id, artist_name, count(*) as num_albums
from artist R
	inner join album L
    on L.artist_id = R.artist_id
group by artist_id, artist_name;",1.0,rkj2020,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7750,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select DATE(played_on) as date_played, A.artist_id, artist_name, count(distinct TP.user_id) as users, 
sum(time) as total_time, count(T.track_id) as total_tracks
from tracks_played TP
	inner join artist A
    on TP.artist_id = A.artist_id
    inner join album L
    on TP.album_id = L.album_id and TP.artist_id = L.artist_id
	inner join track T
    on TP.artist_id = T.artist_id and TP.album_id = T.album_id and TP.track_id = T.track_id
group by date_played, artist_name, A.artist_id
order by date_played, artist_id;",1.0,rkj2020,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7751,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select U.user_id, count(T.track_id) as tracks_played, sum(time) as total_time
from users U
	left outer join tracks_played TP
    on U.user_id = TP.user_id
    left outer join track T
    on TP.artist_id = T.artist_id and TP.album_id = T.album_id and TP.track_id = T.track_id
group by U.user_id
order by U.user_id;",1.0,rkj2020,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7752,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select A.album_id, A.artist_id, count(track_id) as num_tracks, sum(time) as album_length
from album A
	inner join track T
    on A.artist_id = T.artist_id and A.album_id = T.album_id
group by A.album_id, A.artist_id
having album_length > 60;",1.0,rkj2020,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7753,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select A.album_id, A.artist_id, count(track_id) as num_tracks, sum(time) as album_length
from album A
	inner join track T
    on A.artist_id = T.artist_id and A.album_id = T.album_id
group by A.album_id, A.artist_id;
",1.0,rkj2020,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7754,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select R.artist_id, count(*)
from artist R
	inner join album A
    on A.artist_id = R.artist_id
group by R.artist_id;",1.0,rkj2020,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7755,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, stddev(time) as std_time
from track;",1.0,rkj2020,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7756,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"select count(track_id)
from track;",1.0,rkj2020,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7757,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(distinct artist_id)
from artist;",1.0,rkj2020,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7758,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select first_name, last_name
from users U
	left outer join tracks_played TP
    on TP.user_id = U.user_id
where TP.played_on is null;",1.0,rkj2020,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7759,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select TP.user_id, first_name, last_name, A.album_name, T.track_name, played_on
from tracks_played TP
	inner join users U
    on TP.user_id = U.user_id
    inner join track T
    on T.track_id = TP.track_id and T.artist_id = TP.artist_id and T.album_id = TP.album_id
    inner join album A
    on A.album_id = TP.album_id and A.artist_id = TP.artist_id
order by TP.user_id, played_on;",1.0,rkj2020,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7760,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"select track_id, track_name, R.artist_id, T.album_id, time
from track T
	inner join artist R
    on T.artist_id = R.artist_id
where R.artist_name = ""The Stone Roses""
order by T.time;",1.0,rkj2020,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7761,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name, R.artist_name, A.album_name
from track T
	inner join artist R
    on T.artist_id = R.artist_id
    inner join album A
    on R.artist_id = A.artist_id;
",0.7,rkj2020,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
7762,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select track_id, track_name, R.artist_id, A.album_id, time
from track T
    inner join artist R
    on T.artist_id = R.artist_id
	inner join album A
    on A.artist_id = R.artist_id
where A.album_name = ""Second Coming"";",1.0,rkj2020,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7763,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select *
from artist T
	inner join album A
    on T.artist_id = A.artist_id
where T.artist_name = 'New Order';",1.0,rkj2020,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7764,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select *
from track
where track_name like 'love%%';",0.8,rkj2020,"SELECT&nbsp;*
FROM&nbsp;track
WHERE track_name LIKE '%love%'&nbsp;","SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE track_name LIKE '%love%'&nbsp;"
7765,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"select *
from track
where artist_id = '1' or artist_id = '3' or artist_id = '5';

select *
from track
where artist_id in ('1', '3', '5');",1.0,rkj2020,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7766,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select *
from album
where album_name > 'E' and album_name < 'S';",0.7,rkj2020,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
7767,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select *
from track
where track_name < 'M'
order by track_name;",1.0,rkj2020,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7768,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select *
from track
where artist_id = 3 and album_id = 2;",1.0,rkj2020,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7769,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select *
from album
where artist_id = 4;",1.0,rkj2020,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7770,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select *
from artist
where artist_name = 'The Rolling Stones';",1.0,rkj2020,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7771,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select *
from artist
where artist_id = 5;

The Stone Roses",1.0,rkj2020,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7772,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select *
from track
order by time;",0.5,rkj2020,Missing LIMIT&nbsp;10,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,The feedback from the TA was Missing LIMIT&nbsp;10
7773,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select artist_id, album_name as album_title
from album;",1.0,rkj2020,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7774,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name as name 
from artist
order by name;",1.0,rkj2020,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7775,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,select * from track;,1.0,rkj2020,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7776,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,rkj2020,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7777,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,select * from artist;,1.0,rkj2020,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7796,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT E.first_name, M.frequency AS male_frequency, F.frequency AS female_frequency, ABS(LOG(M.frequency / F.frequency)) AS ambiguity_score
FROM eligible_names as E
JOIN (SELECT first_name, COUNT(*) AS frequency
FROM actors
WHERE gender = 'M'
GROUP BY first_name) 
M ON E.first_name = M.first_name
JOIN (SELECT first_name, COUNT(*) AS frequency
FROM actors
WHERE gender = 'F'
GROUP BY first_name) 
F ON E.first_name = F.first_name
ORDER BY ABS(ambiguity_score); 
",2.0,aso6907,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7797,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TEMPORARY TABLE IF EXISTS female_only;
CREATE TEMPORARY TABLE female_only AS
SELECT DISTINCT first_name, num_table
FROM female_names
WHERE first_name NOT IN(
SELECT DISTINCT first_name 
FROM male_names
)
ORDER BY num_table DESC
;

SELECT *
FROM female_only
;
",1.0,aso6907,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7798,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TEMPORARY TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT DISTINCT first_name, num_table
FROM eligible_names
WHERE first_name NOT IN(
SELECT DISTINCT first_name 
FROM actors
WHERE gender = 'F'
)
ORDER BY num_table DESC
;

SELECT *
FROM male_names
;

DROP TEMPORARY TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS
SELECT DISTINCT first_name, num_table
FROM eligible_names
WHERE first_name NOT IN(
SELECT DISTINCT first_name 
FROM actors
WHERE gender = 'M'
)
ORDER BY num_table DESC
;

SELECT *
FROM female_names
;

DROP TEMPORARY TABLE IF EXISTS male_only;
CREATE TEMPORARY TABLE male_only AS
SELECT DISTINCT first_name, num_table
FROM male_names
WHERE first_name NOT IN(
SELECT DISTINCT first_name 
FROM female_names
)
ORDER BY num_table DESC
;

SELECT *
FROM male_only
;",1.0,aso6907,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7799,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"SHOW databases;

USE imdb;

SHOW TABLES;

SELECT *
FROM actors;

SELECT first_name,
COUNT(*) as num_table
FROM actors
GROUP BY first_name;

DROP TEMPORARY TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name, 
COUNT(*) as num_table
FROM actors
WHERE first_name NOT LIKE '%.%'
and first_name NOT LIKE '%(%'
and first_name NOT LIKE '%)%'
GROUP BY first_name
HAVING num_table >= 50
ORDER BY num_table DESC
;

SELECT*
FROM eligible_names
;",1.0,aso6907,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7800,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name,
min(played_on) AS min_played_on,
max(played_on) AS max_played_on
FROM track T
INNER JOIN tracks_played TP on TP.artist_id = T.artist_id AND TP.track_id = T.track_id AND TP.album_id = T.album_id
GROUP BY T.artist_id, T.album_id, T.track_id, T.track_name",0.9,aso6907,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id"
7801,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id, A.artist_name,
count(*) AS num_albums
FROM album AL
INNER JOIN artist A ON A.artist_id = AL.artist_id
GROUP BY A.artist_id, A.artist_name;",1.0,aso6907,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7802,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(TP.played_on) AS date_played, TP.artist_id, A.artist_name, 
count(DISTINCT(TP.user_id)) AS users,
sum(T.time) AS total_time,
count(DISTINCT(TP.played_on)) AS total_tracks
FROM tracks_played TP
LEFT JOIN track T ON T.artist_id = TP.artist_id AND T.track_id = TP.track_id AND T.album_id = TP.album_id
INNER JOIN artist A on A.artist_id = TP.artist_id
GROUP BY DATE(TP.played_on), TP.artist_id, A.artist_name;",1.0,aso6907,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7803,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id,
count(TP.played_on) as tracks_played,
sum(T.time) as total_time
FROM users U
LEFT JOIN tracks_played TP on TP.user_id = U.user_id
LEFT JOIN track T ON T.track_id = TP.track_id AND T.artist_id = TP.artist_id AND T.album_id = TP.album_id
GROUP BY U.user_id
ORDER BY U.user_id;",1.0,aso6907,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7804,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT A.album_name
FROM track T
INNER JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
GROUP BY A.album_name
HAVING SUM(time) > 60; ",1.0,aso6907,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7805,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT A.album_name, COUNT(track_name) AS num_tracks, SUM(time) AS total_time
FROM track T
INNER JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
GROUP BY A.album_name;",1.0,aso6907,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7806,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(album_name) AS cnt_albums 
FROM album
GROUP BY artist_id;",1.0,aso6907,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7807,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time
FROM track;",1.0,aso6907,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7808,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track;",1.0,aso6907,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7809,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS num_artist
FROM artist;",1.0,aso6907,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7810,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
LEFT OUTER JOIN tracks_played TP ON TP.user_id = U.user_id
WHERE TP.user_id IS NULL",1.0,aso6907,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7811,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT TP.user_id, U.first_name, U.last_name, A.album_name, T.track_name, TP.played_on
FROM tracks_played TP
INNER JOIN users U ON U.user_id = TP.user_id
INNER JOIN album A on A.album_id = TP.album_id
INNER JOIN track T on T.track_id = TP.track_id AND T.artist_id = TP.artist_id
ORDER BY TP.user_id ASC;",1.0,aso6907,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7812,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, AR.artist_id, T.album_id, T.time
FROM track T
INNER JOIN artist AR ON AR.artist_id = T.artist_id
WHERE AR.artist_name = 'The Stone Roses'
ORDER BY T.time ASC;",1.0,aso6907,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7813,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, AR.artist_name, AL.album_name
FROM track T
INNER JOIN artist AR ON AR.artist_id = T.artist_id
INNER JOIN album AL on AL.album_id = T.album_id;",0.7,aso6907,"SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id","SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,"The feedback from the TA was SELECT&nbsp;track_name,&nbsp;artist_name,&nbsp;album_name
FROM&nbsp;track&nbsp;T
&nbsp;&nbsp;JOIN&nbsp;artist&nbsp;R&nbsp;ON&nbsp;T.artist_id&nbsp;=&nbsp;R.artist_id
&nbsp;&nbsp;JOIN&nbsp;album&nbsp;A&nbsp;ON&nbsp;A.album_id&nbsp;=&nbsp;T.album_id&nbsp;AND&nbsp;A.artist_id&nbsp;=&nbsp;T.artist_id"
7814,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, A.artist_id, A.album_id, T.time
FROM track T
INNER JOIN album A ON A.album_id = T.album_id 
AND A.artist_id = T.artist_id
WHERE A.album_name = ""Second Coming"";",1.0,aso6907,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7815,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT AR.artist_id, AR.artist_name, AR.artist_id, AL.album_id, AL.album_name
FROM artist AR
INNER JOIN album AL ON AL.artist_id = AR.artist_id
WHERE AR.artist_name = 'New Order';",1.0,aso6907,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7823,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT * 
FROM track
WHERE track_name LIKE 'love%' OR track_name LIKE '%love'",0.8,aso6907,"SELECT&nbsp;*
FROM&nbsp;track
WHERE track_name LIKE '%love%","SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE track_name LIKE '%love%"
7824,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT * 
FROM track
WHERE artist_id = 1 OR 3 OR 5;

SELECT * 
FROM track
WHERE artist_id IN (1,3,5);",0.7,aso6907,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5"
7825,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT * 
FROM album
WHERE album_name > 'E' AND album_name  <'S'
ORDER BY album_name ASC;",0.8,aso6907,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
7826,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT * 
FROM track
WHERE track_name < 'M'
ORDER BY track_name ASC ;",1.0,aso6907,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7827,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT * 
FROM track
WHERE artist_id = 3 AND album_id = 2;",1.0,aso6907,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7828,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT * 
FROM album
WHERE artist_id = 4;",1.0,aso6907,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7829,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT * 
FROM artist
WHERE artist_name = 'The Rolling Stones';",1.0,aso6907,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7830,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT * 
FROM artist
WHERE artist_id = 5;",1.0,aso6907,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7831,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time ASC
LIMIT 10",1.0,aso6907,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7832,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT artist_id, album_name AS album_title
FROM album",1.0,aso6907,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7833,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name ASC;",1.0,aso6907,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7834,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT * 
FROM track;",1.0,aso6907,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7835,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT * 
FROM album;",1.0,aso6907,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7836,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT * 
FROM artist;",1.0,aso6907,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7872,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"use imdb;

Drop table if exists eligible_male_names;
create temporary table eligible_male_names AS
select first_name, count(*) as cnt 
from actors 
where gender = 'M'
and  first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%'
group by first_name
order by cnt desc;

Drop table if exists eligible_female_names;
create temporary table eligible_female_names AS
select first_name, count(*) as cnt 
from actors 
where gender = 'F'
and  first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%'
group by first_name
order by cnt desc;

Select A.first_name, A.cnt, B.cnt, abs(log(A.cnt/B.cnt)) as ambiguity
from eligible_male_names A 
Inner Join eligible_female_names B ON A.first_name = B.first_name
having A.cnt + B.cnt >= 50
order by ambiguity;
",1.8,wmj4770,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7873,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"use imdb;

Drop table if exists eligible_female_names;
create temporary table eligible_female_names AS
select first_name, count(*) as cnt 
from actors 
where gender = 'F'
and  first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%'
group by first_name
having count(*) >= 50
order by cnt desc;

Drop table if exists male_names;
create temporary table male_names AS
select first_name
from actors 
where gender = 'M'
and  first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%';

Select A.first_name, A.cnt 
from eligible_female_names A
left join male_names B ON A.first_name = B.first_name
where B.first_name is NULL ",1.0,wmj4770,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7874,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"use imdb; 

Drop table if exists eligible_male_names;
create temporary table eligible_male_names AS
select first_name, count(*) as cnt 
from actors 
where gender = 'M'
and  first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%'
group by first_name
having count(*) >= 50
order by cnt desc;

Drop table if exists female_names;
create temporary table female_names AS
select first_name
from actors 
where gender = 'F'
and  first_name not like '%.%'
and first_name not like '%(%'
and first_name not like '%)%';

Select A.first_name, A.cnt 
from eligible_male_names A
left join female_names B ON A.first_name = B.first_name
where B.first_name is NULL ",1.0,wmj4770,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7875,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"use imdb; 

Drop Table if exists eligible_names;
Create temporary table eligible_names as 
	select first_name, count(*)
    From actors
	where first_name not like '%.%'
    and first_name not like '%(%'
    and first_name not like '%)%'
    group by first_name
    having count(*) >= 50;

select * from eligible_names",1.0,wmj4770,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7876,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"Use music;

select A.artist_id, A.album_id, A.track_id, A.track_name, min(played_on) as min_played_on, max(played_on) as max_played_on
from track A
	left outer join tracks_played B on A.artist_id = B.artist_id
    And A.album_id = B.album_id
    And A.track_id = B.track_id
group by
	artist_id, album_id, track_id",1.0,wmj4770,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7877,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"Use music;

select A.artist_id, artist_name, Count(*) as num_albums
	From album A
    inner join artist B On A.artist_id = B.artist_id
    Group by artist_id",1.0,wmj4770,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7878,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"use music; 

Select Date(played_on) as date_played, A.artist_id, artist_name, Count(distinct user_id) as users, Sum(time) as total_time, Count(*) as total_tracks
	From tracks_played A
		inner join track B On A.artist_id = B.artist_id
        And A.album_id = B.album_id
        And A.track_id = B.track_id 
        inner join artist C On B.artist_id = C.artist_id
		group by date_played, artist_id
        order by date_played, artist_id",1.0,wmj4770,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7879,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"Use music;

select C.user_id, Count(played_on) as tracks_played, SUM(time) as total_time
from tracks_played A
	inner join track B on A.artist_id = B.artist_id
    And A.album_id = B.album_id
    And A.track_id = B.track_id
    Right Join users C on C.user_id = A.user_id
group by user_id
order by user_id",1.0,wmj4770,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7880,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"Use music;

select artist_id, album_id, Sum(time) as album_length
from track 
group by artist_id, album_id
Having album_length > 60",1.0,wmj4770,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7881,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"Use music;

select artist_id, album_id, Count(*) as cnt_tracks, Sum(time) as album_length
from track 
group by artist_id, album_id",1.0,wmj4770,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7882,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"Use music;

select artist_id, Count(*) as cnt_albums
from album 
group by artist_id",1.0,wmj4770,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7883,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"Use music;

select 
	AVG(time) as avg_time,
    STDDEV(time) as stddev_time
from track",1.0,wmj4770,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7884,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"Use music;

select Count(*) as num_tracks 
from track",1.0,wmj4770,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7885,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"Use music;

select Count(*) as num_artists 
from artist",1.0,wmj4770,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7886,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"use music; 

select first_name, last_name
From users A
	Left Join tracks_played B ON A.user_id = B.user_id
    Where B.user_id IS NULL",1.0,wmj4770,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7887,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"use music; 

select A.user_id, C.first_name, C.last_name, D.album_name, B. track_name, A.played_on
From tracks_played A
	inner Join track B ON B.track_id = A.track_id
    AND B.album_id  = A.album_id 
    AND B.artist_id = A.artist_id
    inner Join album D ON D.artist_id = B.artist_id
    And D.album_id = B.album_id
    inner Join users C on C.user_id = A.user_id
order by A.user_id, A.played_on",1.0,wmj4770,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7888,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"use music; 

select track_id, track_name, A.artist_id, album_id, time
From track A
	inner join artist B ON A.artist_id = B.artist_id
Where artist_name = 'The Stone Roses' 
Order BY A.time",1.0,wmj4770,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7889,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select track_name, artist_name, album_name
FROM track A
	Inner JOIN album B ON A.artist_id = B.artist_id
    And A.album_id = B.album_id
    Inner Join artist C ON C.artist_id = A.artist_id",1.0,wmj4770,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7890,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"USE music;

select track_id, track_name, B.artist_id, B.album_id, time
FROM track A
	Inner JOIN album B ON A.artist_id = B.artist_id
Where album_name = 'Second Coming'",1.0,wmj4770,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7891,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"USE music;

select *
FROM artist A
	INNER JOIN album B ON A.artist_id = B.artist_id
Where artist_name = 'New Order'",1.0,wmj4770,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7892,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"USE music;

select *
FROM track
WHERE track_name Like 'Love%%'",1.0,wmj4770,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7893,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"OR Boolean Condition
USE music;

select *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5


IN Operation 
USE music;

select *
FROM track
WHERE artist_id IN (1,3,5)",1.0,wmj4770,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7894,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"USE music;

select *
FROM album
WHERE album_name > 'e%%' AND album_name < 's%%'",0.7,wmj4770,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
7895,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"USE music;

select *
FROM track
WHERE track_name <= 'm%%'",1.0,wmj4770,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7896,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"USE music;

select *
FROM track
where artist_id = 3 AND album_id = 2",1.0,wmj4770,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7897,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"USE music;

select *
FROM album
where artist_id = 4",1.0,wmj4770,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7898,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"USE music;

select *
FROM artist
where artist_name = ""The Rolling Stones""",1.0,wmj4770,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7899,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"USE music;

select *
FROM artist
where artist_id = 5",1.0,wmj4770,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7900,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"USE music;

select *
FROM track
ORDER BY time asc
LIMIT 10",1.0,wmj4770,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7901,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"USE music;

select album_name as album_title, artist_id
FROM album",1.0,wmj4770,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7902,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"USE music;

select artist_name 
FROM artist 
ORDER BY artist_name",1.0,wmj4770,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7903,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"USE music;

select * 
FROM track;
",1.0,wmj4770,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7904,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"USE music;

select * 
FROM album;
",1.0,wmj4770,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7905,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"USE music;

select * 
FROM artist;",1.0,wmj4770,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
7924,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"#Note, for completeness I am including the drop table commands as they were helpful when troubleshooting and constructing the temporary tables


DROP TABLE IF EXISTS unisex_names;
CREATE TEMPORARY TABLE unisex_names AS
SELECT first_name, COUNT(*) AS Frequency
FROM actors
WHERE first_name IN (SELECT * FROM eligible_names) 
	AND first_name IN (SELECT * FROM female_names) 
	AND first_name IN (SELECT * FROM male_names)
GROUP BY first_name
;


DROP TABLE IF EXISTS male_num;
CREATE TEMPORARY TABLE male_num AS
SELECT first_name, COUNT(*) AS Frequency_Male
FROM actors
WHERE gender = 'M' AND first_name IN(SELECT first_name FROM unisex_names)
GROUP BY first_name
;


DROP TABLE IF EXISTS female_num;
CREATE TEMPORARY TABLE female_num AS
SELECT first_name, COUNT(*) AS Frequency_Female
FROM actors
WHERE gender = 'F' AND first_name IN(SELECT first_name FROM unisex_names)
GROUP BY first_name
;

SELECT U.first_name, MN.Frequency_Male, FN.Frequency_Female, ROUND(log(MN.Fre",2.0,spk9846,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
7925,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, COUNT(*) AS Frequency
FROM actors
WHERE first_name IN (SELECT * FROM eligible_names) 
	AND first_name IN (SELECT * FROM female_names) 
    AND first_name NOT IN (SELECT * FROM male_names)
GROUP BY first_name
ORDER BY Frequency DESC
;",1.0,spk9846,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
7926,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"#Note, for completeness I am including the drop table commands as they were helpful when troubleshooting and constructing the temporary tables


DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names
SELECT first_name
FROM actors
WHERE gender = 'M' 
;


DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names
SELECT first_name
FROM actors
WHERE gender = 'F' 
;

SELECT first_name, COUNT(*) AS Frequency
FROM actors
WHERE first_name IN (SELECT * FROM eligible_names) 
	AND first_name IN (SELECT * FROM male_names) 
    AND first_name NOT IN (SELECT * FROM female_names)
GROUP BY first_name
ORDER BY Frequency DESC
;",1.0,spk9846,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
7927,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"#Note, for completeness I am including the drop table commands as they were helpful when troubleshooting and constructing the temporary tables


DROP TABLE IF EXISTS eligible_names;
CREATE TEMPORARY TABLE eligible_names AS
SELECT first_name
FROM actors
WHERE first_name NOT LIKE '%.%'
    AND first_name NOT LIKE '%(%)%'
GROUP BY first_name
HAVING COUNT(*)>50
;",1.0,spk9846,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
7928,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS min_played_on ,MAX(played_on) AS max_played_on

FROM track T
	LEFT OUTER JOIN tracks_played TP ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id

GROUP BY artist_id, album_id, track_id
;",1.0,spk9846,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
7929,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT AL.artist_id, AR.artist_name, COUNT(album_id) AS num_albums

FROM album AL
	INNER JOIN artist AR on AR.artist_id = AL.artist_id

GROUP BY artist_id
;",1.0,spk9846,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
7930,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT date(played_on) AS date_played, TP.artist_id, A.artist_name, COUNT(DISTINCT user_id) AS users, SUM(time) AS total_time, COUNT(TP.track_id) AS total_tracks

FROM tracks_played TP
	INNER JOIN track T ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
        INNER JOIN artist A ON A.artist_id = TP.artist_id

GROUP BY date(played_on), artist_id
;",1.0,spk9846,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
7931,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT U.user_id, COUNT(TP.played_on), COALESCE(SUM(T.time), 0)

FROM tracks_played TP
	INNER JOIN track T ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
       RIGHT OUTER JOIN users U ON U.user_id = TP.user_id

GROUP BY U.user_id

ORDER BY user_id
;",1.0,spk9846,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
7932,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT artist_id, album_id, COUNT(track_id) AS count_tracks, SUM(time) AS total_length

FROM track 

GROUP BY artist_id, album_id

HAVING total_length>60
;",1.0,spk9846,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
7933,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT artist_id, album_id, COUNT(track_id) AS count_tracks, SUM(time) AS total_length

FROM track 

GROUP BY artist_id, album_id
;",1.0,spk9846,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
7934,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT( album_id) AS cnt_albums

FROM album

GROUP BY artist_id
;",1.0,spk9846,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
7935,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT AVG(time) AS Avg_Time, STDDEV(time) AS STD_Time
FROM track
;",1.0,spk9846,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
7936,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS Num_Tracks
FROM track
;",1.0,spk9846,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
7937,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS Num_Artists
FROM artist
;
",1.0,spk9846,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
7959,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT U.first_name, U.last_name
FROM users U
	LEFT OUTER JOIN tracks_played TP ON TP.user_id = U.user_id
WHERE TP.played_on IS NULL
;",1.0,spk9846,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
7960,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT U.user_id, U.first_name, U.last_name, AL.album_name, T.track_name, TP.played_on
FROM tracks_played TP
	INNER JOIN users U ON U.user_id = TP.user_id
    INNER JOIN track T ON T.track_id = TP.track_id AND T.album_id = TP.album_id AND T.artist_id = TP.artist_id
    INNER JOIN album AL ON AL.album_id = TP.album_id AND AL.artist_id = TP.artist_id
ORDER BY U.user_id, TP.played_on
;",1.0,spk9846,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
7961,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id, T.album_id, T.time
FROM track T
    INNER JOIN artist AR ON  AR.artist_id = T.artist_id 
WHERE AR.artist_name = 'The Stone Roses'
ORDER BY T.time ASC
;",1.0,spk9846,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
7962,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT T.track_name, AR.artist_name, AL.album_name
FROM track T
	INNER JOIN album AL ON AL.artist_id = T.artist_id AND AL.album_id = T.album_id
    INNER JOIN artist AR ON  AR.artist_id = T.artist_id 
;",1.0,spk9846,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
7963,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT T.track_id, T.track_name, T.artist_id,T.album_id,T.time
FROM track T
	INNER JOIN album AL ON AL.artist_id=T.artist_id AND AL.album_id = T.album_id
WHERE AL.album_name = 'Second Coming' 
;",1.0,spk9846,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
7964,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT AR.artist_id, AR.artist_name, AL.artist_id, AL.album_id, AL.album_name
FROM album AL
	INNER JOIN artist AR ON AR.artist_id = AL.artist_id
WHERE AR.artist_name = 'New Order'
;",1.0,spk9846,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
7972,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT *
FROM track
WHERE track_name LIKE '%love%'
;",1.0,spk9846,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
7973,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 1 OR artist_id = 3 OR artist_id = 5
;



SELECT *
FROM track
WHERE artist_id IN(1,3,5)
;",1.0,spk9846,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
7974,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT *
FROM album
WHERE album_name >'E' AND album_name < 'S'
;",0.7,spk9846,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
7975,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT *
FROM track
WHERE track_name < 'M'
;







",1.0,spk9846,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
7976,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT *
FROM track
WHERE artist_id = 3 AND album_id = 2
;



",1.0,spk9846,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
7977,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT *
FROM album
WHERE artist_id = 4
;




",1.0,spk9846,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
7978,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_name = 'The Rolling Stones'
;





",1.0,spk9846,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
7979,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT *
FROM artist
WHERE artist_id = 5
;




",1.0,spk9846,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
7980,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT *
FROM track
ORDER BY time asc
LIMIT 10
;",1.0,spk9846,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
7981,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT  artist_id, album_name AS album_title
FROM album
;",1.0,spk9846,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
7982,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name ASC
;",1.0,spk9846,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
7983,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT * 
From track;",1.0,spk9846,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
7984,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT * 
From album;",1.0,spk9846,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
7985,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT * 
From artist;",1.0,spk9846,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
8021,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"SELECT e.first_name, COUNT(DISTINCT CASE WHEN a.gender = 'M' THEN a.id END) AS male_frequency,
       COUNT(DISTINCT CASE WHEN a.gender = 'F' THEN a.id END) AS female_frequency,
       ABS(LOG(COUNT(DISTINCT CASE WHEN a.gender = 'M' THEN a.id END) / 
                COUNT(DISTINCT CASE WHEN a.gender = 'F' THEN a.id END))) AS ambiguity_factor
FROM eligible_names e
JOIN actors a ON e.first_name = SUBSTRING_INDEX(a.first_name, ' ', 1)
WHERE a.gender IN ('M', 'F')
GROUP BY e.first_name
ORDER BY ambiguity_factor ASC;",1.6,aht3033,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
8022,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT e.first_name, COUNT(a.id) AS frequency
FROM eligible_names e
LEFT JOIN actors a ON e.first_name = SUBSTRING_INDEX(a.first_name, ' ', 1)
WHERE a.gender = 'F' AND a.first_name NOT IN (
  SELECT SUBSTRING_INDEX(first_name, ' ', 1)
  FROM actors
  WHERE gender = 'M'
)
GROUP BY e.first_name;
",0.8,aht3033,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
8023,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT e.first_name, COUNT(a.id) AS frequency
FROM eligible_names e
LEFT JOIN actors a ON e.first_name = SUBSTRING_INDEX(a.first_name, ' ', 1)
WHERE a.gender = 'M' AND a.first_name NOT IN (
  SELECT SUBSTRING_INDEX(first_name, ' ', 1)
  FROM actors
  WHERE gender = 'F'
)
GROUP BY e.first_name;",0.8,aht3033,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
8024,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names1 AS
SELECT SUBSTRING_INDEX(first_name, ' ', 1) AS first_name
FROM actors
WHERE actors.first_name NOT LIKE '%.%'
  AND actors.first_name NOT LIKE '%(%'
GROUP BY actors.first_name
HAVING COUNT(*) >= 50;",1.0,aht3033,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
8025,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT t.artist_id, t.album_id, tp.track_id, t.track_name,
  MIN(tp.played_on) AS min_played_on,
  MAX(tp.played_on) AS max_played_on
FROM track as t 
iNNER JOIN
  tracks_played as tp ON t.track_id = tp.track_id
GROUP BY
  t.artist_id, t.album_id, tp.track_id, t.track_name
  order by artist_id, album_id, track_id;",1.0,aht3033,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
8026,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select a.artist_id, a.artist_name, count(al.album_id) as num_albums from album as al inner join artist as a
on al.artist_id=a.artist_id group by a.artist_id, a.artist_name
",1.0,aht3033,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
8027,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"
with cte as (
select date(t.played_on) as date_played, t.artist_id, a.artist_name, COUNT(DISTINCT u.user_id) as users,
sum(ta.time) as total_time, count(t.track_id) as total_tracks from 
users as u inner join tracks_played as t
on u.user_id=t.user_id
inner join track as ta
on t.track_id=ta.track_id and t.album_id=ta.album_id and t.artist_id=ta.artist_id
inner join artist as a on ta.artist_id=a.artist_id
group by t.played_on,t.artist_id, a.artist_name)
select date_played,artist_id,artist_name,users, sum(total_time) as total_time,
 sum(total_tracks) as total_time
from cte group by date_played,artist_id,artist_name, users
order by date_played, artist_id, users;",1.0,aht3033,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
8028,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select u.user_id, count(t.track_id) as tracks_played, sum(ta.time) as total_time  from 
users as u inner join tracks_played as t
on u.user_id=t.user_id
inner join track as ta
on t.track_id=ta.track_id and t.album_id=ta.album_id and t.artist_id=ta.artist_id
group by u.user_id order by u.user_id",0.8,aht3033,"


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id






"
8029,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select a.album_id from album as a
inner join track as t 
on a.album_id=t.album_id and a.artist_id=t.artist_id
group by a.album_id having sum(t.time)>60;",0.8,aht3033,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
8030,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT  album_id, COUNT(*) AS track_count, SUM(time) AS total_length
                                             -> FROM track
                                             -> GROUP BY album_id;
+----------+-------------+--------------+
| album_id | track_count | total_length |
+----------+-------------+--------------+
|        1 |          80 |       379.63 |
|        2 |          14 |       106.15 |
|        3 |          14 |        78.22 |
|        4 |          15 |        77.36 |
|        5 |           8 |        42.62 |
|        6 |          12 |        74.27 |
|        7 |          10 |        43.78 |
+----------+-------------+--------------+",0.8,aht3033,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
8031,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question," SELECT artist_id, COUNT(album_id) AS cnt_albums FROM album GROUP BY artist_id;
+-----------+------------+
| artist_id | cnt_albums |
+-----------+------------+
|         1 |          7 |
|         2 |          1 |
|         3 |          2 |
|         4 |          1 |
|         5 |          1 |
|         6 |          1 |
+-----------+------------+",1.0,aht3033,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
8032,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select avg(time) as avg_time, std(time) as std_time from track;
+----------+-------------------+
| avg_time | std_time          |
+----------+-------------------+
| 5.242026 | 2.163728432900637 |
+----------+-------------------+",1.0,aht3033,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
8033,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) as no_of_tracks from track;,1.0,aht3033,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
8034,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"select count(*) as number_of_artists from artist;
+-------+
| count |
+-------+
|     6 |
+-------+",1.0,aht3033,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
8035,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT distinct first_name, last_name
                                             -> FROM users
                                             -> where user_id NOT IN (SELECT DISTINCT user_id FROM tracks_played);
+------------+-----------+
| first_name | last_name |
+------------+-----------+
| Melissa    | Mitchell  |
| Seth       | Fuente    |
+------------+-----------+",1.0,aht3033,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
8036,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT u.user_id, u.first_name, u.last_name, a.album_name, ta.track_name, tp.played_on
FROM users as u 
INNER JOIN tracks_played as tp
    ON u.user_id=tp.user_id
inner join album as a
	on tp.album_id=a.album_id and tp.artist_id=a.artist_id
inner join track as ta
    on tp.track_id = ta.track_id and tp.artist_id=ta.artist_id and tp.album_id=ta.album_id
    order by u.user_id asc;",1.0,aht3033,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
8037,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"
 MySQL  db.ipeirotis.org:3306 ssl  music  SQL > SELECT t.track_id,t.track_name, ast.artist_id, t.album_id, t.time
                                             -> FROM track as t
                                             -> INNER JOIN artist as ast
                                             ->     ON t.artist_id=ast.artist_id
                                             ->     where ast.artist_name='The Stone Roses' order by t.time asc;
+----------+----------------------+-----------+----------+-------+
| track_id | track_name           | artist_id | album_id | time  |
+----------+----------------------+-----------+----------+-------+
|        4 | Your Star Will Shine |         5 |        1 |  2.99 |
|        5 | Straight To The Man  |         5 |        1 |  3.26 |
|        7 | Tightrope            |         5 |        1 |  4.45 |
|        2 | Ten Storey Love Song |         5 |        1 |  4.50 |
|        6 | Begging You          |         5 |        1 |  4.94 |
|   ",1.0,aht3033,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
8038,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"> SELECT t.track_name, ast.artist_name, al.album_name
                                             -> FROM track as t
                                             -> INNER JOIN album as al
                                             ->     ON t.artist_id=al.artist_id and t.album_id=al.album_id
                                             -> INNER JOIN artist as ast
                                             ->     ON al.artist_id= ast.artist_id;
+----------------------------------------------------------------------+---------------------------+------------------------------------------+
| track_name                                                           | artist_name               | album_name                               |
+----------------------------------------------------------------------+---------------------------+------------------------------------------+
| Elegia                                                               | New Order                 | Retro",1.0,aht3033,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
8039,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select t.track_id, t.track_name, a.artist_id, a.album_id, t.time from track as t inner join
                                             -> album as a on t.artist_id=a.artist_id where
                                             -> a.album_name='Second Coming';
+----------+----------------------+-----------+----------+-------+
| track_id | track_name           | artist_id | album_id | time  |
+----------+----------------------+-----------+----------+-------+
|        0 | Breaking Into Heaven |         5 |        1 | 11.37 |
|        1 | Driving South        |         5 |        1 |  5.17 |
|        2 | Ten Storey Love Song |         5 |        1 |  4.50 |
|        3 | Daybreak             |         5 |        1 |  6.56 |
|        4 | Your Star Will Shine |         5 |        1 |  2.99 |
|        5 | Straight To The Man  |         5 |        1 |  3.26 |
|        6 | Begging You          |         5 |        1 |  4.94 |
|      ",1.0,aht3033,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
8040,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select a.artist_id, b.artist_name, b.artist_id, a.album_id, a.album_name from album as a inner join artist as b on a.artist_id=b.artist_id where b.artist_name='New Order';
+-----------+-------------+-----------+----------+------------------------------------------+
| artist_id | artist_name | artist_id | album_id | album_name                               |
+-----------+-------------+-----------+----------+------------------------------------------+
|         1 | New Order   |         1 |        1 | Retro - John McCready FAN                |
|         1 | New Order   |         1 |        2 | Substance (Disc 2)                       |
|         1 | New Order   |         1 |        3 | Retro - Miranda Sawyer POP               |
|         1 | New Order   |         1 |        4 | Retro - New Order / Bobby Gillespie LIVE |
|         1 | New Order   |         1 |        5 | Power, Corruption & Lies                 |
|         1 | New Order   |         1 |        6 | Substance 1987 (",1.0,aht3033,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
8041,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from track where track_name like '%love%';
+-----------+----------+----------+-----------------------------+------+
| artist_id | album_id | track_id | track_name                  | time |
+-----------+----------+----------+-----------------------------+------+
|         1 |        3 |        7 | Bizarre Love Triangle       | 4.35 |
|         1 |        6 |       10 | Bizarre Love Triangle       | 6.74 |
|         1 |        7 |        4 | Bizarre Love Triangle       | 4.37 |
|         2 |        1 |        0 | Do You Love Me?             | 5.95 |
|         2 |        1 |        2 | Loverman                    | 6.37 |
|         2 |        1 |        5 | I Let Love In               | 4.25 |
|         2 |        1 |        9 | Do You Love Me? (Part Two)  | 6.23 |
|         5 |        1 |        2 | Ten Storey Love Song        | 4.50 |
|         5 |        1 |       11 | Love Spreads                | 5.79 |
|         6",0.9,aht3033,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
8042,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from track where artist_id in (1,3,5);
+-----------+----------+----------+----------------------------------------------------------------------+-------+
| artist_id | album_id | track_id | track_name                                                           | time  |
+-----------+----------+----------+----------------------------------------------------------------------+-------+
|         1 |        1 |        0 | Elegia                                                               |  4.93 |
|         1 |        1 |        1 | In A Lonely Place                                                    |  6.26 |
|         1 |        1 |        2 | Procession                                                           |  4.47 |
|         1 |        1 |        3 | Your Silent Face                                                     |  5.99 |
|         1 |        1 |        4 | Sunrise                                                ",0.9,aht3033,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
8043,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select album_name from album where album_name>'E' and album_name<'S';
+------------------------------------------+
| album_name                               |
+------------------------------------------+
| Retro - John McCready FAN                |
| Retro - Miranda Sawyer POP               |
| Retro - New Order / Bobby Gillespie LIVE |
| Power, Corruption & Lies                 |
| Let Love In                              |
| Live Around The World                    |
| In A Silent Way                          |
| Exile On Main Street                     |
| Light Years                              |
+------------------------------------------+",0.9,aht3033,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,
8044,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > SELECT track_name FROM track WHERE track_name < 'M';
+----------------------------------------------------------------------+
| track_name                                                           |
+----------------------------------------------------------------------+
| Elegia                                                               |
| In A Lonely Place                                                    |
| Let's Go                                                             |
| Broken Promise                                                       |
| Dreams Never End                                                     |
| Cries And Whispers                                                   |
| All Day Long                                                         |
| Leave Me Alone                                                       |
| Lonesome Tonight                                                     |
| Every Li",0.9,aht3033,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
8045,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select track_name from track where artist_id=3 and album_id=2;
+--------------------------------------+
| track_name                           |
+--------------------------------------+
| Shhh/Peaceful                        |
| In A Silent Way/It's About That Time |
+--------------------------------------+",0.9,aht3033,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
8046,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select album_name from album where artist_id=4;
+----------------------+
| album_name           |
+----------------------+
| Exile On Main Street |
+----------------------+",0.9,aht3033,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
8047,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from artist where artist_name='The Rolling Stones';
+-----------+--------------------+
| artist_id | artist_name        |
+-----------+--------------------+
|         4 | The Rolling Stones |
+-----------+--------------------+",0.9,aht3033,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
8048,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from artist where artist_id=5;
+-----------+-----------------+
| artist_id | artist_name     |
+-----------+-----------------+
|         5 | The Stone Roses |
+-----------+-----------------+",0.9,aht3033,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
8049,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select track_id, track_name, artist_id, album_id, time from track order by time asc limit 10;
+----------+-----------------------------------------------------+-----------+----------+------+
| track_id | track_name                                          | artist_id | album_id | time |
+----------+-----------------------------------------------------+-----------+----------+------+
|       11 | Intermission By Alan Wise [Olympia, Paris 12/11/01] |         1 |        4 | 1.34 |
|        0 | In A Silent Way                                     |         3 |        1 | 1.81 |
|        1 | Rip This Joint                                      |         4 |        1 | 2.38 |
|       10 | Turd On The Run                                     |         4 |        1 | 2.64 |
|        3 | Jangling Jack                                       |         2 |        1 | 2.78 |
|        8 | Full Nelson                                         |       ",0.9,aht3033,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
8050,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select artist_id,album_name as album_title from album;
+-----------+------------------------------------------+
| artist_id | album_title                              |
+-----------+------------------------------------------+
|         1 | Retro - John McCready FAN                |
|         1 | Substance (Disc 2)                       |
|         1 | Retro - Miranda Sawyer POP               |
|         1 | Retro - New Order / Bobby Gillespie LIVE |
|         1 | Power, Corruption & Lies                 |
|         1 | Substance 1987 (Disc 1)                  |
|         1 | Brotherhood                              |
|         2 | Let Love In                              |
|         3 | Live Around The World                    |
|         3 | In A Silent Way                          |
|         4 | Exile On Main Street                     |
|         5 | Second Coming                            |
|         6 | Light Years ",0.9,aht3033,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
8051,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select artist_name from artist order by artist_name;
+---------------------------+
| artist_name               |
+---------------------------+
| Kylie Minogue             |
| Miles Davis               |
| New Order                 |
| Nick Cave & The Bad Seeds |
| The Rolling Stones        |
| The Stone Roses           |
+---------------------------+
6 rows in set (0.0746 sec)",0.9,aht3033,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
8052,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from track;
+-----------+----------+----------+----------------------------------------------------------------------+-------+
| artist_id | album_id | track_id | track_name                                                           | time  |
+-----------+----------+----------+----------------------------------------------------------------------+-------+
|         1 |        1 |        0 | Elegia                                                               |  4.93 |
|         1 |        1 |        1 | In A Lonely Place                                                    |  6.26 |
|         1 |        1 |        2 | Procession                                                           |  4.47 |
|         1 |        1 |        3 | Your Silent Face                                                     |  5.99 |
|         1 |        1 |        4 | Sunrise                                                              |  6.01 |
| ",0.9,aht3033,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
8053,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from album;
+-----------+----------+------------------------------------------+
| artist_id | album_id | album_name                               |
+-----------+----------+------------------------------------------+
|         1 |        1 | Retro - John McCready FAN                |
|         1 |        2 | Substance (Disc 2)                       |
|         1 |        3 | Retro - Miranda Sawyer POP               |
|         1 |        4 | Retro - New Order / Bobby Gillespie LIVE |
|         1 |        5 | Power, Corruption & Lies                 |
|         1 |        6 | Substance 1987 (Disc 1)                  |
|         1 |        7 | Brotherhood                              |
|         2 |        1 | Let Love In                              |
|         3 |        1 | Live Around The World                    |
|         3 |        2 | In A Silent Way                          |
|         4 |        1 | Exile On",0.9,aht3033,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
8054,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question," MySQL  db.ipeirotis.org:3306 ssl  music  SQL > select * from artist;
+-----------+---------------------------+
| artist_id | artist_name               |
+-----------+---------------------------+
|         1 | New Order                 |
|         2 | Nick Cave & The Bad Seeds |
|         3 | Miles Davis               |
|         4 | The Rolling Stones        |
|         5 | The Stone Roses           |
|         6 | Kylie Minogue             |
+-----------+---------------------------+",0.9,aht3033,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
8089,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"##eligible names for both males and females
drop table if exists eligible_both_gender;
create temporary table eligible_both_gender as
select first_name from 
(select distinct EN.first_name as first_name, count(distinct gender) num_gender from eligible_names EN
inner join actors AC on EN.first_name = AC.first_name
group by EN.first_name
having num_gender >1) A;


##Male Frequency
drop table if exists male_freq;
create temporary table male_freq as
select EB.first_name, count(*) as cnt_male
from eligible_both_gender EB
inner join actors AC on EB.first_name = AC.first_name
where gender = ""M""
group by EB.first_name;

##Female Frequency
drop table if exists female_freq;
create temporary table female_freq as
select EB.first_name, count(*) as cnt_female
from eligible_both_gender EB
inner join actors AC on EB.first_name = AC.first_name
where gender = ""F""
group by EB.first_name;

##Check male and female frequency
select * from male_freq;
select * from female_freq;
",2.0,wyt8723,,"SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,
8090,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"select * from eligible_names
where first_name not in 
	(select first_name from actors where gender = ""M"");",1.0,wyt8723,,"
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,
8091,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"select * from eligible_names
where first_name not in 
	(select first_name from actors where gender = ""F"");",1.0,wyt8723,,"DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,
8092,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"drop table if exists eligible_names;
create temporary table eligible_names as
select first_name, count(first_name) as num_first_name from actors
where first_name not like ""%.%""
and first_name not like ""%(%""
group by first_name
having num_first_name >=50
order by num_first_name desc;
",1.0,wyt8723,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
8093,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"select TR.artist_id, TR.album_id, TR.track_id, TR.track_name, min(played_on) as min_played_on, max(played_on) as max_played_on
from track as TR
	 left join tracks_played as TP
        on TR.artist_id = TP.artist_id
        and TR.album_id = TP.album_id
        and TR.track_id = TP.track_id
group by TR.artist_id, TR.album_id, TR.track_id, TR.track_name;",1.0,wyt8723,,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,
8094,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"select AR.artist_id, AR.artist_name, count(album_id) as num_albums 
from artist as AR
inner join album as AL on AR.artist_id = AL.artist_id
group by AR.artist_id, AR.artist_name;",1.0,wyt8723,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
8095,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"select date(played_on) as date_played
, TP.artist_id
, AR.artist_name
, count(distinct user_id) as users
, sum(TR.time) as total_time
, count(track_name) as total_tracks 
from tracks_played as TP
	inner join artist as AR 
		on TP.artist_id = AR.artist_id
	inner join track as TR 
		on TP.artist_id = TR.artist_id 
               and TP.album_id = TR.album_id
               and TP.track_id = TR.track_id
group by date_played, TP.artist_id, AR.artist_name
order by date_played;

",1.0,wyt8723,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
8096,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"select US.user_id, count(TR.track_id) as tracks_played, sum(TR.time) as total_time 
from users as US
	left join tracks_played as TP on US.user_id = TP.user_id
	left join track as TR 
		on TP.artist_id = TR.artist_id 
		and TP.album_id = TR.album_id 
		and TP.track_id = TR.track_id
group by US.user_id;


Alternative query with coalesce: 
select US.user_id, count(TR.track_id) as tracks_played, coalesce(sum(TR.time),0.00) as total_time 
from users as US
	left join tracks_played as TP on US.user_id = TP.user_id
	left join track as TR 
		on TP.artist_id = TR.artist_id 
		and TP.album_id = TR.album_id 
		and TP.track_id = TR.track_id
group by US.user_id;
",1.0,wyt8723,,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,
8097,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"select artist_id, album_id, count(track_name) as num_tracks, sum(time) as total_length 
from track
group by artist_id, album_id
having sum(time)> 60;",1.0,wyt8723,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
8098,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"select artist_id, album_id, count(track_name) as num_tracks, sum(time) as total_length 
from track
group by artist_id, album_id;",1.0,wyt8723,,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,
8099,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"select artist_id, count(album_name) as cnt_albums 
from album
group by artist_id;",1.0,wyt8723,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
8100,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"select round(avg(time),6) as avg_time, round(stddev(time),6) as std_time 
from track;",1.0,wyt8723,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
8101,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,select count(*) as num_tracks from track;,1.0,wyt8723,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
8102,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,select count(*) as num_artists from artist;,1.0,wyt8723,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
8103,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"select US.first_name, US.last_name from users US
left join tracks_played TP on US.user_id = TP.user_id
where TP.user_id is null;",1.0,wyt8723,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
8104,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"select TP.user_id, US.first_name, US.last_name, AL.album_name, TR.track_name, TP.played_on 
from tracks_played TP
	Inner join users US on TP.user_id =  US.user_id
       Inner join album AL on TP.artist_id = AL.artist_id and TP.album_id = AL.album_id
       Inner join track TR on TP.artist_id = TR.artist_id and TP.album_id = TR.album_id and TP.track_id = TR.track_id
       Order by TP.user_id, TP.played_on;",1.0,wyt8723,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
8105,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"Select TR.track_id, TR.track_name, TR.artist_id, TR.album_id, TR.time from track TR
    Inner join artist AR on TR.artist_id = AR.artist_id
    Where AR.artist_name = 'The Stone Roses'
    Order by time;",1.0,wyt8723,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
8106,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"select TR.track_name, AR.artist_name, AL.album_name 
from track TR
	Inner join album AL on TR.artist_id = AL.artist_id and TR.album_id = AL.album_id
	Inner join artist AR on TR.artist_id = AR.artist_id;",1.0,wyt8723,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
8107,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"select TR.track_id, TR.track_name, AL.artist_id, AL.album_id, TR.time 
from track TR
Inner join album AL
ON TR.artist_id = AL.artist_id and TR.album_id = AL.album_id
Where AL.album_name = ""Second Coming"";",1.0,wyt8723,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
8108,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"select * 
from artist AR
Inner Join album AL
on AR.artist_id = AL.artist_id
where AR.artist_name = 'New Order';",1.0,wyt8723,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
8109,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"select * from track
where track_name like '%love%';",1.0,wyt8723,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
8110,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"Variation 1: using the OR boolean condition: 

select * from track
where artist_id = 1
or artist_id = 3
or artist_id = 5;


Variation 2: using the IN operation: 
select * from track
where artist_id in (1,3,5)
",1.0,wyt8723,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,
8111,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"select * from track
where track_name >= ""F""
and track_name < ""S""
order by track_name;",0.7,wyt8723,"


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was 


Answer Key







SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'






"
8112,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"select * from track
where track_name < ""M""
order by track_name;",1.0,wyt8723,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
8113,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"select * from track
where artist_id = 3 
and album_id = 2;

artist_id    album_id   track_id        track_name                                          time
3	               2	         0	            Shhh/Peaceful                                     16.67
3	               2	         1	            In A Silent Way/It's About That Time	16.67",1.0,wyt8723,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
8114,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"select * from album
where artist_id = 4;

artist_id    album_id      album_name
4	             1	         Exile On Main Street




alternative query: 
select artist_name, b.* from artist a
left join album b
on a.artist_id = b.artist_id
where a.artist_id = 4;",1.0,wyt8723,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
8115,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"select * from artist
where artist_name = ""The Rolling Stones"";


artist_id     artist_name
4	            The Rolling Stones",1.0,wyt8723,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
8116,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"select * from artist
where artist_id = 5;

artist_id     artist_name
5	           The Stone Roses",1.0,wyt8723,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
8117,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"select 
track_id, 
track_name, 
artist_id, 
album_id
from track
order by time
limit 10;

",1.0,wyt8723,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
8118,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"select 
artist_id, 
album_name as album_title 
from album;",1.0,wyt8723,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
8119,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"select artist_name from artist
order by artist_name;",1.0,wyt8723,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
8120,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"select 
track_id, 
track_name, 
artist_id, 
album_id, 
time 
from track;",1.0,wyt8723,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
8121,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,select * from album;,1.0,wyt8723,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
8122,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"use music;
select * from artist;
",1.0,wyt8723,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
8172,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,793","For eligible names that appear for both males and females, report the names and the frequencies for males and females. Rank the most ambiguous names on top. We consider as most ambiguous names the ones where the formula log( male_freq / female_freq ) is close to 0. Remember that the log can be positive and negative; ranking by absolute value (using the&#160;ABS() function) will allow you to rank the smallest numbers first.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, gender,
COUNT(*) AS male_freq
	FROM actors
	WHERE first_name NOT LIKE '%.%'
	AND first_name NOT LIKE '%(&'
	AND first_name NOT LIKE '%)%'
    AND gender = 'M'
	GROUP BY first_name, gender
	HAVING male_freq >= 50;
    
 SELECT first_name, cnt_male
    FROM male_names
    WHERE first_name = 'Richard';  

DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS
SELECT first_name, gender, 
COUNT(*) AS female_freq
	FROM actors
	WHERE first_name NOT LIKE '%.%'
	AND first_name NOT LIKE '%(&'
	AND first_name NOT LIKE '%)%'
    AND gender = 'F'
	GROUP BY first_name, gender
	HAVING female_freq >= 50;

SELECT M.first_name, M.male_freq, F.female_freq, 
ABS(LOG(M.male_freq/F.female_freq)) AS ambiguity_score
FROM male_names M JOIN female_names F ON  M.first_name = F.first_name
GROUP BY M.first_name
ORDER  BY ambiguity_score DESC;",1.6,amd9210,"


Answer Key







SELECT M.first_name
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt AS male_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , F.cnt AS female_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt/F.cnt AS ratio
&nbsp; &nbsp; &nbsp; &nbsp; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&nbsp;
&nbsp; &nbsp; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)






","SELECT M.first_name
&#160; &#160; &#160; &#160; , M.cnt AS male_cnt
&#160; &#160; &#160; &#160; , F.cnt AS female_cnt
&#160; &#160; &#160; &#160; , M.cnt/F.cnt AS ratio
&#160; &#160; &#160; &#160; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&#160;
&#160; &#160; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)",True,imdb,2.0,"The feedback from the TA was 


Answer Key







SELECT M.first_name
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt AS male_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , F.cnt AS female_cnt
&nbsp; &nbsp; &nbsp; &nbsp; , M.cnt/F.cnt AS ratio
&nbsp; &nbsp; &nbsp; &nbsp; , LOG10(M.cnt/F.cnt) AS log_odds
FROM male_names M&nbsp;
&nbsp; &nbsp; JOIN female_names F ON F.first_name = M.first_name
ORDER BY ABS(log_odds)






"
8173,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,791","Find the eligible names that appear only for female actors but for no male actresses, and report the corresponding frequencies.",Long Answer Question,"SELECT first_name, cnt
FROM eligible_names E
	WHERE E.first_name NOT IN (
		SELECT M.first_name
        FROM male_names M
        WHERE gender = 'M'
)
ORDER BY cnt DESC;",0.8,amd9210,"DROP TABLE IF EXISTS male_names;&nbsp;
CREATE TEMPORARY TABLE male_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'M'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&nbsp;
CREATE TEMPORARY TABLE female_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'F'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;

<code","
DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name",True,imdb,1.0,"The feedback from the TA was DROP TABLE IF EXISTS male_names;&nbsp;
CREATE TEMPORARY TABLE male_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'M'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;



DROP TABLE IF EXISTS female_names;&nbsp;
CREATE TEMPORARY TABLE female_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'F'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;

<code"
8174,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,790","Find the eligible names that appear only for male actors but for no female actresses, and report the corresponding frequencies.",Long Answer Question,"DROP TABLE IF EXISTS male_names;
CREATE TEMPORARY TABLE male_names AS
SELECT first_name, gender,
COUNT(*) AS cnt
	FROM actors
	WHERE first_name NOT LIKE '%.%'
	AND first_name NOT LIKE '%(&'
	AND first_name NOT LIKE '%)%'
    AND gender = 'M'
	GROUP BY first_name, gender
	HAVING cnt >= 50;

DROP TABLE IF EXISTS female_names;
CREATE TEMPORARY TABLE female_names AS
SELECT first_name, gender, 
COUNT(*) AS cnt
	FROM actors
	WHERE first_name NOT LIKE '%.%'
	AND first_name NOT LIKE '%(&'
	AND first_name NOT LIKE '%)%'
    AND gender = 'F'
	GROUP BY first_name, gender
	HAVING cnt >= 50;


SELECT first_name, cnt
FROM eligible_names E
	WHERE E.first_name NOT IN (
		SELECT F.first_name
        FROM female_names F
        WHERE gender = 'F'
)
AND E.first_name IN (
		SELECT M.first_name
        FROM male_names M
        WHERE gender = 'M'	)
ORDER BY cnt DESC;",0.8,amd9210,"


Answer Key







DROP TABLE IF EXISTS male_names;&nbsp;
CREATE TEMPORARY TABLE male_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'M'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&nbsp;
CREATE TEMPORARY TABLE female_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eli","DROP TABLE IF EXISTS male_names;&#160;
CREATE TEMPORARY TABLE male_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;M&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&#160;
CREATE TEMPORARY TABLE female_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name IN (SELECT first_name FROM eligible_names)
&#160; &#160; &#160; &#160; AND gender = &#39;F&#39;&#160;
&#160; &#160; GROUP BY first_name
&#160; &#160; ORDER BY cnt DESC;

<code",True,imdb,1.0,"The feedback from the TA was 


Answer Key







DROP TABLE IF EXISTS male_names;&nbsp;
CREATE TEMPORARY TABLE male_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eligible_names)
&nbsp; &nbsp; &nbsp; &nbsp; AND gender = 'M'&nbsp;
&nbsp; &nbsp; GROUP BY first_name
&nbsp; &nbsp; ORDER BY cnt DESC;
DROP TABLE IF EXISTS female_names;&nbsp;
CREATE TEMPORARY TABLE female_names AS
&nbsp; &nbsp; SELECT first_name, COUNT(*) AS cnt
&nbsp; &nbsp; FROM actors
&nbsp; &nbsp; WHERE first_name IN (SELECT first_name FROM eli"
8175,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 5: Advanced Queries,"301,301",1,"5,119,787","As a first step, limit your analysis only to first names that do not include a dot &quot;.&quot; or parentheses (i.e, ignore &quot;A.&quot;, &quot;J.B.&quot;, &quot;Alfred (I)&quot; etc); also only consider first names that appear at least 50 times in the actors table (across both genders). Create a temporary table with the results, called &quot;eligible_names&quot;. (You will use the table in later questions)",Long Answer Question,"CREATE TEMPORARY TABLE eligible_names AS
	SELECT first_name, gender,
	COUNT(*) AS cnt
	FROM actors
	WHERE first_name NOT LIKE '%.%'
	AND first_name NOT LIKE '%(&'
	AND first_name NOT LIKE '%)%'
	GROUP BY first_name, gender
	HAVING cnt >= 50;",1.0,amd9210,,"DROP TABLE IF EXISTS eligible_names;&#160;
CREATE TEMPORARY TABLE eligible_names AS
&#160; &#160; SELECT first_name, COUNT(*) AS cnt
&#160; &#160; FROM actors
&#160; &#160; WHERE first_name NOT LIKE &#39;%.%&#39;&#160;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%(%&#39;
&#160; &#160; &#160; &#160; AND first_name NOT LIKE &#39;%)%&#39;
&#160; &#160; GROUP BY first_name
&#160; &#160; HAVING cnt &gt;= 50
&#160; &#160; ORDER BY cnt DESC;",True,imdb,2.0,
8176,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,736",Show the name of each track and the first and last time it was played. Include tracks that were not played at all.&#160;,Long Answer Question,"SELECT P.artist_id AS artist_id, P.album_id AS album_id, P.track_id AS track_id, T.track_name as track_name, 
MIN(played_on) AS min_played_on,
MAX(played_on) AS max_played_on
FROM tracks_played P
INNER JOIN track T ON P.artist_id=T.artist_id AND P.album_id=T.album_id AND P.track_id=T.track_id
GROUP BY artist_id, album_id, track_id, track_name;",0.9,amd9210,"SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id","SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &#160;
&#160; &#160; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id",True,music,1.0,"The feedback from the TA was SELECT T.artist_id, T.album_id, T.track_id, T.track_name, MIN(played_on) AS first_played, MAX(played_on) AS last_played
FROM track T &nbsp;
&nbsp; &nbsp; LEFT JOIN tracks_played P ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY T.artist_id, T.album_id, T.track_id"
8177,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,735",Show the name of the artist and the number of albums for each artist in the database. Name the column that shows the number of albums as num_albums.,Long Answer Question,"SELECT A.artist_id AS artist_id, R.artist_name AS artist_name, COUNT(*) AS num_albums
FROM album A
INNER JOIN artist R ON A.artist_id=R.artist_id
GROUP BY artist_id, artist_name;",1.0,amd9210,,"#&#160;You&#160;can&#160;get&#160;the&#160;same&#160;result&#160;without&#160;the&#160;artist_id
#&#160;and&#160;without&#160;artist_id&#160;is&#160;also&#160;a&#160;correct&#160;answer.
SELECT&#160;R.artist_id,&#160;R.artist_name,&#160;COUNT(*)&#160;AS&#160;num_albums
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
GROUP&#160;BY&#160;R.artist_id,&#160;R.artist_name",True,music,1.0,
8178,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,734","For every date listed in the tracked_played table, show the artist&#39;s name, the artist id, the number of users that listened to the artist, and the total amount of time users listened to the artist. Assume that each track is played fully.",Long Answer Question,"SELECT DATE(P.played_on) AS date_played, R.artist_name AS artist_name, R.artist_id AS artist_id, COUNT(DISTINCT P.user_id) AS users, SUM(T.time) AS total_time, COUNT(P.track_id) AS total_tracks
FROM tracks_played P
INNER JOIN track T ON P.artist_id=T.artist_id AND P.album_id=T.album_id AND P.track_id=T.track_id
INNER JOIN album A ON A.artist_id=T.artist_id AND A.album_id=T.album_id
INNER JOIN artist R	ON A.artist_id=R.artist_id
GROUP BY date_played, P.artist_id, artist_name;",1.0,amd9210,,"SELECT DATE(played_on) AS date_played, A.artist_id, A.artist_name
&#160; &#160; &#160; &#160; , COUNT(DISTINCT user_id) AS users
&#160; &#160; &#160; &#160; , SUM(T.time) AS total_time
&#160; &#160; &#160; &#160; , COUNT(*) AS total_tracks
FROM tracks_played P
&#160; &#160; JOIN artist A ON P.artist_id = A.artist_id
&#160; &#160; JOIN track T ON P.track_id = T.track_id AND P.album_id = T.album_id AND P.artist_id = T.artist_id
GROUP BY date_played, A.artist_id
ORDER BY date_played, A.artist_id;",True,music,1.0,
8179,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,733","For every user, show the total tracks they played and the total amount of time they listened. Assume that each track is played fully. List also the users that have not played any track",Long Answer Question,"SELECT user_id, COUNT(*) AS total_tracks_played, SUM(time) AS total_time
FROM tracks_played P
	LEFT OUTER JOIN track T ON P.artist_id=T.artist_id AND P.album_id=T.album_id AND P.track_id=T.track_id
GROUP BY user_id;",0.8,amd9210,"SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id","SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&#160; &#160; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id

20% off if there is no left join and users 6 and 9 are missing
10% off if there is a left join, but the tracks_played for users 6 and 9 is listed as 1 instead of 0 (ie. they used COUNT(*) instead of COUNT(T.track_id)",True,music,1.0,"The feedback from the TA was SELECT U.user_id, COUNT(T.track_id) AS tracks_played, SUM(T.time) AS total_time
FROM users U
&nbsp; &nbsp; LEFT JOIN tracks_played P ON U.user_id = P.user_id
&nbsp; &nbsp; LEFT JOIN track T ON T.artist_id = P.artist_id AND T.album_id = P.album_id AND T.track_id = P.track_id
GROUP BY U.user_id
ORDER BY U.user_id"
8180,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,732","List the IDs of the albums, where the total album length (across all the album&#39;s tracks) is longer than 60 minutes.",Long Answer Question,"SELECT album_id, artist_id, 
	SUM(time) AS total_time
FROM track
GROUP BY album_id, artist_id
HAVING total_time > 60
ORDER BY total_time DESC;",1.0,amd9210,,"SELECT artist_id, album_id, SUM(time) AS total_time
FROM&#160;track
GROUP&#160;BY&#160;artist_id,&#160;album_id
HAVING&#160;SUM(time)&#160;&gt;&#160;60",True,music,1.0,
8181,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,731","For each album, count the number of tracks for that album and the total length of all the tracks in the album. You only need to show the primary key of the album, not its name.",Long Answer Question,"SELECT album_id, artist_id, COUNT(*) AS num_tracks
FROM track
GROUP BY album_id, artist_id;",0.9,amd9210,"SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id","SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id",True,music,1.0,"The feedback from the TA was SELECT artist_id, album_id, COUNT(track_id) AS cnt_tracks, SUM(time) AS total_time
FROM track
GROUP BY artist_id, album_id"
8182,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,730","For each artist, count the number of albums in the database. You only need to show the id of the artist, not the name of the artist.",Long Answer Question,"SELECT artist_id, COUNT(*) AS num_albums
FROM album
GROUP BY artist_id;",1.0,amd9210,,"SELECT artist_id, COUNT(album_id) AS cnt_albums
FROM album
GROUP BY artist_id",True,music,1.0,
8183,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,729",Show the average and standard deviation of the track length,Long Answer Question,"SELECT ROUND(AVG(time),6) AS avg_length, ROUND(STDDEV(time),6) AS stddev_length
FROM track;",1.0,amd9210,,"SELECT AVG(time) AS avg_time, STDDEV(time) AS std_time&#160;
FROM&#160;track",True,music,1.0,
8184,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,728",Count the number of tracks in the database,Long Answer Question,"SELECT COUNT(*) AS num_tracks
FROM track;",1.0,amd9210,,"SELECT COUNT(*) AS cnt
FROM&#160;track",True,music,1.0,
8185,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 4: Aggregations,"301,300",1,"5,119,727","Count the number of artists in the database
",Long Answer Question,"SELECT COUNT(*) AS num_srtists
FROM artist;",1.0,amd9210,,"SELECT COUNT(*) AS cnt
FROM&#160;artist",True,music,1.0,
8186,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,726",List the first and last names of the users that have not listened to any tracks.,Long Answer Question,"SELECT first_name, last_name
FROM users U
LEFT OUTER JOIN tracks_played TP ON TP.user_id = U.user_id
WHERE TP.track_id IS NULL;",1.0,amd9210,,"SELECT U.first_name, U.last_name
FROM users U&#160;
&#160; &#160; LEFT JOIN tracks_played P ON U.user_id = P.user_id&#160;
WHERE P.user_id IS NULL",True,music,1.0,
8187,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,725","The table tracks_played contains the tracks the users listened to and the time they listened to the songs. For every track listed in the tracks_played table, show the user&#39;s first and last name, the user id, the album name, the track name, and the date/time it was played.",Long Answer Question,"SELECT  U.user_id AS user_id, U.first_name AS first_name, U.last_name AS last_name, A.album_name AS album_name, T.track_name AS track_name, TP.played_on AS played_on
FROM tracks_played TP
    INNER JOIN users U ON TP.user_id = U.user_id
    INNER JOIN album A ON TP.album_id = A.album_id AND TP.artist_id = A.artist_id
    INNER JOIN track T ON TP.track_id = T.track_id AND TP.album_id = T.album_id AND TP.artist_id = T.artist_id;",1.0,amd9210,,"SELECT U.user_id, U.first_name, U.last_name, A.album_name, T.track_name, P.played_on
FROM tracks_played P&#160;
&#160; &#160; JOIN users U ON U.user_id = P.user_id
&#160; &#160; JOIN track T ON P.artist_id = T.artist_id AND P.album_id = T.album_id AND P.track_id = T.track_id
&#160; &#160; JOIN album A ON P.artist_id = A.artist_id AND P.album_id = A.album_id
ORDER BY user_id, played_on",True,music,1.0,
8188,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,723","List all the tracks by the artist The Stone Roses and rank them by time length, from shortest to longest",Long Answer Question,"SELECT track_id, track_name, T.artist_id AS artist_id, album_id, time
FROM artist A
	INNER JOIN track T ON T.artist_id = A.artist_id
WHERE A.artist_name = 'The Stone Roses'
ORDER BY T.time;",1.0,amd9210,,"
SELECT&#160;T.*
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;The&#160;Stone&#160;Roses&#39;
ORDER&#160;BY&#160;T.time
",True,music,1.0,
8189,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,721","List all the track names, the corresponding album name, and the corresponding artist name",Long Answer Question,"SELECT track_name, artist_name, album_name
FROM track T
	INNER JOIN album A ON T.artist_id = A.artist_id AND T.album_id = A.album_id
    INNER JOIN artist AR ON T.artist_id = AR.artist_id;",1.0,amd9210,,"SELECT&#160;track_name,&#160;artist_name,&#160;album_name
FROM&#160;track&#160;T
&#160;&#160;JOIN&#160;artist&#160;R&#160;ON&#160;T.artist_id&#160;=&#160;R.artist_id
&#160;&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.album_id&#160;=&#160;T.album_id&#160;AND&#160;A.artist_id&#160;=&#160;T.artist_id",True,music,1.0,
8190,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,720",List the tracks for the album&#160;Second Coming,Long Answer Question,"SELECT*
FROM album A 
	INNER JOIN track T 
    ON A.album_id = T.album_id AND A.artist_id = T.artist_id
WHERE A.album_name = 'Second Coming';",1.0,amd9210,,"SELECT&#160;T.*
FROM&#160;track&#160;T&#160;
&#160; &#160; &#160;JOIN album A ON A.artist_id = T.artist_id AND A.album_id = T.album_id
WHERE&#160;A.album_name&#160;=&#160;&#39;Second&#160;Coming&#39;",True,music,1.0,
8191,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 3: Joins,"301,296",1,"5,119,719",List all the album names by the band New Order,Long Answer Question,"SELECT*
FROM artist AR
	INNER JOIN album AL ON AR.artist_id = AL.artist_id
WHERE AR.artist_name = 'New Order';",1.0,amd9210,,"SELECT R.artist_name, A.*
FROM&#160;artist&#160;R&#160;JOIN&#160;album&#160;A&#160;ON&#160;A.artist_id&#160;=&#160;R.artist_id
WHERE&#160;R.artist_name&#160;=&#160;&#39;New&#160;Order&#39;",True,music,1.0,
8192,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,680","Find all the tracks that include the word &quot;Love&quot; anywhere in the title. It is fine to include tracks where love is part of a bigger word (e.g., lovebird).",Long Answer Question,"SELECT*
FROM track
WHERE track_name LIKE 'Love%';",1.0,amd9210,,"SELECT&#160;*
FROM&#160;track
WHERE track_name LIKE &#39;%love%&#39;&#160;",True,music,1.0,
8193,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,679","List all the tracts for the artists with ids 1, 3, and 5. Show two variations of the query:&#160; one using the OR Boolean condition and one using the IN operation.",Long Answer Question,"SELECT track_id, track_name
FROM track
WHERE track_id = 1 OR track_id =3 OR track_id =5
ORDER BY track_name;



SELECT track_id, track_name
FROM track
WHERE track_id IN ('1', '3', '5')
ORDER BY track_name;",0.5,amd9210,"SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5



SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;IN&nbsp;(1,3,5)

","
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=&#160;1&#160;OR&#160;artist_id&#160;=&#160;3&#160;OR&#160;artist_id&#160;=&#160;5



SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;IN&#160;(1,3,5)


",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;=&nbsp;1&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;3&nbsp;OR&nbsp;artist_id&nbsp;=&nbsp;5



SELECT&nbsp;*
FROM&nbsp;track
WHERE&nbsp;artist_id&nbsp;IN&nbsp;(1,3,5)

"
8194,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,678","Find all albums with a title that begins with a character greater than E (not inclusive of albums that start with E) but less than S (again, not inclusive of albums that start with S).",Long Answer Question,"SELECT album_name
FROM album
WHERE album_name BETWEEN 'F' AND 'R'
ORDER BY album_name;",0.7,amd9210,"SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'","SELECT&#160;*
FROM&#160;album
WHERE&#160;album_name&#160;&gt;=&#160;&#39;F&#39;&#160;AND&#160;&#160;album_name&#160;&lt;&#160;&#39;S&#39;",True,music,1.0,"The feedback from the TA was SELECT&nbsp;*
FROM&nbsp;album
WHERE&nbsp;album_name&nbsp;&gt;=&nbsp;'F'&nbsp;AND&nbsp;&nbsp;album_name&nbsp;&lt;&nbsp;'S'"
8195,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,677",Find the tracks with names that are earlier alphabetically than (is less than) M. Note that inequality queries can be used with text and not only with numbers.,Long Answer Question,"SELECT track_name
FROM track
WHERE track_name < 'M'
ORDER BY track_name;",1.0,amd9210,,"SELECT&#160;*
FROM&#160;track
WHERE&#160;track_name&#160;&lt;&#160;&#39;M&#39;",True,music,1.0,
8196,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,676","Find the tracks for the artist with id 3, from the artist&#39;s album with id 2.",Long Answer Question,"SELECT track_name
FROM track
WHERE artist_id = 3 AND album_id = 2;


Shhh/Peaceful
In A Silent Way/It's About That Time",1.0,amd9210,,"
SELECT&#160;*
FROM&#160;track
WHERE&#160;artist_id&#160;=3&#160;and&#160;album_id&#160;=2&#160;
",True,music,1.0,
8197,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,675","Using the id of Rolling Stones from Question C.2, list all the albums of The Rolling Stones.",Long Answer Question,"SELECT album_name
FROM album
WHERE artist_id = 4;

Album name is Exile on Main Street ",1.0,amd9210,,"SELECT&#160;*
FROM&#160;album
WHERE&#160;artist_id&#160;=&#160;4",True,music,1.0,
8198,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,674",Show the entry for the artist named The Rolling Stones.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_name = 'The Rolling Stones';


Artist_id is 4",1.0,amd9210,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_name&#160;=&#160;&#39;The&#160;Rolling&#160;Stones&#39;",True,music,1.0,
8199,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2C: Filtering Queries,"301,294",1,"5,119,673",Show the entry for the artist with id equal to 5.,Long Answer Question,"SELECT*
FROM artist
WHERE artist_id = 5;

Artist name is The Stone Roses",1.0,amd9210,,"SELECT&#160;*
FROM&#160;artist
WHERE&#160;artist_id&#160;=&#160;5",True,music,1.0,
8200,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,651",List the ten shortest tracks in terms of playing time.,Long Answer Question,"SELECT*
FROM track
ORDER BY time
LIMIT 10;",1.0,amd9210,,"SELECT&#160;*
FROM&#160;track
ORDER&#160;BY&#160;time
LIMIT&#160;10",True,music,1.0,
8201,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,650","Show all the album names and the corresponding artist id, but do not show the album_id. Rename the album_name attribute to album_title.",Long Answer Question,"SELECT album_name AS album_title, artist_id
FROM album;",1.0,amd9210,,"SELECT&#160;artist_id,&#160;album_name&#160;AS&#160;album_title
FROM&#160;album",True,music,1.0,
8202,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,649","List all the names of the artists, without the artist ids, sorted alphabetically.",Long Answer Question,"SELECT artist_name
FROM artist
ORDER BY artist_name;",1.0,amd9210,,"SELECT&#160;artist_name
FROM&#160;artist
ORDER&#160;BY&#160;artist_name",True,music,1.0,
8203,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,648",Show all the tracks.,Long Answer Question,"SELECT* 
FROM track;",1.0,amd9210,,"SELECT&#160;*&#160;
FROM&#160;track",True,music,1.0,
8204,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,647",Show all the albums.,Long Answer Question,"SELECT*
FROM album;",1.0,amd9210,,"SELECT&#160;*&#160;
FROM&#160;album",True,music,1.0,
8205,"Databases for Business Analytics, MSQM SU23","277,478",Assignment 2B: Selection Queries,"301,293",1,"5,119,646",Show all the artists.,Long Answer Question,"SELECT*
FROM artist;",1.0,amd9210,,"SELECT&#160;*&#160;
FROM&#160;artist",True,music,1.0,
